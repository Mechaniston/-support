
// Возвращает тип хранения Файла по его хешу из ФайлОбъект.ПутьКФайлу и размеру из ФайлОбъект.Размер, согласно РС.УказательНаФайлы
Функция ПолучитьТипХраненияФайла(ФайлОбъект) Экспорт
	
	ХешСумма = ФайлОбъект.ПутьКфайлу;
	Размер = ФайлОбъект.Размер;
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УказательНаФайлы_ат.ТипХранения.Ссылка
	               |ИЗ
	               |	РегистрСведений.УказательНаФайлы_ат КАК УказательНаФайлы_ат
	               |ГДЕ
	               |	УказательНаФайлы_ат.ХешСумма = &ХешСумма
	               |	И УказательНаФайлы_ат.РазмерФайла = &Размер";
				   
	Запрос.УстановитьПараметр("ХешСумма",ХешСумма);
	Запрос.УстановитьПараметр("Размер", Размер);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		ТипХранения = Выборка.ТипХраненияСсылка;
	КонецЕсли;
	
	Возврат ТипХранения;
	
КонецФункции

// Записываем хеш в РС.УказательНаФайлы, если это двоичные данные
Функция ЗаписатьХешКодФайлаВРСУказательНаФайлыПоДвоичнымДанным(ХешКод, Том, Путь, Размер, ТипХранения) Экспорт
	
	НаборЗаписей = РегистрыСведений.УказательНаФайлы_ат.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.ХешСумма = ХешКод;
	Запись.Путь = Путь;
	Запись.Том = Том;
	Запись.ТипХранения = ТипХранения;
	Запись.РазмерФайла = Размер;
	
	НаборЗаписей.Записать(Истина);
	
КонецФункции

// Функция возвращает структуру, где находятся реквизиты размещения файла "Путь" и "Том" и "СсылкаВБазе" для размещения в базе.
// Поиск идет в РС.УказательНаФайлы по хешкоду, если хеш код не найден, то возвращаем "Неопределено"
Функция ПолучитьСтруктуруРазмещенияФайлаПоХешКоду(ХешКод) Экспорт
	
	Запись = РегистрыСведений.УказательНаФайлы_ат.СоздатьМенеджерЗаписи();
	Запись.ХешСумма = ХешКод;
	Запись.Прочитать();
	
	Если Запись.Выбран() Тогда 
		СтруктураРазмещенияФайла = Новый Структура;
		СтруктураРазмещенияФайла.Вставить("Путь", Запись.Путь);
		СтруктураРазмещенияФайла.Вставить("Том", Запись.Том);
		СтруктураРазмещенияФайла.Вставить("СсылкаВБазе", Запись.СсылкаВБазе);
		
		Возврат СтруктураРазмещенияФайла;
	Иначе	
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Преобразует объект в двоичные данные
Функция ПреобразоватьСериализуемыйОбъектВДвоичныеДанные(ОбъектСериализацииИзХранилищаЗнчений) Экспорт
	
	//Попытка
	//	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	//	ЗначениеВФайл(ИмяВременногоФайла, ОбъектСериализацииИзХранилищаЗнчений);
	//	ОбъектДвоичныеДанные = Новый ДвоичныеДанные(ИмяВременногоФайла);
	//	УдалитьФайлы(ИмяВременногоФайла);
	//Исключение
	//	Сообщить("Не удалось записать временый файл для получения двоичных данных объекта");
	//	Возврат Неопределено;
	//КонецПопытки;
	
	Возврат ОбъектСериализацииИзХранилищаЗнчений.Получить();//ОбъектДвоичныеДанные;
	
КонецФункции

// Возвращает контрольную сумму CRC32 на осове двоичных данных на входе 
Функция ПолучитьХешКодДвоичныхДанных(ДвоичныеДанные) Экспорт
	
	Если ДвоичныеДанные = Неопределено Тогда
		КонтрольнаяСумма = 0;
		Возврат КонтрольнаяСумма;
	Иначе
		ХешCRC32 = Новый ХешированиеДанных(ХешФункция.CRC32);
		ХешCRC32.Добавить(ДвоичныеДанные);
		КонтрольнаяСумма = ХешCRC32.ХешСумма;
		Возврат КонтрольнаяСумма;
	КонецЕсли;
	
КонецФункции

//Возвращает Истина, если запись в РС.УказательНаФайлы существует
Функция ХешФайлаУникален(ХешКод, Размер) Экспорт
	
	Запись = РегистрыСведений.УказательНаФайлы_ат.СоздатьМенеджерЗаписи();
	Запись.ХешСумма = ХешКод;
	ЗАпись.РазмерФайла = Размер;
	Запись.Прочитать();
	Если Запись.Выбран()Тогда 
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

// Возвращает пролный путь (с учётом тома, но только для windows-сервера) к файлу, если есть запись в РС.УказательНаФайлы существует
Функция ПолучитьПолныйПутьКФайлу(ХешСумма, Размер) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УказательНаФайлы_ат.Путь КАК ПутьВТоме,
	|	УказательНаФайлы_ат.Том.ПолныйПутьWindows КАК ПутьКТому
	|ИЗ
	|	РегистрСведений.УказательНаФайлы_ат КАК УказательНаФайлы_ат
	|ГДЕ
	|	УказательНаФайлы_ат.ХешСумма = &ХешСумма
	|	И УказательНаФайлы_ат.РазмерФайла = &Размер";
	
	Запрос.УстановитьПараметр("ХешСумма",ХешСумма);
	Запрос.УстановитьПараметр("Размер", Размер);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		Путь = Выборка.ПутьКТому + Выборка.ПутьВТоме;
	Иначе  
		Путь = "";
	КонецЕсли;
	
	Возврат Путь;
	
КонецФункции
