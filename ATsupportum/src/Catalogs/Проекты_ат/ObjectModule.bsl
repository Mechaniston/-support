
Перем ИзменятьДочерние Экспорт;
Перем ПроектСНаследуемымиПараметрами Экспорт;

Процедура ПередЗаписью(Отказ)
	
	Справочники.Проекты_ат.СгенерироватьНаименования(ЭтотОбъект);
	
	Если НЕ Родитель.Пустая() Тогда
		
		Клиент = Родитель.Клиент;
		Договор = Родитель.Договор;
		
	КонецЕсли;
	
	Если НаследоватьПараметры
		И НЕ Родитель.Пустая()
		И (ЭтоНовый()
			ИЛИ Родитель <> Ссылка.Родитель
			ИЛИ НаследоватьПараметры <> Ссылка.НаследоватьПараметры) Тогда
		
		ПересчитатьСвойстваПроекта(Родитель);
		
	КонецЕсли;
	
	Если НЕ ИзменятьДочерние Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Наименование = Ссылка.Наименование
		И НаименованиеДляОтчетов = Ссылка.НаименованиеДляОтчетов
		И Архивный = Ссылка.Архивный
		И БудущихПериодов = Ссылка.БудущихПериодов
		И НеСогласовыватьРаботы = Ссылка.НеСогласовыватьРаботы
		И Ответственный = Ссылка.Ответственный
		И Клиент = Ссылка.Клиент 
		И Договор = Ссылка.Договор Тогда
		
		ИзменятьДочерние = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ИзменятьДочерние Тогда
		
		ПересчитатьСвойстваДочернихПроектов();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПересчитатьСвойстваПроекта(Знач ТекСсылка)
	
	Если НЕ ЗначениеЗаполнено(ПроектСНаследуемымиПараметрами) Тогда
		
		ОпределитьПроектСНаследуемымиПараметрами(ТекСсылка);
		
	КонецЕсли;
	
	Архивный = ПроектСНаследуемымиПараметрами.Архивный;	
	БудущихПериодов = ПроектСНаследуемымиПараметрами.БудущихПериодов;
	НеСогласовыватьРаботы = ПроектСНаследуемымиПараметрами.НеСогласовыватьРаботы;
	Ответственный = ПроектСНаследуемымиПараметрами.Ответственный;
	
КонецПроцедуры 

Процедура ОпределитьПроектСНаследуемымиПараметрами(ТекСсылка)
	
	Если ТекСсылка.Родитель.Пустая() Тогда
		
		ПроектСНаследуемымиПараметрами = ТекСсылка;
		
	ИначеЕсли ТекСсылка.Родитель.НаследоватьПараметры Тогда	
		
		ПроектСНаследуемымиПараметрами = ТекСсылка.Родитель;
		
	Иначе	
		
		ОпределитьПроектСНаследуемымиПараметрами(ТекСсылка.Родитель);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПересчитатьСвойстваДочернихПроектов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Проекты_ат.Ссылка КАК Ссылка,
		|	Проекты_ат.НаследоватьПараметры
		|ИЗ
		|	Справочник.Проекты_ат КАК Проекты_ат
		|ГДЕ
		|	Проекты_ат.Ссылка В ИЕРАРХИИ(&Ссылка)
		|	И НЕ Проекты_ат.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка ИЕРАРХИЯ";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДочернийПроект = Выборка.Ссылка.ПолучитьОбъект();
		
		Если Выборка.НаследоватьПараметры Тогда
			
			Если НЕ ЗначениеЗаполнено(ПроектСНаследуемымиПараметрами) Тогда
				
				ОпределитьПроектСНаследуемымиПараметрами(Ссылка);
				
			КонецЕсли;
			
			ДочернийПроект.Архивный = ПроектСНаследуемымиПараметрами.Архивный;
			ДочернийПроект.БудущихПериодов = ПроектСНаследуемымиПараметрами.БудущихПериодов;
			ДочернийПроект.НеСогласовыватьРаботы = ПроектСНаследуемымиПараметрами.НеСогласовыватьРаботы;
			ДочернийПроект.Ответственный = ПроектСНаследуемымиПараметрами.Ответственный;
			
		КонецЕсли;
		
		ДочернийПроект.ИзменятьДочерние = Ложь;
		ДочернийПроект.ПроектСНаследуемымиПараметрами = ПроектСНаследуемымиПараметрами;
		
		ДочернийПроект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры 	

Процедура ПриКопировании(ОбъектКопирования)
	
	ДоступныеМетки.Загрузить(ОбъектКопирования.ДоступныеМетки.Выгрузить());
	ОбластиЗнаний.Загрузить(ОбъектКопирования.ОбластиЗнаний.Выгрузить());
	Кураторы.Загрузить(ОбъектКопирования.Кураторы.Выгрузить());
	Продукты.Загрузить(ОбъектКопирования.Продукты.Выгрузить());
	
КонецПроцедуры

ИзменятьДочерние = Истина;
