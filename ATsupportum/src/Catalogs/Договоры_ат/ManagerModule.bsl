
#Область ПрограммныйИнтерфейс

Функция   ПолучитьИмяРегистраСпецификацииДляТипаДоговора(ТипДоговора) Экспорт
	
	Если ТипДоговора = Перечисления.ТипыДоговоров_ат.АрендаПрограммныхПродуктов Тогда
		
		ИмяРегистра = "СпецификацияДоговоров_АрендаПрограммныхПродуктов_ат";
		
	ИначеЕсли ТипДоговора = Перечисления.ТипыДоговоров_ат.АрендаСерверов Тогда
		
		ИмяРегистра = "СпецификацияДоговоров_АрендаСерверов_ат";
		
	ИначеЕсли ТипДоговора = Перечисления.ТипыДоговоров_ат.Интернет Тогда
		
		ИмяРегистра = "СпецификацияДоговоров_Интернет_ат";
		
	ИначеЕсли ТипДоговора = Перечисления.ТипыДоговоров_ат.ИТС Тогда
		
		ИмяРегистра = "СпецификацияДоговоров_ИТС_ат";
		
	ИначеЕсли ТипДоговора = Перечисления.ТипыДоговоров_ат.Обслуживание Тогда
		
		ИмяРегистра = "СпецификацияДоговоров_Обслуживание_ат";
		
	ИначеЕсли ТипДоговора = Перечисления.ТипыДоговоров_ат.Телефония Тогда
		
		ИмяРегистра = "СпецификацияДоговоров_Телефония_ат";
		
	Иначе
		
		ИмяРегистра = Неопределено;
		
	КонецЕсли;
	
	Возврат ИмяРегистра;
	
КонецФункции

Функция   ПолучитьНовыйНомерДоговора(Договор) Экспорт
	
	Если ЗначениеЗаполнено(Договор.Родитель) Тогда
		
		Возврат ПолучитьНомерПодчиненногоДоговора(Договор);
		
	Иначе
		
		СтруктураНомера = Нумераторы_ат.ПолучитьПредварительныйНомерОбъекта(Договор.Ссылка, Договор.ДатаДоговора); //TODO - реализовать возможносить разделения нумерации по организациям
		
		Если ТипЗнч(СтруктураНомера) = Тип("Структура") И СтруктураНомера.Свойство("Номер") Тогда
			
			Возврат СтруктураНомера;
			
		Иначе
			
			Сообщить("Ошибка определения нового номера договора!", СтатусСообщения.Внимание);
			Возврат 0;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

Функция   ПолучитьНомерПодчиненногоДоговора(Договор) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(Договоры_ат.НомерДоговора), 0) КАК МаксимальныйНомер
		|ИЗ
		|	Справочник.Договоры_ат КАК Договоры_ат
		|ГДЕ
		|	НЕ Договоры_ат.ПометкаУдаления
		|	И Договоры_ат.Родитель = &Родитель
		|	И Договоры_ат.Ссылка <> &Ссылка";
	Запрос.УстановитьПараметр("Родитель", Договор.Родитель);
	Запрос.УстановитьПараметр("Ссылка", Договор.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.МаксимальныйНомер + 1;
	
КонецФункции

Процедура ЗаполнитьНаименованияДоговора(Договор) Экспорт
	
	ДопСоглашение = ЭтоДопСоглашение(Договор);
	
	Если ДопСоглашение Тогда
		
		Договор.НаименованиеКраткое = ПредставлениеНомера(Договор, ДопСоглашение)
			+ " от " + Формат(Договор.ДатаДоговора, "ДФ=dd.MM.yy");
		
		Договор.Наименование = "Д/с №" + Договор.НаименованиеКраткое + " к дог. №" + Договор.Родитель.Наименование;
		
		Договор.НаименованиеПолное = "Дополнительное соглашение №"
			+ ПредставлениеНомера(Договор, ДопСоглашение)
			+ " от " + Формат(Договор.ДатаДоговора, "ДФ='dd.MM.yyyy""г.""'")
			+ " к Договору №" + Договор.Родитель.Наименование;
		
	Иначе
		
		Договор.НаименованиеКраткое = ПредставлениеНомера(Договор, ДопСоглашение)
			+ " от " + Формат(Договор.ДатаДоговора, "ДФ=dd.MM.yy");
		
		Договор.Наименование = Договор.НаименованиеКраткое;
		
		Договор.НаименованиеПолное = ПредставлениеНомера(Договор, ДопСоглашение)
				+ " от " + Формат(Договор.ДатаДоговора, "ДФ='dd.MM.yyyy""г.""'");
		
	КонецЕсли;
	
КонецПроцедуры

// ОкончаниеСклонения = (а, у) - (родительный, дательный)
Функция   ПредставлениеДоговораВПадеже(Договор, Полное = Ложь, ОкончаниеСклонения = "") Экспорт
	
	Если ЭтоДопСоглашение(Договор) Тогда
		
		Если Полное И Не ПустаяСтрока(Договор.Родитель.НаименованиеПолное) Тогда
			Если ОкончаниеСклонения = "у" Тогда
				
				Представление = "Дополнительному соглашению №" + Договор.НаименованиеКраткое
					+ " к Договору " + Договор.Родитель.НаименованиеПолное;
				
			ИначеЕсли ОкончаниеСклонения = "а" Тогда
				
				Представление = "Дополнительного соглашения №" + Договор.НаименованиеКраткое
					+ " к Договору " + Договор.Родитель.НаименованиеПолное;
				
			Иначе
				
				Представление = Договор.НаименованиеПолное
				
			КонецЕсли;
			
		Иначе
			
			Представление = Договор.Наименование;
			
		КонецЕсли;
		
	Иначе
		
		Если Полное И Не ПустаяСтрока(Договор.НаименованиеПолное) Тогда
			Представление = "Договор" + ОкончаниеСклонения + " №" + Договор.НаименованиеПолное;
		Иначе
			Представление = "Дог. №" + Договор.НаименованиеКраткое;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

Функция   ПолучитьПолныйНомерДоговора(Договор) Экспорт
	
	ПолныйНомерДоговора = "";
	
	Если ЭтоДопСоглашение(Договор) Тогда
		
		Если Договор.Родитель.НомерДоговора > 0 Тогда
			ПолныйНомерДоговора = Формат(Договор.Родитель.НомерДоговора, "ЧРГ=-; ЧГ=3,0");
		Иначе //!!!!!
			ПолныйНомерДоговора = Строки_КлиентСервер_ат.ПолучитьНомерТикета(Договор.Родитель.Код, Договор.Родитель.ДатаДоговора, Ложь);
		КонецЕсли;
		
		Если Договор.НомерДоговора > 0 Тогда
			ПолныйНомерДоговора = ПолныйНомерДоговора + "#" + Формат(Договор.НомерДоговора, "ЧГ=");
		КонецЕсли;
		
	Иначе
		
		Если Договор.НомерДоговора > 0 Тогда
			ПолныйНомерДоговора = Формат(Договор.НомерДоговора, "ЧРГ=-; ЧГ=3,0");
		Иначе //!!!!!
			ПолныйНомерДоговора = Строки_КлиентСервер_ат.ПолучитьНомерТикета(Договор.Код, Договор.ДатаДоговора, Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ПолныйНомерДоговора;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Наименование");
	Поля.Добавить("НаименованиеКраткое");
	Поля.Добавить("НаименованиеВнутреннее");
	Поля.Добавить("Родитель");
	Поля.Добавить("Ссылка");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЭтоДопСоглашение(Данные.Ссылка) Тогда
		
		Если ВнутреннегоИспользования_КлиентСерверПовтИсп_ат.СотрудникОрганизации() Тогда
			
			Если НЕ ПустаяСтрока(Данные.Родитель.НаименованиеВнутреннее) Тогда
				Представление = Данные.Родитель.НаименованиеВнутреннее;
			Иначе
				Представление = Данные.Родитель.Наименование;
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(Представление) Тогда
				Представление = Представление + ", ";
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(Данные.НаименованиеВнутреннее) Тогда
				Представление = Представление + Данные.НаименованиеВнутреннее;
			Иначе
				Представление = Представление + "д/с " + Данные.НаименованиеКраткое;
			КонецЕсли;
			
		Иначе
			
			Представление = Данные.Родитель.Наименование + ", д/с " + Данные.НаименованиеКраткое;
			
		КонецЕсли;
		
	Иначе
		
		Если ВнутреннегоИспользования_КлиентСерверПовтИсп_ат.СотрудникОрганизации()
			 И НЕ ПустаяСтрока(Данные.НаименованиеВнутреннее) Тогда
			
			Представление = Данные.НаименованиеВнутреннее;
			
		Иначе
			
			Представление = Данные.Наименование;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция   ПредставлениеНомера(Договор, ЭтоДопСоглашение)
	
	Возврат ?(Договор.НомерДоговора = 0, "б/н",
		?(ЭтоДопСоглашение, "", Договор.ПрефиксНомера)
			//+ Формат(Договор.НомерДоговора, "ЧГ=")
			+ Формат(Договор.НомерДоговора, "ЧРГ=-; ЧГ=3,0")
			+ ?(ЭтоДопСоглашение, "", Договор.ПостфиксНомера));
	
КонецФункции

Функция   ЭтоДопСоглашение(Договор)
	
	Возврат Договор <> Неопределено И НЕ Договор.Родитель.Пустая();
	
КонецФункции

#КонецОбласти
