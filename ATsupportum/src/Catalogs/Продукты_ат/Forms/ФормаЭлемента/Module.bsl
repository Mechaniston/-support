
#Область ЛокальныеПеременные

#Область Комментарии

&НаКлиенте
Перем КоординатыЗаменяемогоСлова, СоответствиеКомандЗаменыСловам;

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УправляемыеФормы_Сервер_ат.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	#Область Комментарии
	
	ЗагрузитьКомментарии(Ложь);
	
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправляемыеФормы_Сервер_ат.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	#Область Комментарии
	
	ЗагрузитьКомментарии(Истина);
	
	#КонецОбласти
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправляемыеФормы_Клиент_ат.ПриОткрытии(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	УправляемыеФормы_Клиент_ат.ПередЗаписью(ЭтаФорма, Отказ, ПараметрыЗаписи);
	
	#Область Комментарии
	
	Если КомментарийВнутреннийСформирован Тогда
		
		Элементы.КомментарийВнутренний.Документ.body.innerHTML =
			ПроверкаОрфографии_Клиент_ат.УдалитьИзТекстаHTMLТэгиВыделения(Элементы.КомментарийВнутренний.Документ.body.innerHTML);
		
		КомментарийВнутренний = Элементы.КомментарийВнутренний.Документ.documentElement.outerHTML;
		
		РаботаСHTML_Клиент_ат.ВключитьВозможностьРедактирования(ЭтаФорма,
			Элементы.КомментарийВнутренний, Элементы.КомментарийВнутренний_КоманднаяПанель, Истина);
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УправляемыеФормы_Сервер_ат.ПриЗаписиНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
	#Область Комментарии
	
	Комментарии_ат.СохранитьКомментарий(ЭтаФорма, ТекущийОбъект.Ссылка);
	Комментарии_ат.СохранитьКомментарийВнутренний(ЭтаФорма, ТекущийОбъект.Ссылка);
	Комментарии_ат.СохранитьКомментарийКлиента(ЭтаФорма, ТекущийОбъект.Ссылка);
	
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиДействийПользователя

&НаКлиенте
Процедура ТипПродуктаПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверятьОбновленияПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеФормой()
	
	Элементы.Количество.Видимость = Истина;
	Элементы.Количество.ТолькоПросмотр = Ложь;
	
	Если Объект.ТипПродукта = Перечисления.ТипыПродуктов_ат.Конфигурация1С Тогда		// Конфигурация 1С
		
		Элементы.КодДляНаименованияИБ.Видимость = Истина;
		
		Объект.Количество = 0; // не контроллировать
		Элементы.Количество.Видимость = Ложь;
		
		Если НЕ ЗначениеЗаполнено(Объект.Поставщик) Тогда
			Объект.Поставщик = Справочники.Контрагенты_ат.ОдинЭс;
		КонецЕсли;
		
		Элементы.ПроверятьОбновления.Видимость = Истина;
		
	ИначеЕсли Объект.ТипПродукта = Перечисления.ТипыПродуктов_ат.Сервер1С Тогда			// Сервер 1С
		
		Объект.Количество = 1;
		Элементы.Количество.ТолькоПросмотр = Истина;
		
		Если НЕ ЗначениеЗаполнено(Объект.Поставщик) Тогда
			Объект.Поставщик = Справочники.Контрагенты_ат.ОдинЭс;
		КонецЕсли;
		
		Элементы.ПроверятьОбновления.Видимость = Истина;
		
	ИначеЕсли Объект.ТипПродукта = Перечисления.ТипыПродуктов_ат.Платформа1С Тогда		// Платформа 1С
		
		Объект.Количество = 0; // не контроллировать
		Элементы.Количество.Видимость = Ложь;
		
		Если НЕ ЗначениеЗаполнено(Объект.Поставщик) Тогда
			Объект.Поставщик = Справочники.Контрагенты_ат.ОдинЭс;
		КонецЕсли;
		
		Элементы.ПроверятьОбновления.Видимость = Истина;
		
	ИначеЕсли Объект.ТипПродукта = Перечисления.ТипыПродуктов_ат.КлиентскаяЛицензия1С	// КлиентскаяЛицензия 1С
		ИЛИ Объект.ТипПродукта = Перечисления.ТипыПродуктов_ат.КлючUSB1С Тогда			// КлючUSB 1С
		
		//Объект.Количество = 1; // Mechanist - почему-то было так, непонятно..
		//Элементы.Количество.ТолькоПросмотр = Истина;
		
		Если НЕ ЗначениеЗаполнено(Объект.Поставщик) Тогда
			Объект.Поставщик = Справочники.Контрагенты_ат.ОдинЭс;
		КонецЕсли;
		
	Иначе																				// ! Все прочие продукты
		
		Элементы.ПроверятьОбновления.Видимость = Ложь;
		Объект.ПроверятьОбновления = Ложь;
		
	КонецЕсли;
	
	Если Объект.ТипПродукта = Перечисления.ТипыПродуктов_ат.СерверMSWindows				// Сервер MS Windows + доступ (RDP)
		ИЛИ Объект.ТипПродукта = Перечисления.ТипыПродуктов_ат.УдаленныйДоступMSServer Тогда
		
		Объект.Количество = 1;
		Элементы.Количество.Видимость = Ложь;
		
		Если НЕ ЗначениеЗаполнено(Объект.Поставщик) Тогда
			Объект.Поставщик = Справочники.Контрагенты_ат.Microsoft;			
		КонецЕсли;
		
	ИначеЕсли Объект.ТипПродукта = Перечисления.ТипыПродуктов_ат.ПрочийППMS Тогда			// прочий ПП MS
		
		Объект.Количество = 0;
		Элементы.Количество.Видимость = Истина;
		
		Если НЕ ЗначениеЗаполнено(Объект.Поставщик) Тогда
			Объект.Поставщик = Справочники.Контрагенты_ат.Microsoft;			
		КонецЕсли;	
		
	ИначеЕсли Объект.ТипПродукта = Перечисления.ТипыПродуктов_ат.СерверMSSQL			// Сервер MS SQL
		ИЛИ Объект.ТипПродукта = Перечисления.ТипыПродуктов_ат.КлиентскийДоступMSSQLServer
		ИЛИ Объект.ТипПродукта = Перечисления.ТипыПродуктов_ат.УдаленныйДоступMSServer Тогда
		
		Если НЕ ЗначениеЗаполнено(Объект.Поставщик) Тогда
			Объект.Поставщик = Справочники.Контрагенты_ат.Microsoft;
		КонецЕсли;
		
	КонецЕсли;
	
	//////////
	
	Если Объект.ПроверятьОбновления Тогда
		
		Элементы.НаименованиеУПоставщика.Заголовок = "Наименование для обновления версии";
		
		Если НЕ Объект.ТипПродукта = Перечисления.ТипыПродуктов_ат.Конфигурация1С Тогда	// НЕ Конфигурация 1С
			
			МассивНаименований = Новый Массив;
			МассивНаименований.Добавить("Технологическая платформа 8.3");
			МассивНаименований.Добавить("Технологическая платформа 8.2");
			
			Элементы.НаименованиеУПоставщика.СписокВыбора.ЗагрузитьЗначения(МассивНаименований);
			
			Элементы.НаименованиеУПоставщика.РедактированиеТекста = Ложь;
			Элементы.НаименованиеУПоставщика.КнопкаВыпадающегоСписка = Истина;
			
			Если МассивНаименований.Найти(Объект.НаименованиеУПоставщика) = Неопределено Тогда
				Объект.НаименованиеУПоставщика = "";
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Элементы.НаименованиеУПоставщика.Заголовок = "";
		
		Элементы.НаименованиеУПоставщика.СписокВыбора.Очистить();
		Элементы.НаименованиеУПоставщика.РедактированиеТекста = Истина;
		Элементы.НаименованиеУПоставщика.КнопкаВыпадающегоСписка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры 
	
#КонецОбласти 

#Область УниверсальныеОбработчикиДействий

&НаКлиенте
Процедура ОбработчикУниверсальныхДействий(Команда)
	
	УправляемыеФормы_Клиент_ат.ДополнительныеДействияФормы(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаСервере
Функция   ОбработчикУниверсальныхДействий_Сервер(Элемент) Экспорт
	
	Возврат УправляемыеФормы_Сервер_ат.ДополнительныеДействияФормы(ЭтаФорма, Команды[Элемент.Имя]);
	
КонецФункции

#КонецОбласти

#Область Комментарии

&НаСервере
Процедура ЗагрузитьКомментарии(СозданиеФормы)
	
	Если НЕ СозданиеФормы Тогда
		
		Комментарии_ат.ЗагрузитьКомментарий(ЭтаФорма, Объект.Ссылка);
		Комментарии_ат.ЗагрузитьКомментарийКлиента(ЭтаФорма, Объект.Ссылка);
		
	КонецЕсли;
	
	Если НЕ СозданиеФормы ИЛИ Объект.Ссылка.Пустая() Тогда
		
		Комментарии_ат.ЗагрузитьКомментарийВнутренний(ЭтаФорма, Объект.Ссылка);
		
	КонецЕсли;
	
	Если СозданиеФормы И Элементы.КомментарийВнутренний.Видимость И НЕ Элементы.КомментарийВнутренний.ТолькоПросмотр Тогда
		
		РаботаСHTML_Сервер_ат.СоздатьПанелиРаботыСHTML(ЭтаФорма, Элементы.КомментарийВнутренний_КоманднаяПанель,
			"КомментарийВнутренний_ОбработчикКоманд", , Элементы.КомментарийВнутренний.КонтекстноеМеню);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийВнутреннийДокументСформирован(Элемент)
	
	КомментарийВнутреннийСформирован = Истина;
	
	//ДобавитьОбработчик Элемент.Документ.Body.oncontextmenu, ОбработчикСобытийВнутреннегоКомментария;
	
	РаботаСHTML_Клиент_ат.УстановитьДоступностьПанелейРедактирования(Элементы.КомментарийВнутренний_КоманднаяПанель,
		Элементы.КомментарийВнутренний, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийВнутреннийПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	РаботаСHTML_Клиент_ат.ИзменитьПометкиКнопок(Элементы.КомментарийВнутренний_КоманднаяПанель,
		Элементы.КомментарийВнутренний.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСобытийВнутреннегоКомментария(Событие)
	
	Если Событие.type = "contextmenu" Тогда
		
		ПолеМожноРедактировать = РаботаСHTML_Клиент_ат.HTMLПолеМожноРедактировать(Элементы.КомментарийВнутренний);
		
		Для каждого ЭлементКонтекстногоМеню Из Элементы.КомментарийВнутренний.ПодчиненныеЭлементы Цикл
			
			Если НЕ ЭлементКонтекстногоМеню.Имя = "КомментарийВнутренний_КонтекстноеМеню_ВключитьВозможностьРедактирования"
				И НЕ ЭлементКонтекстногоМеню.Имя = "КомментарийВнутренний_КонтекстноеМеню_ПроверитьОрфографию" Тогда
				
				ЭлементКонтекстногоМеню.Доступность = ПолеМожноРедактировать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ПолеМожноРедактировать Тогда
			
			Если Событие.srcElement.id = "red_marker" Тогда
				
				РаботаСHTML_Клиент_ат.ОбработатьВызовКонтекстногоМеню(Событие, КоординатыЗаменяемогоСлова, СоответствиеКомандЗаменыСловам);	
				
				ИзменитьКонтестноеМенюЗаменыСловВнутреннегоКомментария(СоответствиеКомандЗаменыСловам);
				
			Иначе
				
				ИзменитьКонтестноеМенюЗаменыСловВнутреннегоКомментария(Неопределено, Истина);
				
			КонецЕсли;
			
		Иначе
			
			ИзменитьКонтестноеМенюЗаменыСловВнутреннегоКомментария(Неопределено, Истина);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьКонтестноеМенюЗаменыСловВнутреннегоКомментария(СоответствиеКомандЗаменыСловам, ТолькоОчистить = Ложь)
	
	РаботаСHTML_Сервер_ат.ИзменитьКонтестноеМенюЗаменыСловПоляHTML(ЭтаФорма,
		Элементы.КомментарийВнутренний.КонтекстноеМеню, СоответствиеКомандЗаменыСловам,
		ТолькоОчистить, "КомментарийВнутренний_ОбработчикКоманд");
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийВнутренний_ОбработчикКоманд(Команда, ВыбранноеЗначение)
	
	РаботаСHTML_Клиент_ат.ОбработчикКомандРаботыСHTML(ЭтаФорма, Команда, ВыбранноеЗначение,
		Элементы.КомментарийВнутренний, Элементы.КомментарийВнутренний_КоманднаяПанель,
		КоординатыЗаменяемогоСлова, СоответствиеКомандЗаменыСловам);
	
КонецПроцедуры

#КонецОбласти
