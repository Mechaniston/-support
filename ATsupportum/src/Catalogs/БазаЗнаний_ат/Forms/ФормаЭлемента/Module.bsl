
&НаКлиенте
Перем КоординатыЗаменяемогоСлова;

&НаКлиенте
Перем СоответствиеКомандЗаменыСловам;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ОбластьЗнаний = Параметры.ОбластьЗнаний;
		
		Если ЗначениеЗаполнено(ОбластьЗнаний) Тогда
			Объект.ОбластьЗнаний = ОбластьЗнаний;
		КонецЕсли;
		
	КонецЕсли;
	
	УправляемыеФормы_Сервер_ат.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	Элементы.ФормаИспользоватьОтборПоПроектам.Пометка = Ложь;
	Элементы.ФормаИспользоватьОтборПоПроектам.Видимость = Ложь;
	Метки_Сервер_ат.ОбновитьМетки(ЭтаФорма, Объект.Ссылка);
	ОбновитьКоличествоВыбранныхМеток();
	
	ЕстьПравоИзменятьМетки = РольДоступна("ПолныеПрава") ИЛИ РольДоступна("ИспользованиеБазыЗнаний_ат");
	
	Элементы.Содержание.ПоложениеЗаголовка = ?(ЕстьПравоИзменятьМетки, ПоложениеЗаголовкаЭлементаФормы.Нет, ПоложениеЗаголовкаЭлементаФормы.Авто);
	Элементы.ГруппаМетки.Видимость = ЕстьПравоИзменятьМетки;
	Элементы.ГруппаСтраницы.ОтображениеСтраниц = ?(ЕстьПравоИзменятьМетки, ОтображениеСтраницФормы.ЗакладкиСверху, ОтображениеСтраницФормы.Нет);
		
	РаботаСHTML_Сервер_ат.СоздатьВременныеФайлыКартинокТекста(Объект, "Содержание", ЭтаФорма);
	Содержание = Объект.Содержание;
	
	РаботаСHTML_Сервер_ат.СоздатьПанелиРаботыСHTML(ЭтаФорма, Элементы.КомманднаяПанельКнопокРедактированияHTML,
		"ОбработчикКомандРаботыСHTML", Истина, Элементы.СодержаниеКонтекстноеМеню);
	
	СотрудникОрганизации = ВнутреннегоИспользования_КлиентСерверПовтИсп_ат.СотрудникОрганизации();
	Элементы.КомманднаяПанельКнопокРедактированияHTML.Видимость = СотрудникОрганизации;
	Элементы.СодержаниеКонтекстноеМеню.Доступность = СотрудникОрганизации;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправляемыеФормы_Клиент_ат.ПриОткрытии(ЭтаФорма, Отказ);
	
	//УстановитьИспользованиеРодителей(Метки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	УправляемыеФормы_Клиент_ат.ПриПовторномОткрытии(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	УправляемыеФормы_Клиент_ат.ПередЗакрытием(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	УправляемыеФормы_Клиент_ат.ПриЗакрытии(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	УправляемыеФормы_Клиент_ат.ОбработкаВыбора(ЭтаФорма, ВыбранноеЗначение, ИсточникВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	УправляемыеФормы_Клиент_ат.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	
	Если ИмяСобытия = "ЗаписьРешения"
	   И Источник = ЭтаФорма Тогда
		
		Объект.ОсновноеРешение = Параметр;
		Модифицированность = Истина;
		
	ИначеЕсли ИмяСобытия = "ОбновленСписокМеток" Тогда
		
		ОбновитьМетки();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	
	УправляемыеФормы_Клиент_ат.ОбработкаАктивизации(ЭтаФорма, АктивныйОбъект, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	УправляемыеФормы_Клиент_ат.ОбработкаЗаписиНового(ЭтаФорма, НовыйОбъект, Источник, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УправляемыеФормы_Сервер_ат.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	УправляемыеФормы_Клиент_ат.ПередЗаписью(ЭтаФорма, Отказ, ПараметрыЗаписи);
	
	РаботаСHTML_Клиент_ат.ОбработатьHTMLПередЗаписью(Элементы.Содержание);
	Элементы.Содержание.Документ.body.InnerHTML =
		ПроверкаОрфографии_Клиент_ат.УдалитьИзТекстаHTMLТэгиВыделения(Элементы.Содержание.Документ.body.InnerHTML);
	Объект.Содержание = Элементы.Содержание.Документ.documentElement.outerHTML;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УправляемыеФормы_Сервер_ат.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УправляемыеФормы_Сервер_ат.ПриЗаписиНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
	Метки_Сервер_ат.ЗаписатьМетки(ЭтаФорма, ТекущийОбъект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УправляемыеФормы_Сервер_ат.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УправляемыеФормы_Клиент_ат.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
	Оповестить("ОбновилисьМетки",, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	УправляемыеФормы_Сервер_ат.ОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Отказ, ПРоверяемыеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРешение(Команда)
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Владелец", Объект.Ссылка);
	
	ОткрытьФорму("Справочник.Решения_ат.ФормаОбъекта", ПараметрыОткрытияФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти 

#Область HTML

&НаКлиенте
Процедура ОбработчикКомандРаботыСHTML(Команда, ВыбранноеЗначение)
	
	РаботаСHTML_Клиент_ат.ОбработчикКомандРаботыСHTML(ЭтаФорма, Команда, ВыбранноеЗначение,
		Элементы.Содержание, Элементы.КомманднаяПанельКнопокРедактированияHTML,
		КоординатыЗаменяемогоСлова, СоответствиеКомандЗаменыСловам);
	
КонецПроцедуры

&НаКлиенте
Процедура СодержаниеДокументСформирован(Элемент)
	
	//ДобавитьОбработчик Элемент.Документ.Body.OnContextMenu, ОбработчикСобытийПоляHTML;
	//ДобавитьОбработчик Элемент.Документ.Body.OnPaste, ОбработчикСобытийПоляHTML;
	
	РаботаСHTML_Клиент_ат.УстановитьДоступностьПанелейРедактирования(Элементы.КомманднаяПанельКнопокРедактированияHTML,
		Элемент, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСобытийПоляHTML(Событие) Экспорт
	
	Если Событие.type = "contextmenu" Тогда
		
		ПолеМожноРедактировать = РаботаСHTML_Клиент_ат.HTMLПолеМожноРедактировать(Элементы.Содержание);
		
		Для Каждого ЭлементКонтекстногоМеню Из Элементы.ПредставлениеТекстаЗаявкиВHTML.КонтекстноеМеню.ПодчиненныеЭлементы Цикл
			
			Если НЕ ЭлементКонтекстногоМеню.Имя = "Содержание_КонтекстноеМеню_ВключитьВозможностьРедактирования"
			   И НЕ ЭлементКонтекстногоМеню.Имя = "Содержание_КонтекстноеМеню_ПроверитьОрфографию" Тогда
				ЭлементКонтекстногоМеню.Доступность = ПолеМожноРедактировать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ПолеМожноРедактировать Тогда	

			Если Событие.srcElement.id = "red_marker" Тогда
				
				РаботаСHTML_Клиент_ат.ОбработатьВызовКонтекстногоМеню(Событие, КоординатыЗаменяемогоСлова, СоответствиеКомандЗаменыСловам);	
				
				ИзменитьКонтестноеМенюЗаменыСловПоляHTML(СоответствиеКомандЗаменыСловам);
				
			Иначе
				
				ИзменитьКонтестноеМенюЗаменыСловПоляHTML(Неопределено, Истина);
				
			КонецЕсли;
			
		Иначе
			
			ИзменитьКонтестноеМенюЗаменыСловПоляHTML(Неопределено, Истина);
			
		КонецЕсли;
		
	ИначеЕсли Событие.type = "paste" Тогда
		
		ИдентификаторыКартинок.ЗагрузитьЗначения(РаботаСHTML_Клиент_ат.ПолучитьИдентификаторыКартинок(Элементы.Содержание.Документ));
		ПодключитьОбработчикОжидания("УдалитьКартинкиВставленныеКопированием", 0.2, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьКартинкиВставленныеКопированием() Экспорт
	
	РаботаСHTML_Клиент_ат.УдалитьКартинкиВставленныеКопированием(Элементы.Содержание.Документ,
																	ИдентификаторыКартинок.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьКонтестноеМенюЗаменыСловПоляHTML(СоответствиеКомандЗаменыСловам, ТолькоОчистить = Ложь)
	
	РаботаСHTML_Сервер_ат.ИзменитьКонтестноеМенюЗаменыСловПоляHTML(ЭтаФорма,
		Элементы.Содержание.КонтекстноеМеню, СоответствиеКомандЗаменыСловам, ТолькоОчистить, "ОбработчикКомандРаботыСHTML");
	
КонецПроцедуры

&НаКлиенте
Процедура СодержаниеПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	РаботаСHTML_Клиент_ат.ИзменитьПометкиКнопок(Элементы.КомманднаяПанельКнопокРедактированияHTML, Элементы.Содержание.Документ);	
	
	РаботаСHTML_Клиент_ат.ПерейтиПоСсылке(ДанныеСобытия.href);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновноеРешениеПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти 

#Область Метки

&НаКлиенте
Процедура ОтключитьОтборПоПроекту(Команда)
	
	//Элементы.ФормаИспользоватьОтборПоПроектам.Пометка = НЕ Элементы.ФормаИспользоватьОтборПоПроектам.Пометка;
	
	ОтключитьОтборПоПроектуНаСервере();
	Метки_Клиент_ат.ОбновитьПринадлежностьВыбранныхМетокКПроектам(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОтключитьОтборПоПроектуНаСервере()
	
	пыщ = Элементы.ФормаИспользоватьОтборПоПроектам.Пометка;
	Элементы.ФормаИспользоватьОтборПоПроектам.Пометка = НЕ пыщ;
	Метки_Сервер_ат.ОбновитьМетки(ЭтаФорма, Объект.Ссылка, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокМеток(Команда)
		
	ОткрытьФорму("Справочник.Метки_ат.ФормаСписка",, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоМетокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Метки_Клиент_ат.УстановитьМетку(ЭтаФорма, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеМеткиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Метки_Клиент_ат.УстановитьМетку(ЭтаФорма, Истина,, Истина);
	
	ОбновитьКоличествоВыбранныхМеток();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоМетокИспользоватьПриИзменении(Элемент)
	
	Метки_Клиент_ат.УстановитьМетку(ЭтаФорма, Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеМеткиПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ВыбранныеМетки.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Строка = Метки_Клиент_ат.ПолучитьИдентификаторСтроки(Элементы.ВыбранныеМетки.ТекущиеДанные.Значение, ДеревоМеток.ПолучитьЭлементы());
	
	Если НЕ Строка = Неопределено Тогда
		Элементы.ДеревоМеток.ТекущаяСтрока = Строка.ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	_ВыбранныеМетки = ВыбранныеМетки;
	
	Для Каждого СтрокаВыбранныхМеток Из _ВыбранныеМетки Цикл
		
		СтрокаВыбранныхМеток.Использовать = 0;
		Метки_Клиент_ат.ВыполнитьВыбор(ЭтаФорма, СтрокаВыбранныхМеток.Значение, СтрокаВыбранныхМеток.Использовать, СтрокаВыбранныхМеток.Частичная, СтрокаВыбранныхМеток.Сохраненная);
		
	КонецЦикла;
	
	ОбновитьКоличествоВыбранныхМеток();
	
КонецПроцедуры

&НаКлиенте
Процедура Восстановить(Команда)
	
	ВосстановитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНаСервере()
	
	Метки_Сервер_ат.ОбновитьМетки(ЭтаФорма, Объект.Ссылка);
	ОбновитьКоличествоВыбранныхМеток();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКоличествоВыбранныхМеток()
	
	КоличествоВыбранныхМеток = 0;
	
	Для Каждого ВыбраннаяМетка Из ВыбранныеМетки Цикл
		
		Если ВыбраннаяМетка.Использовать > 0 Тогда
			КоличествоВыбранныхМеток = КоличествоВыбранныхМеток + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.ГруппаМетки.Заголовок = "Метки" + ?(КоличествоВыбранныхМеток = 0, "", " (" + КоличествоВыбранныхМеток + ")");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьМетки()
	
	Метки_Сервер_ат.ОбновитьМетки(ЭтаФорма, Объект.Ссылка, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ОбновитьКоличествоВыбранныхМеток();
	
КонецПроцедуры

#КонецОбласти
