
//@comm +++

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если Отказ Или Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//Отказ = Истина;
	
	Для Каждого Запись Из ЭтотОбъект Цикл 
		
		ДвоичныеДанные = Запись.ХранимыйФайл.Получить();
		ХешКод = РаботаСХешСуммойДляФайлов_ат.ПолучитьХешКодДвоичныхДанных(ДвоичныеДанные);
		РазмерДанных = ДвоичныеДанные.Размер();
		
		Если РаботаСХешСуммойДляФайлов_ат.ХешФайлаУникален(ХешКод, РазмерДанных) Тогда
			Сообщить("Новый файл (hash = " + ХешКод + "), загружаем.");
			Попытка
				НовыйХранимыйФайл = Справочники.ХранимыеФайлы_ат.СоздатьЭлемент();
				НовыйХранимыйФайл.Код = ХешКод;
				НовыйХранимыйФайл.ХранимыйФайл = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(9));
				НовыйХранимыйФайл.Размер = РазмерДанных;
				НовыйХранимыйФайл.Записать();
				
				НаборЗаписей = РегистрыСведений.УказательНаФайлы_ат.СоздатьНаборЗаписей();
				//НаборЗаписей.Прочитать();
				
				Запись = НаборЗаписей.Добавить();
				Запись.ХешСумма = ХешКод;
				Запись.Путь = "";
				Запись.Том = Справочники.ТомаХраненияФайлов.ПустаяСсылка();
				Запись.ТипХранения = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе;
				Запись.РазмерФайла = РазмерДанных;
				
				НаборЗаписей.Записать(Ложь);
			Исключение
				Сообщить("Не удалось записать новый элемент справочника 'ХранимыеФайлы'!");
			КонецПопытки;
		Иначе
			// тут ничего не делаем, файл уже существует, когда он нам понадобится - найдем его по хешкоду и размеру
			Сообщить("Файл уже существует (hash = " + ХешКод + "), будет использована имеющаяся копия.");
		КонецЕсли;
		
	КонецЦикла;
	
	// В регистр не пишем!
	ЭтотОбъект.Очистить();
	
КонецПроцедуры

//@comm ---