
&НаКлиенте
Процедура ПолучитьДанныеБухгалтерии(Команда)
	
	Списания.Очистить();
	
	Если ОбязательныеПоляЗаполнены() Тогда
		
		ПолучитьДанныеБухгалтерии_Сервер();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеБухгалтерии_Сервер()
	
	БазаДанных = Константы.БухгалтерияДляСинхронизации_ат.Получить();
	
	Если БазаДанных.Пустая() Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнена константа <Бухгалтерия Для Синхронизации>!";
		Сообщение.Сообщить(); 
		
		Возврат;
		
	КонецЕсли;
	
	ДанныеСинхронизацииОрганизации = СинхронизацияСБП_ат.ПолучитьСтруктуруДанныхСинхронизацииДляСсылки(
		Организация, "СинхронизацияОрганизаций_ат");
	Если ДанныеСинхронизацииОрганизации = Неопределено Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Указанная Организация не синхронизированна с выбранной ИБ Бухгалтерии Предприятия!";
		Сообщение.Сообщить(); 
		
		Возврат;
		
	КонецЕсли;
	
	ДанныеСинхронизацииКонтрагента = СинхронизацияСБП_ат.ПолучитьСтруктуруДанныхСинхронизацииДляСсылки(
		Поставщик, "СинхронизацияКонтрагентов_ат");
	Если ДанныеСинхронизацииКонтрагента = Неопределено Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Указанный Поставщик не синхронизирован с выбранной ИБ Бухгалтерии Предприятия!";
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	Подключение = ПодключениеКИБ_ат.УстановитьПодключение(БазаДанных);
	Если ТипЗнч(Подключение) = Тип("Строка") Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = Подключение;
		Сообщение.Сообщить(); 
		
		Возврат;
		
	КонецЕсли;
	
	ИдентификаторыКорректны = Истина;
	
	ОрганизацияБП = Подключение.Справочники.Организации.ПолучитьСсылку(
		Подключение.NewObject("УникальныйИдентификатор", ДанныеСинхронизацииОрганизации.Идентификатор));
	Если НЕ ЗначениеЗаполнено(ОрганизацияБП.Код) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Идентификатор синхронизированной Организации не корректен.";
		Сообщение.Сообщить();
		
		ИдентификаторыКорректны = Ложь;
		
	КонецЕсли;
	
	КонтрагентБП = Подключение.Справочники.Контрагенты.ПолучитьСсылку(
		Подключение.NewObject("УникальныйИдентификатор", ДанныеСинхронизацииКонтрагента.Идентификатор));
	Если НЕ ЗначениеЗаполнено(КонтрагентБП.Код) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Идентификатор синхронизированного Поставщика не корректен.";
		Сообщение.Сообщить();
		
		ИдентификаторыКорректны = Ложь;
		
	КонецЕсли;
	
	Если НЕ ИдентификаторыКорректны Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Подключение.NewObject("Запрос");
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СписаниеСРасчетногоСчета.Дата КАК ДатаДокумента,
		|	СписаниеСРасчетногоСчета.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
		|	СписаниеСРасчетногоСчета.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		|	СписаниеСРасчетногоСчета.СуммаДокумента КАК СуммаДокумента,
		|	СписаниеСРасчетногоСчета.НазначениеПлатежа КАК НазначениеПлатежа,
		|	СписаниеСРасчетногоСчета.Комментарий КАК Комментарий
		|	ИЗ
		|		Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
		|	ГДЕ
		|		СписаниеСРасчетногоСчета.Проведен
		|		И СписаниеСРасчетногоСчета.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику)
		|		И ВЫБОР
		|				КОГДА &ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|					ТОГДА СписаниеСРасчетногоСчета.ДатаВходящегоДокумента >= &ДатаНачала
		|				ИНАЧЕ СписаниеСРасчетногоСчета.ДатаВходящегоДокумента МЕЖДУ &ДатаНачала И &ДатаОкончания
		|			КОНЕЦ
		|		И СписаниеСРасчетногоСчета.Организация = &Организация
		|		И СписаниеСРасчетногоСчета.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Организация", ОрганизацияБП);
	Запрос.УстановитьПараметр("Контрагент", КонтрагентБП);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Списание = Списания.Добавить();
		
		Списание.Организация 				= Организация;
		Списание.Поставщик 					= Поставщик;
		Списание.ДатаДокумента 				= Выборка.ДатаДокумента;
		Списание.НомерВходящегоДокумента 	= Выборка.НомерВходящегоДокумента;
		Списание.ДатаВходящегоДокумента 	= Выборка.ДатаВходящегоДокумента;
		Списание.СуммаДокумента 			= Выборка.СуммаДокумента;
		Списание.НазначениеПлатежа 			= Выборка.НазначениеПлатежа;
		Списание.Комментарий 				= Выборка.Комментарий;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция   ОбязательныеПоляЗаполнены()
	
	ПоляЗаполнены = Истина;
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен Период.";
		Сообщение.Поле  = "Период";
		Сообщение.Сообщить(); 
		
		ПоляЗаполнены = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнена Организация.";
		Сообщение.Поле  = "Организация";
		Сообщение.Сообщить();
		
		ПоляЗаполнены = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Поставщик) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен Поставщик.";
		Сообщение.Поле  = "Поставщик";
		Сообщение.Сообщить();
		
		ПоляЗаполнены = Ложь;
		
	КонецЕсли;
	
	Возврат ПоляЗаполнены;
	
КонецФункции

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	
	СоздатьДокументы_Сервер();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументы_Сервер()
	
	Если Списания.НайтиСтроки(Новый Структура("Договор", Справочники.Договоры_ат.ПустаяСсылка())).Количество() > 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Договор указан не во всех списаниях.";
		Сообщение.Сообщить(); 
		
		Возврат;
		
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		Для Каждого Списание Из Списания Цикл
			
			ОплатаПоставщику = Документы.ОплатаПоставщику_ат.СоздатьДокумент();
			
			ОплатаПоставщику.Дата 						= Списание.ДатаДокумента;
			ОплатаПоставщику.Организация 				= Списание.Организация;
			ОплатаПоставщику.Поставщик 					= Списание.Поставщик;
			ОплатаПоставщику.Договор 					= Списание.Договор;
			ОплатаПоставщику.НомерВходящегоДокумента 	= Списание.НомерВходящегоДокумента;
			ОплатаПоставщику.ДатаВходящегоДокумента 	= Списание.ДатаВходящегоДокумента;
			ОплатаПоставщику.СуммаДокумента 			= Списание.СуммаДокумента;
			ОплатаПоставщику.НазначениеПлатежа 			= Списание.НазначениеПлатежа;
			
			ОплатаПоставщику.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			
			Сообщить("Создана " + ОплатаПоставщику);
			ЗаписьЖурналаРегистрации("Автосоздание документов.ОплатаПоставщику", УровеньЖурналаРегистрации.Информация,, ОплатаПоставщику.Ссылка, "Основание: " + Списание);
			
			Комментарии_ат.ДобавитьАвтокомментарийПоВиду(ОплатаПоставщику.Ссылка, Списание.Комментарий);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		Ошибка = ОписаниеОшибки();
		Сообщить("Ошибка автосоздания ОплатаПоставщику по Списаниям: " + Ошибка);
		ЗаписьЖурналаРегистрации("Автосоздание документов.ОплатаПоставщику", УровеньЖурналаРегистрации.Ошибка,,, Ошибка);
		
	КонецПопытки;
	
КонецПроцедуры
