
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Ссылка = Параметры.Ссылка;
	ОтображаемыеСвязи = Параметры.ОтображаемыеСвязи;
	
	ЭтаФорма.АвтоЗаголовок = Ложь;
	ЭтаФорма.Заголовок = "Удаление связей (" + ОтображаемыеСвязи + ")";
	
	ЗаполнитьСписок();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписок()
	
	Если ОтображаемыеСвязи = "Предки" Тогда
		МассивСвязанныхОбъектов = СвязиОбъектов_ат.ПолучитьПредковОбъекта(Ссылка, Истина, "СвязиОбъектов_ат");
	ИначеЕсли ОтображаемыеСвязи = "Потомки" Тогда
		МассивСвязанныхОбъектов = СвязиОбъектов_ат.ПолучитьПотомковОбъекта(Ссылка, Истина, "СвязиОбъектов_ат");
	КонецЕсли;
	
	Для Каждого Объект Из МассивСвязанныхОбъектов Цикл
		Представление = ?(ЗначениеЗаполнено(Объект.Тезис), Объект.Метаданные().Синоним + ": " + Объект.Тезис, Строка(Объект));
		СписокСвязей.Добавить(Объект, Представление)
	КонецЦикла;
	
КонецПроцедуры 

&НаКлиенте
Процедура УдалитьВыбранные(Команда)
	
	УдалитьВыбранные_НаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьВыбранные_НаСервере()
	
	МассивУдаляемых = Новый Массив;
	
	Для Каждого Объект Из СписокСвязей Цикл
		
		Если Объект.Пометка Тогда
			МассивУдаляемых.Добавить(Объект.Значение);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ОтображаемыеСвязи = "Предки" Тогда
		
		//+ Проверим остаются ли связи
		Если МассивУдаляемых.Количество() = СписокСвязей.Количество() Тогда
			Сообщить("Удаление всех связей с предками недопустимо.");
			Возврат;
		КонецЕсли;
		//- Проверим остаются ли связи
		
		СвязиОбъектов_ат.УдалитьСвязиСПредками(Ссылка, МассивУдаляемых, , "СвязиОбъектов_ат");
		
	ИначеЕсли ОтображаемыеСвязи = "Потомки" Тогда
		
		//+ Проверим что бы удаление связей не привело к появлению Заданий не связанных с Заявками
		Индекс = 0;
		ЕстьНеУдаленные = Ложь;
		Для Каждого Объект Из МассивУдаляемых Цикл
			НепосредственныеПредкиОбъекта = СвязиОбъектов_ат.ПолучитьПредковОбъекта(Объект, Истина, "СвязиОбъектов_ат");
			Если НепосредственныеПредкиОбъекта.Количество() = 1 Тогда
				МассивУдаляемых.Удалить(Индекс);
				ЕстьНеУдаленные = Истина;
			КонецЕсли;
			Индекс = Индекс + 1;
		КонецЦикла;
		//- Проверим что бы удаление связей не привело к появлению Заданий не связанных с Заявками
		
		СвязиОбъектов_ат.УдалитьСвязиСПотомками(Ссылка, МассивУдаляемых, , "СвязиОбъектов_ат");
		
		Если ЕстьНеУдаленные Тогда
			Сообщить("Оставшиеся помеченые связи не могут быть удалены.");
		КонецЕсли;
		
	КонецЕсли;
	
	Планирование_Сервер_ат.ПересчитатьСтатусыСвязанныхЗаявок(МассивУдаляемых);
	
	Для Каждого Объект Из МассивУдаляемых Цикл
		СписокСвязей.Удалить(СписокСвязей.НайтиПоЗначению(Объект));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСвязейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьЗначение(СписокСвязей[ВыбраннаяСтрока].Значение);
	
КонецПроцедуры
