
#Область  ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	АнализируемаяДата = ТекущаяДата();
	ВыполнитьАнализ_Сервер();
	
КонецПроцедуры

#КонецОбласти 

#Область  ОбработчикиДействийПользователя

&НаКлиенте
Процедура АнализируемаяДатаПриИзменении(Элемент)
	
	ВыполнитьАнализ_Сервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПараметрыОткрытия = Новый Структура("Ключ", Элемент.ТекущиеДанные.Договор);
    ОткрытьФорму("Справочник.Договоры_ат.ФормаОбъекта", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорыПриАктивизацииСтроки(Элемент)
	
	Элементы.СписокСчетов.ТолькоПросмотр = (Элементы.Договоры.ТекущиеДанные = Неопределено)
		ИЛИ НЕ ЗначениеЗаполнено(Элементы.Договоры.ТекущиеДанные.ДатаСчета);
	Элементы.СписокРеализаций.ТолькоПросмотр = (Элементы.Договоры.ТекущиеДанные = Неопределено)
		ИЛИ НЕ ЗначениеЗаполнено(Элементы.Договоры.ТекущиеДанные.ДатаРеализации);
	
	ОтборПоДоговору = ?(Элементы.Договоры.ТекущиеДанные = Неопределено, Неопределено, Элементы.Договоры.ТекущиеДанные.Договор);
			
	Для Каждого ЭлементОтбора Из СписокСчетов.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		
		Если ЭлементОтбора.Представление = "ОтборПоДоговору" Тогда
			
			ЭлементОтбора.ПравоеЗначение = ОтборПоДоговору;
				
			Прервать;	
				
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ЭлементОтбора Из СписокРеализаций.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		
		Если ЭлементОтбора.Представление = "ОтборПоДоговору" Тогда
			
			ЭлементОтбора.ПравоеЗначение = ОтборПоДоговору;
				
			Прервать;	
				
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСчетовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Дата", Элементы.Договоры.ТекущиеДанные.ДатаСчета);
	ЗначенияЗаполнения.Вставить("Договор",
		ПолучитьАктуальноеДСПоДоговору(Элементы.Договоры.ТекущиеДанные.Договор, Элементы.Договоры.ТекущиеДанные.МесяцСчета));
	ЗначенияЗаполнения.Вставить("Период", Элементы.Договоры.ТекущиеДанные.МесяцСчета);
	ЗначенияЗаполнения.Вставить("КомментарийСинхронизируемый", СформироватьКомментарий(Элементы.Договоры.ТекущиеДанные.МесяцСчета));
	ЗначенияЗаполнения.Вставить("ЗаполнитьУслугиПоДоговору", Истина);
	ЗначенияЗаполнения.Вставить("СписыватьСОперативногоБаланса", Истина);
	
	ОткрытьФорму("Документ.СчетНаОплату_ат.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРеализацийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	МесяцРеализации = НачалоМесяца(Элементы.Договоры.ТекущиеДанные.ДатаРеализации);
	Счет = ПолучитьПериодическийСчетПоДоговору(Элементы.Договоры.ТекущиеДанные.Договор, МесяцРеализации);
	
	Если НЕ ЗначениеЗаполнено(Счет) Тогда
		
		ПоказатьПредупреждение(, "По договору " + Элементы.Договоры.ТекущиеДанные.Договор +
			" за " + Даты_КлиентСервер_ат.ПолучитьПредставлениеМесяца(МесяцРеализации) +
			" отсутствует проведённый счёт.", 5);
		Возврат;
		
	КонецЕсли;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Дата", Элементы.Договоры.ТекущиеДанные.ДатаРеализации);
	ЗначенияЗаполнения.Вставить("Счет", Счет);
	ЗначенияЗаполнения.Вставить("Период", МесяцРеализации);
	ЗначенияЗаполнения.Вставить("КомментарийСинхронизируемый", СформироватьКомментарий(МесяцРеализации));
	
	ОткрытьФорму("Документ.Реализация_ат.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения));
	
КонецПроцедуры

#КонецОбласти

#Область  СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьАнализ_Сервер()

	Договоры.Очистить();
	
	Если НЕ ЗначениеЗаполнено(АнализируемаяДата) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПервыйРабочийДеньПериода = ПродолжительностьПроцессов_Сервер_ат.ПолучитьРабочийДень(НачалоМесяца(АнализируемаяДата));
	НачалоСледующегоМесяца = НачалоМесяца(ДобавитьМесяц(АнализируемаяДата, 1));
	КонецПрошлогоМесяца = КонецМесяца(ДобавитьМесяц(АнализируемаяДата, - 1));
	НачалоПрошлогоМесяца = НачалоМесяца(КонецПрошлогоМесяца);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Договоры_ат.Ссылка КАК Договор,
		|	Договоры_ат.ПериодичностьСчетов,
		|	Договоры_ат.ПериодичностьРеализаций,
		|	Договоры_ат.СрокОплатыВДнях,
		|	Договоры_ат.ДатаНачала,
		|	Договоры_ат.СрокДоговора,
		|	Договоры_ат.ДатаРасторжения,
		|	Договоры_ат.Автопролонгация
		|ИЗ
		|	Справочник.Договоры_ат КАК Договоры_ат
		|ГДЕ
		|	НЕ Договоры_ат.ПометкаУдаления
		|	И (Договоры_ат.ДатаРасторжения = ДАТАВРЕМЯ(1, 1, 1)
		|			ИЛИ Договоры_ат.ДатаРасторжения >= &АнализируемаяДата)
		|	И (Договоры_ат.СрокДоговора = ДАТАВРЕМЯ(1, 1, 1)
		|			ИЛИ Договоры_ат.Автопролонгация
		|			ИЛИ Договоры_ат.СрокДоговора >= &АнализируемаяДата)
		|	И (НЕ Договоры_ат.ПериодичностьСчетов = ЗНАЧЕНИЕ(Перечисление.ПериодичностиСчетов_ат.Отсутствует)
		|			ИЛИ НЕ Договоры_ат.ПериодичностьРеализаций = ЗНАЧЕНИЕ(Перечисление.ПериодичностиРеализаций_ат.Отсутствует))
		|	И Договоры_ат.Родитель = ЗНАЧЕНИЕ(Справочник.Договоры_ат.ПустаяСсылка)
		|	И НЕ Договоры_ат.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Договоры_ат.Ссылка,
		|	Договоры_ат.ПериодичностьСчетов,
		|	Договоры_ат.ПериодичностьРеализаций,
		|	Договоры_ат.СрокОплатыВДнях,
		|	Договоры_ат.ДатаНачала,
		|	Договоры_ат.СрокДоговора,
		|	Договоры_ат.ДатаРасторжения,
		|	Договоры_ат.Автопролонгация
		|ИЗ
		|	Справочник.Договоры_ат КАК Договоры_ат
		|ГДЕ
		|	НЕ Договоры_ат.ПометкаУдаления
		|	И (Договоры_ат.ДатаРасторжения МЕЖДУ &НачалоПрошлогоМесяца И &КонецПрошлогоМесяца)
		|	И (НЕ Договоры_ат.ПериодичностьСчетов = ЗНАЧЕНИЕ(Перечисление.ПериодичностиСчетов_ат.Отсутствует)
		|			ИЛИ НЕ Договоры_ат.ПериодичностьРеализаций = ЗНАЧЕНИЕ(Перечисление.ПериодичностиРеализаций_ат.Отсутствует))
		|	И Договоры_ат.Родитель = ЗНАЧЕНИЕ(Справочник.Договоры_ат.ПустаяСсылка)
		|	И НЕ Договоры_ат.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)";

	Запрос.УстановитьПараметр("АнализируемаяДата", АнализируемаяДата);
	Запрос.УстановитьПараметр("НачалоПрошлогоМесяца", НачалоПрошлогоМесяца);
	Запрос.УстановитьПараметр("КонецПрошлогоМесяца", КонецПрошлогоМесяца);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл

		ВыставлятьСчет = Ложь;
		ВыставлятьРеализацию = Ложь;
		ДатаСчета = Неопределено;
		МесяцСчета = Неопределено;
		ДатаРеализации = Неопределено;
		
		Если Выборка.ПериодичностьСчетов = Перечисления.ПериодичностиСчетов_ат.ДоПериода Тогда
			
			Если Выборка.СрокОплатыВДнях = 0 Тогда
				
				ВыставлятьСчет = (АнализируемаяДата = ПервыйРабочийДеньПериода);
				
				ДатаСчета = НачалоМесяца(ПервыйРабочийДеньПериода);
				МесяцСчета = НачалоМесяца(ПервыйРабочийДеньПериода);
				
			Иначе
				
				ВыставлятьСчет = (НЕ ЗначениеЗаполнено(Выборка.ДатаРасторжения) ИЛИ Выборка.ДатаРасторжения > НачалоСледующегоМесяца)
					И (НЕ ЗначениеЗаполнено(Выборка.СрокДоговора) ИЛИ Выборка.СрокДоговора > НачалоСледующегоМесяца ИЛИ Выборка.Автопролонгация)
					И (Выборка.СрокОплатыВДнях =
						ПродолжительностьПроцессов_Сервер_ат.ПолучитьРазностьДат(АнализируемаяДата, НачалоСледующегоМесяца))
					И Выборка.ДатаНачала < ДобавитьМесяц(НачалоМесяца(АнализируемаяДата), 2);
				
				ДатаСчета = АнализируемаяДата;
				МесяцСчета = НачалоСледующегоМесяца;
				
			КонецЕсли;
			
		ИначеЕсли Выборка.ПериодичностьСчетов = Перечисления.ПериодичностиСчетов_ат.ПослеПериода Тогда
			
			ВыставлятьСчет = (АнализируемаяДата = ПервыйРабочийДеньПериода) И (Выборка.ДатаНачала <= КонецПрошлогоМесяца);
			
			ДатаСчета = КонецПрошлогоМесяца;
			МесяцСчета = НачалоПрошлогоМесяца;
			
		КонецЕсли;
		
		Если Выборка.ПериодичностьРеализаций = Перечисления.ПериодичностиРеализаций_ат.ПослеПериода Тогда
			
			ВыставлятьРеализацию = (АнализируемаяДата = ПервыйРабочийДеньПериода) И Выборка.ДатаНачала < НачалоМесяца(АнализируемаяДата);
			
			ДатаРеализации = ?(ЗначениеЗаполнено(Выборка.ДатаРасторжения) И Выборка.ДатаРасторжения < КонецПрошлогоМесяца,
				Выборка.ДатаРасторжения, КонецПрошлогоМесяца);
			
		КонецЕсли;
		
		Если ВыставлятьСчет ИЛИ ВыставлятьРеализацию Тогда
			
			НоваяСтрока	= Договоры.Добавить();
			НоваяСтрока.Договор = Выборка.Договор;
			НоваяСтрока.ДатаСчета = ?(ВыставлятьСчет, ДатаСчета, Неопределено);
			НоваяСтрока.МесяцСчета = ?(ВыставлятьСчет, МесяцСчета, Неопределено);
			НоваяСтрока.ДатаРеализации = ?(ВыставлятьРеализацию, ДатаРеализации, Неопределено);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.Договоры.ТекущаяСтрока = 0;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция   ПолучитьПериодическийСчетПоДоговору(Договор, Период)
	
	Возврат Финансы_ат.ПолучитьПериодическийСчетПоДоговору(Договор, Период);
	
КонецФункции

&НаКлиенте
Функция   СформироватьКомментарий(Дата)
	
	Возврат "За " + Даты_КлиентСервер_ат.ПолучитьПредставлениеМесяца(Дата);
	
КонецФункции

&НаСервереБезКонтекста
Функция   ПолучитьАктуальноеДСПоДоговору(Договор, Дата)
	
	Возврат Финансы_ат.ПолучитьАктуальноеДСПоДоговору(Договор, Дата);
	
КонецФункции 

#КонецОбласти
