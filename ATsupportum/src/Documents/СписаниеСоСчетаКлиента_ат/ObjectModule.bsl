
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	СуммаДокумента = ЭтотОбъект.РасшифровкаПлатежа.Итог("Сумма");
	
	Если СуммаДокумента = 0 Тогда
		
		#Если Клиент Тогда
			Предупреждение("Сумма документа не может быть нулевой!");
		#Иначе
			Сообщить("Сумма документа не может быть нулевой!", СтатусСообщения.Важное);
		#КонецЕсли
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ТекПользователь = Пользователи.ТекущийПользователь();
	ТекДата = ТекущаяДатаСеанса();
	ДоговорСубконто = ПланыВидовХарактеристик.ВидыСубконто_ат.Договор;
	ДокументСубконто = ПланыВидовХарактеристик.ВидыСубконто_ат.Документ;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СписаниеСоСчетаКлиента_атРасшифровкаПлатежа.Реализация,
		|	СписаниеСоСчетаКлиента_атРасшифровкаПлатежа.Сумма,
		|	ВЫБОР
		|		КОГДА СписаниеСоСчетаКлиента_атРасшифровкаПлатежа.Реализация.Договор.Родитель = ЗНАЧЕНИЕ(Справочник.Договоры_ат.ПустаяСсылка)
		|			ТОГДА СписаниеСоСчетаКлиента_атРасшифровкаПлатежа.Реализация.Договор
		|			ИНАЧЕ СписаниеСоСчетаКлиента_атРасшифровкаПлатежа.Реализация.Договор.Родитель
		|		КОНЕЦ КАК ДоговорОсновной,
		|	СписаниеСоСчетаКлиента_атРасшифровкаПлатежа.Реализация.Договор КАК ДоговорРеализации
		|ИЗ
		|	Документ.СписаниеСоСчетаКлиента_ат.РасшифровкаПлатежа КАК СписаниеСоСчетаКлиента_атРасшифровкаПлатежа
		|ГДЕ
		|	СписаниеСоСчетаКлиента_атРасшифровкаПлатежа.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДвижениеФакт = Движения.Клиентский_ат.Добавить();
		
		ДвижениеФакт.Период 					= Дата;
		ДвижениеФакт.Клиент 					= Клиент;
		ДвижениеФакт.Счет 						= ПланыСчетов.Клиентский_ат.Фактический;
		ДвижениеФакт.ВидДвижения 				= ВидДвиженияБухгалтерии.Кредит;
		ДвижениеФакт.Субконто[ДоговорСубконто] 	= Выборка.ДоговорОсновной;
		ДвижениеФакт.Субконто[ДокументСубконто] = Выборка.Реализация;
		ДвижениеФакт.Сумма 						= Выборка.Сумма;
		
		ДвижениеФакт.Договор 					= Выборка.ДоговорРеализации;
		ДвижениеФакт.Организация 				= Организация;
		
		ДвижениеФакт.АвторИзменения 			= ТекПользователь;
		ДвижениеФакт.ДатаИзменения 				= ТекДата;
		
	КонецЦикла;
	
	Движения.Клиентский_ат.Записать();
	
	Для каждого СтрокаРасшифровки Из РасшифровкаПлатежа Цикл
		
		Для каждого СтрокаКосвенныхСвязей Из СтрокаРасшифровки.Реализация.КосвенныеСвязиЗаданий Цикл
			
			Согласование_ат.ЗаписатьКосвеннуюСвязьЗадания(СтрокаКосвенныхСвязей.Задание, СтрокаКосвенныхСвязей.Заявка,,,,,,
				Ссылка, Клиент, СтрокаКосвенныхСвязей.Задание.СодержаниеРабот);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Уведомления_ат.УведомитьОСписанииДенежныхСредств(Ссылка);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Для каждого СтрокаРасшифровки Из РасшифровкаПлатежа Цикл
		
		Для каждого СтрокаКосвенныхСвязей Из СтрокаРасшифровки.Реализация.КосвенныеСвязиЗаданий Цикл
			
			Согласование_ат.ЗаписатьКосвеннуюСвязьЗадания(СтрокаКосвенныхСвязей.Задание, СтрокаКосвенныхСвязей.Заявка,,,,,,
				Документы.СписаниеСоСчетаКлиента_ат.ПустаяСсылка(), Клиент, СтрокаКосвенныхСвязей.Задание.СодержаниеРабот);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Уведомления_ат.УведомитьОСписанииДенежныхСредств(Ссылка, Истина);
	
КонецПроцедуры

#КонецОбласти
