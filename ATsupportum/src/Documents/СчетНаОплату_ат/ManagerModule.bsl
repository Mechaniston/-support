 
Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ВнешнийНомер");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ПустаяСтрока(Данные.ВнешнийНомер) Тогда
		
		Попытка
			
			ВнешнийНомерКакЧисло = Число(Данные.ВнешнийНомер);
			Если ВнешнийНомерКакЧисло = 0 Тогда
				
				Если ПустаяСтрока(Данные.Номер) Тогда
					ВнешнийНомер = "новый";
				Иначе
					ВнешнийНомер = Формат(Число(Данные.Номер), "ЧГ=");
				КонецЕсли;
				
			Иначе
				ВнешнийНомер = Данные.ВнешнийНомер;
			КонецЕсли;
			
		Исключение
			ВнешнийНомер = Данные.ВнешнийНомер;
		КонецПопытки;
		
	Иначе
		
		Если ПустаяСтрока(Данные.Номер) Тогда
			ВнешнийНомер = "новый";
		Иначе
			ВнешнийНомер = Формат(Число(Данные.Номер), "ЧГ=");
		КонецЕсли;
		
	КонецЕсли;
	
	Представление = "Счёт " + ВнешнийНомер + " от " + Формат(Данные.Дата, "ДФ=dd.MM.yy");
	
	//ПредставлениеСогласования = "";
	//Основания = Данные.Основания;
	//
	//Если Основания.Количество() > 0 Тогда
	//	
	//	Если Основания.Количество() = 1 Тогда
	//		
	//		Согласование = Основания[0].Основание;
	//		ПредставлениеСогласования = " по согласованию " + Согласование.Номер + " от " + Согласование.Дата;
	//		
	//	Иначе
	//		
	//		ПредставлениеСогласования = " по согласованиям: ";
	//		
	//		Для Каждого СтрокаОснований Из Основания Цикл
	//			
	//			Согласование = СтрокаОснований.Основание;
	//			
	//			ПредставлениеСогласования = ПредставлениеСогласования + " " + Согласование.Номер + " от " + Согласование.Дата + ", ";
	//			
	//		КонецЦикла;
	//		
	//		ПредставлениеСогласования = Лев(ПредставлениеСогласования, СтрДлина(ПредставлениеСогласования) - 2);
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//
	//Представление = "Счёт № " + Выборка.НомерСчета + " от " + Формат(Выборка.ДатаСчета, "ДЛФ=D")
	//	+ ?(ЗначениеЗаполнено(Выборка.Период), " (за " + Даты_КлиентСервер_ат.ПолучитьПредставлениеМесяца(Выборка.Период) + ")", "")
	//	+ ПредставлениеСогласования; 
	
КонецПроцедуры

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт 
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СинхронизированныеПечатныеФормы_ат.РегистрСинхронизации,
		|	СинхронизированныеПечатныеФормы_ат.ИмяМакета,
		|	СинхронизированныеПечатныеФормы_ат.Наименование,
		|	СинхронизированныеПечатныеФормы_ат.ВнешняяПечатнаяФорма,
		|	СинхронизированныеПечатныеФормы_ат.Порядок,
		|	СинхронизированныеПечатныеФормы_ат.ИспользоватьДляОтправки,
		|	СинхронизированныеПечатныеФормы_ат.ТипФайлаПоУмолчаниюСтрокой,
		|	СинхронизированныеПечатныеФормы_ат.ШаблонТекстаПисьма
		|ИЗ
		|	Справочник.СинхронизированныеПечатныеФормы_ат КАК СинхронизированныеПечатныеФормы_ат
		|ГДЕ
		|	НЕ СинхронизированныеПечатныеФормы_ат.ПометкаУдаления
		|	И СинхронизированныеПечатныеФормы_ат.РегистрСинхронизации = &РегистрСинхронизации");
	Запрос.УстановитьПараметр("РегистрСинхронизации", Перечисления.РегистрыСинхронизацииДокументов_ат.СинхронизацияСчетовНаОплату_ат);
	
	ВыборкаРезультатов = Запрос.Выполнить().Выбрать();
	Пока ВыборкаРезультатов.Следующий() Цикл
		
		КомандаПечати = КомандыПечати.Добавить();
		
		КомандаПечати.Идентификатор = ВыборкаРезультатов.ИмяМакета;
		КомандаПечати.Представление = ВыборкаРезультатов.Наименование;
		КомандаПечати.СписокФорм    = "ФормаСпискаИВыбора,ФормаДокумента";
		КомандаПечати.Порядок		= ВыборкаРезультатов.Порядок;
		
		Если НЕ ПустаяСтрока(ВыборкаРезультатов.ТипФайлаПоУмолчаниюСтрокой) Тогда
			КомандаПечати.ФорматСохранения = ТипФайлаТабличногоДокумента[ВыборкаРезультатов.ТипФайлаПоУмолчаниюСтрокой];
		КонецЕсли;
		
		КомандаПечати.ДополнительныеПараметры.Вставить("РегистрСинхронизации", 		ВыборкаРезультатов.РегистрСинхронизации);
		КомандаПечати.ДополнительныеПараметры.Вставить("ВнешняяПечатнаяФорма", 		ВыборкаРезультатов.ВнешняяПечатнаяФорма);
		КомандаПечати.ДополнительныеПараметры.Вставить("ИспользоватьДляОтправки", 	ВыборкаРезультатов.ИспользоватьДляОтправки);
		
		Если НЕ ПустаяСтрока(ВыборкаРезультатов.ШаблонТекстаПисьма) Тогда
			КомандаПечати.ДополнительныеПараметры.Вставить("ШаблонТекстаПисьма", 	ВыборкаРезультатов.ШаблонТекстаПисьма);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры 

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Финансы_ат.ПечатьФинДокумента(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	
КонецПроцедуры 

Функция   ПолучитьПланируемуюДатуОплаты(Дата, Договор) Экспорт
	
	СрокОплатыВДнях = ?(Договор.Родитель.Пустая(), Договор.СрокОплатыВДнях, Договор.Родитель.СрокОплатыВДнях); 
	
	Если СрокОплатыВДнях = 0 Тогда
		
		Возврат Неопределено;
		
	Иначе
		
		Возврат ПродолжительностьПроцессов_Сервер_ат.ПолучитьДату(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()), СрокОплатыВДнях);
		
	КонецЕсли;
	
КонецФункции

Процедура ЗаменитьПараметрыВТекстеПисьма(Счет, Текст, КоличествоОтправляемых = 1, РазныеДоговоры = Ложь, ОдинаковыйПериод = Истина) Экспорт
	
	Параметр = "&Счет";
	Если СтрНайти(Текст, Параметр) > 0 Тогда
		
		Текст = СтрЗаменить(Текст, Параметр, ?(КоличествоОтправляемых > 1, "Счета", "Счёт"));
		
	КонецЕсли;
	
	Уведомления_ат.ЗаменитьПараметрыВТекстеПисьмаФинансовогоДокумента(Счет, Текст, КоличествоОтправляемых, РазныеДоговоры, ОдинаковыйПериод);
	
КонецПроцедуры

Функция   ПолучитьТемуПисьма(Документ, КоличествоОбъектов, ПредставлениеПериода = "") Экспорт
	
	Возврат Уведомления_ат.ПолучитьТемуПисьмаДляОтправкиДокумента(Документ, "Счета на оплату", КоличествоОбъектов, ПредставлениеПериода);
	
КонецФункции
