
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	СуммаДокумента = ЭтотОбъект.РасшифровкаПлатежа.Итог("Сумма");
	
	Если СуммаДокумента = 0 Тогда
		
		#Если Клиент Тогда
			Предупреждение("Сумма документа не может быть нулевой!");
		#Иначе
			Сообщить("Сумма документа не может быть нулевой!", СтатусСообщения.Важное);
		#КонецЕсли
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ТекПользователь = Пользователи.ТекущийПользователь();
	ТекДата = ТекущаяДатаСеанса();
	ДоговорСубконто = ПланыВидовХарактеристик.ВидыСубконто_ат.Договор;
	ДокументСубконто = ПланыВидовХарактеристик.ВидыСубконто_ат.Документ;
	
	Счета = Новый Массив;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПоступлениеНаСчетКлиентаРасшифровкаПлатежа.СчетНаОплату КАК СчетНаОплату,
		|	ПоступлениеНаСчетКлиентаРасшифровкаПлатежа.Сумма КАК Сумма,
		|	ВЫБОР
		|		КОГДА ПоступлениеНаСчетКлиентаРасшифровкаПлатежа.СчетНаОплату.Договор.Родитель = ЗНАЧЕНИЕ(Справочник.Договоры_ат.ПустаяСсылка)
		|			ТОГДА ПоступлениеНаСчетКлиентаРасшифровкаПлатежа.СчетНаОплату.Договор
		|			ИНАЧЕ ПоступлениеНаСчетКлиентаРасшифровкаПлатежа.СчетНаОплату.Договор.Родитель
		|		КОНЕЦ КАК ДоговорОсновной,
		|	ПоступлениеНаСчетКлиентаРасшифровкаПлатежа.СчетНаОплату.Договор КАК ДоговорСчета,
		|	ЕСТЬNULL(СинхронизацияПоступленийНаРасчетныйСчет.ДатаПоступления, ПоступлениеНаСчетКлиентаРасшифровкаПлатежа.Ссылка.Дата) КАК ДатаПоступления
		|ИЗ
		|	Документ.ПоступлениеНаСчетКлиента_ат.РасшифровкаПлатежа КАК ПоступлениеНаСчетКлиентаРасшифровкаПлатежа
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СинхронизацияПоступленийНаРасчетныйСчет_ат КАК СинхронизацияПоступленийНаРасчетныйСчет
		|		ПО ПоступлениеНаСчетКлиентаРасшифровкаПлатежа.Ссылка = СинхронизацияПоступленийНаРасчетныйСчет.Ссылка
		|ГДЕ
		|	ПоступлениеНаСчетКлиентаРасшифровкаПлатежа.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДвижениеФакт = Движения.Клиентский_ат.Добавить();
		
		ДвижениеФакт.Период 					= Выборка.ДатаПоступления;
		ДвижениеФакт.Клиент 					= Клиент;
		ДвижениеФакт.Счет 						= ПланыСчетов.Клиентский_ат.Фактический;
		ДвижениеФакт.ВидДвижения 				= ВидДвиженияБухгалтерии.Дебет;
		ДвижениеФакт.Субконто[ДоговорСубконто] 	= Выборка.ДоговорОсновной;
		ДвижениеФакт.Субконто[ДокументСубконто] = Выборка.СчетНаОплату;
		ДвижениеФакт.Сумма 						= Выборка.Сумма;
		
		ДвижениеФакт.Договор 					= Выборка.ДоговорСчета;
		ДвижениеФакт.Организация 				= Организация;
		
		ДвижениеФакт.АвторИзменения 			= ТекПользователь;
		ДвижениеФакт.ДатаИзменения 				= ТекДата;
		
		ДвижениеОпер = Движения.Клиентский_ат.Добавить();
		ЗаполнитьЗначенияСвойств(ДвижениеОпер, ДвижениеФакт,, "Счет,Субконто");
		ДвижениеОпер.Счет 						= ПланыСчетов.Клиентский_ат.Оперативный;
		ДвижениеОпер.Субконто[ДоговорСубконто] 	= Выборка.ДоговорОсновной;
		ДвижениеОпер.Субконто[ДокументСубконто] = Выборка.СчетНаОплату;
		
		Счета.Добавить(Выборка.СчетНаОплату);
		
	КонецЦикла;
	
	Движения.Клиентский_ат.Записать();
	
	Для каждого СтрокаРасшифровки Из РасшифровкаПлатежа Цикл
		
		Для каждого СтрокаКосвенныхСвязей Из СтрокаРасшифровки.СчетНаОплату.КосвенныеСвязиЗаданий Цикл
			
			Согласование_ат.ЗаписатьКосвеннуюСвязьЗадания(СтрокаКосвенныхСвязей.Задание, СтрокаКосвенныхСвязей.Заявка,,,,,
				Ссылка,, Клиент, СтрокаКосвенныхСвязей.Задание.СодержаниеРабот);
			
		КонецЦикла;
	
	КонецЦикла;
	
	Финансы_ат.ПересчитатьСтатусыОплатыСчетов(Счета);
	
	Уведомления_ат.УведомитьОПоступленииДенежныхСредств(Ссылка);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Счета = Новый Массив;
	
	Для Каждого СтрокаРасшифровки Из РасшифровкаПлатежа Цикл
		
		Для Каждого СтрокаКосвенныхСвязей Из СтрокаРасшифровки.СчетНаОплату.КосвенныеСвязиЗаданий Цикл
			
			Согласование_ат.ЗаписатьКосвеннуюСвязьЗадания(СтрокаКосвенныхСвязей.Задание, СтрокаКосвенныхСвязей.Заявка,,,,,
				Документы.ПоступлениеНаСчетКлиента_ат.ПустаяСсылка(),, Клиент, СтрокаКосвенныхСвязей.Задание.СодержаниеРабот);
			
		КонецЦикла;
		
		Счета.Добавить(СтрокаРасшифровки.СчетНаОплату);
		
	КонецЦикла;
	
	Финансы_ат.ПересчитатьСтатусыОплатыСчетов(Счета);
	
	Уведомления_ат.УведомитьОПоступленииДенежныхСредств(Ссылка, Истина);
	
КонецПроцедуры

#КонецОбласти
