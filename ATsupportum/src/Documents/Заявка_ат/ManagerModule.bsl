
#Область ИнтерфейсДляРаботыСПодсистемойВзаимодействия

Функция   ПолучитьКонтакты(Ссылка) Экспорт
	
	//Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Неопределено;
	//КонецЕсли;
	
КонецФункции

#КонецОбласти

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Данные.Ссылка.Тикет) Тогда
		
		СтандартнаяОбработка = Ложь;
		Представление = "Заявка по тикету #" + Данные.Ссылка.Тикет;
		
	КонецЕсли;
	
КонецПроцедуры

Функция   ЗаполнитьДанныеДляОбработкиОтветногоПисьма(ПараметрыВходящегоПисьма) Экспорт
	
	ЗаявкаИлиНекорректныйСтатус = ПолучитьЗаявкуНаПриемкеПоНомеруТикета(ПараметрыВходящегоПисьма.НомерДокумента);
	
	Если ЗаявкаИлиНекорректныйСтатус = Неопределено Тогда
		
		Возврат "Заявка по тикету #" + ПараметрыВходящегоПисьма.НомерДокумента + " не обнаружена!";
		
	ИначеЕсли ТипЗнч(ЗаявкаИлиНекорректныйСтатус) = Тип("ПеречислениеСсылка.СтатусыЗаявок_ат") Тогда
		
		Возврат "Заявка по тикету #" + ПараметрыВходящегоПисьма.НомерДокумента + " имеет статус не предполагающий принятие по ней решения - " + ЗаявкаИлиНекорректныйСтатус; //!!!маскировать внутренние статусы для клиентов
		
	Иначе
		
		Взаимодействия.УстановитьПредмет(ПараметрыВходящегоПисьма.Письмо, ПараметрыВходящегоПисьма.ИсходящееПисьмо); //??? - см. док.Согласование_ат.ММ
			// есть ещё вариант - изначальное письмо или заявка
		
	КонецЕсли;
	
	ПараметрыВходящегоПисьма.Вставить("Заявка", ЗаявкаИлиНекорректныйСтатус);
	
	ПараметрыВходящегоПисьма.Вставить("ПоложительноеРешение", ПолучитьРешениеПоПисьму(ПараметрыВходящегоПисьма.Ответ));
	
	ВалидныеОтветчики = Новый Массив;
	ВалидныеОтветчики.Добавить(ЗаявкаИлиНекорректныйСтатус.Сотрудник);
	ПараметрыВходящегоПисьма.Вставить("ВалидныеОтветчики", ВалидныеОтветчики);
	
	Возврат "";
	
КонецФункции

Функция   ПолучитьИдентификаторВидаПисьмаДляАвтоматическойОбработки() Экспорт
	
	Возврат "Confirmation-Ticket";
	
КонецФункции

Функция   ВидПисьма() Экспорт
	
	Возврат "Confirmation";
	
КонецФункции

Процедура ОбработатьАвтоматическоеУведомление(ПараметрыПисьма) Экспорт
	
	Если НЕ ПараметрыПисьма.Свойство("Ошибка") Тогда
		
		Попытка
			
			//???!!!!! всё правильно??
			Если ПараметрыПисьма.ПоложительноеРешение Тогда
				
				Планирование_Сервер_ат.ЗакрытьЗаявку(ПараметрыПисьма.Заявка, Истина, ПараметрыПисьма.Ответчик);
				//Планирование_Сервер_ат.УстановитьСтатус(ПараметрыПисьма.Заявка,
				//	Перечисления.СтатусыЗаявок_ат.Закрыта,
				//	ТекущаяДатаСеанса(), Истина, ПараметрыПисьма.Ответчик);
				//Планирование_Сервер_ат.ПересчитатьСвойстваЗаявки(ПараметрыПисьма.Заявка);
				//
				//Планирование_Сервер_ат.ЗафиксироватьЗаявку(ПараметрыПисьма.Заявка, Истина,, ПараметрыПисьма.Ответчик);
				//
				//Уведомления_ат.УведомитьОСменеСтатуса(ПараметрыПисьма.Заявка, Перечисления.СтатусыЗаявок_ат.Закрыта,, Истина); //!!! не нравится такая тема, см. Планирование_Сервер_ат.УстановитьСтатус
				
			Иначе
				
				Планирование_Сервер_ат.УстановитьСтатус(ПараметрыПисьма.Заявка,
					Перечисления.СтатусыЗаявок_ат.НаРассмотрении,
					ТекущаяДатаСеанса(), Истина, ПараметрыПисьма.Ответчик);
				Уведомления_ат.УведомитьОСменеСтатуса(ПараметрыПисьма.Заявка, Перечисления.СтатусыЗаявок_ат.НаРассмотрении,, Истина);
				
				//!!!!!TODO перенести в отд. проц. и вообще лютый хардкод костыльный
				Запрос = Новый Запрос(
					"ВЫБРАТЬ
					|	ФиксацияРабот_ат.Ссылка КАК Ссылка
					|ИЗ
					|	Документ.ФиксацияРабот_ат КАК ФиксацияРабот_ат
					|ГДЕ
					|	НЕ ФиксацияРабот_ат.ПометкаУдаления
					|	И ФиксацияРабот_ат.Заявка = &Заявка");
				Запрос.УстановитьПараметр("Заявка", ПараметрыПисьма.Заявка);
				
				ВыборкаРезультатовЗапроса = Запрос.Выполнить().Выбрать();
				Пока ВыборкаРезультатовЗапроса.Следующий() Цикл
					
					Закрытие = ВыборкаРезультатовЗапроса.Ссылка.ПолучитьОбъект();
					Закрытие.УстановитьПометкуУдаления(Истина);
					
				КонецЦикла;
				
			КонецЕсли;
			
			ТекстПисьма = РаботаСHTML_КлиентСервер_ат.ПолучитьОбычныйТекстИзHTML(
				ОбработчикиСобытийДляПочтовыхДокументов_ат.ПолучитьТексПисьмаИзРегистраСодержаниеЭлектронныхПисем(
					ПараметрыПисьма.Письмо));
			
			ТекстОПриемке = "Пользователем " + ПараметрыПисьма.Ответчик + " по письму " + ПараметрыПисьма.ИсходящееПисьмо
				+ " было принято " + ?(ПараметрыПисьма.ПоложительноеРешение, "положительное", "отрицательное") + " решение.";
				
			Если НЕ ПустаяСтрока(ТекстПисьма) Тогда
				
				ТекстОПриемке = ТекстОПриемке + Символы.ПС + "Пользователь оставил комментарий:" + Символы.ПС
					+ РаботаСHTML_КлиентСервер_ат.ПолучитьОбычныйТекстИзHTML(ТекстПисьма);
				
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(ТекстОПриемке) Тогда
				Комментарии_ат.ДобавитьАвтокомментарийПоВиду(ПараметрыПисьма.Заявка, ТекстОПриемке);
			КонецЕсли;
			
			//Уведомления_ат.СнятьСКонтроляПисьмаПоЗаявке(ПараметрыПисьма.Заявка);
			Уведомления_ат.ЗаписатьСведенияОКонтролеЭлектронногоПисьма(ПараметрыПисьма.ИсходящееПисьмо, Ложь);
			Уведомления_ат.УстановитьРассмотренностьПисьма(ПараметрыПисьма.Письмо, Ложь);
			
		Исключение
			
			ПараметрыПисьма.Вставить("Ошибка", ОписаниеОшибки());
			
		КонецПопытки;
		
	КонецЕсли;
	
	Если //ПараметрыПисьма.Свойство("Ошибка") ИЛИ // !!!!! пока пусть вызывается только общее в ОМ.Уведомления.ПроверитьОтветыНаПисьмаОПриемке
		НЕ ПараметрыПисьма.ПоложительноеРешение Тогда //!!!!!TODO - переписать такую кривоту
		
		Уведомления_ат.УведомитьОПолучениПисьмаОПриемке(ПараметрыПисьма.Заявка, ПараметрыПисьма);
		
	КонецЕсли;
	
КонецПроцедуры

Функция   ПолучитьРешениеПоПисьму(Ответ)
	
	Если Врег(Ответ) = "ACCEPT" Тогда
		Возврат Истина;
	ИначеЕсли Врег(Ответ) = "DECLINE" Тогда
		Возврат Ложь;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция   ПолучитьЗаявкуНаПриемкеПоНомеруТикета(НомерТикета)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Заявка_ат.Ссылка,
		|	ИсторияСтатусовЗаявок_атСрезПоследних.Статус
		|ИЗ
		|	РегистрСведений.ИсторияСтатусовЗаявок_ат.СрезПоследних КАК ИсторияСтатусовЗаявок_атСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Заявка_ат КАК Заявка_ат
		|		ПО ИсторияСтатусовЗаявок_атСрезПоследних.Ссылка = Заявка_ат.Ссылка
		|ГДЕ
		|	Заявка_ат.Тикет = &Тикет
		|	И НЕ Заявка_ат.ПометкаУдаления
		|");
	Запрос.УстановитьПараметр("Тикет", НомерТикета);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат Неопределено;
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Если Выборка.Статус = Перечисления.СтатусыЗаявок_ат.НаПриемке
			ИЛИ Выборка.Статус = Перечисления.СтатусыЗаявок_ат.ВОжиданииОтвета
			ИЛИ Выборка.Статус = Перечисления.СтатусыЗаявок_ат.НаРассмотрении Тогда //!!! в список отдельный
			
			Возврат Выборка.Ссылка;
			
		Иначе
			
			Возврат Выборка.Статус;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

Процедура ОбновитьКомментарийЗаявкиПоОтветуНаПисьмо(СоответствиеВходящихПисем) Экспорт
	
	Для Каждого КлючИЗначение Из СоответствиеВходящихПисем Цикл
		
		ИсходящееПисьмо = КлючИЗначение.Ключ;
		ВходящееПисьмо = КлючИЗначение.Значение;
		
		ТекстПисьмаHTML = ОбработчикиСобытийДляПочтовыхДокументов_ат.ПолучитьТексПисьмаИзРегистраСодержаниеЭлектронныхПисем(ВходящееПисьмо);
		ТекстПисьма = РаботаСHTML_КлиентСервер_ат.ПолучитьОбычныйТекстИзHTML(ТекстПисьмаHTML);
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПредметыПапкиВзаимодействий.Предмет КАК Заявка
		|ИЗ
		|	РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСтатусовЗаявок_ат.СрезПоследних КАК ИсторияСтатусовЗаявок_атСрезПоследних
		|		ПО ПредметыПапкиВзаимодействий.Предмет = ИсторияСтатусовЗаявок_атСрезПоследних.Ссылка
		|ГДЕ
		|	ПредметыПапкиВзаимодействий.Взаимодействие В(&Взаимодействия)
		|	И ИсторияСтатусовЗаявок_атСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявок_ат.ВОжиданииОтвета)";
		
		Запрос.УстановитьПараметр("Взаимодействия", ИсходящееПисьмо);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Комментарии_ат.ДобавитьАвтокомментарийПоВиду(Выборка.Заявка,
				"Ответ пользователя <" + ВходящееПисьмо.ОтправительКонтакт + ">" + Символы.ПС
				+ "на письмо <" + Строка(ИсходящееПисьмо) + ">:" + Символы.ПС
				+ ТекстПисьма);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры
