
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправляемыеФормы_Сервер_ат.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка, , , Элементы.ГруппаКоманднаяПанель);
	
	ТекущийПользователь	 = Пользователи.ТекущийПользователь();
	СотрудникОрганизации = ВнутреннегоИспользования_КлиентСерверПовтИсп_ат.СотрудникОрганизации();
	
	Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекущаяДатаСеанса());
	
	Список.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ТекущийПользователь);
	Список.Параметры.УстановитьЗначениеПараметра("СотрудникОрганизаций", СотрудникОрганизации); //??? проверять ли
		// дополнительно на указание Организации через РС.СпецификацияПользователей_ат - Контрагента.Клиента - РС.ДополнительныеРеквизитыОрганизаций_ат
		
	//Если СотрудникОрганизации Тогда
		
		Список.Параметры.УстановитьЗначениеПараметра("Ответственный", ТекущийПользователь);
		//иначе по Сотруднику?
	//КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ОтбиратьПоПроектам", Ложь);
	Список.Параметры.УстановитьЗначениеПараметра("Проекты", Неопределено);
	
	УстановитьОтборПоАктуальным_Сервер(Истина);
	
	ВнутреннегоИспользования_ВызовСервера_ат.УстановитьОтборПоКлиентуДляОтбора(ЭтаФорма);
	
	//
	
	Если Параметры.РежимВыбора Тогда
		
		Если Параметры.ВыборПозиции Тогда
			
			ЭтаФорма.АвтоЗаголовок = Ложь;
			ЭтаФорма.Заголовок = "Выберите позицию";
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.СкрываемыеЗаявки) Тогда
			
			ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
			ЭлементОтбора.ПравоеЗначение = Параметры.СкрываемыеЗаявки;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			ЭлементОтбора.Использование = Истина;
			
		КонецЕсли;
		
		Для Каждого ЭлементКонтекстногоМеню Из Элементы.Список.КонтекстноеМеню.ПодчиненныеЭлементы Цикл
			
			ЭлементКонтекстногоМеню.Видимость = Ложь;
			
		КонецЦикла;
		
		ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Нет;
		
	КонецЕсли;
	
	// Отбор по Меткам
	
	Если ЗначениеЗаполнено(Параметры.НачальныйОтборПоМеткам) Тогда
		
		СписокЗначенийНачальногоОтбора = Параметры.НачальныйОтборПоМеткам;
		СписокЗначенийНачальногоОтбора.ЗаполнитьПометки(Истина);
		
	Иначе
		
		СписокЗначенийНачальногоОтбора = Новый СписокЗначений; // Если используются значения по умолчанию - заполнять ими.
		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(Метки_Сервер_ат.ПолучитьПолнуюТаблицуЗначенийОтбора("Справочник.Метки_ат"),
		"ТаблицаЗначенийОтбора");
	
	Метки_Сервер_ат.СоздатьКнопкуНастройкиОтбора(Элементы.ГруппаКоманднаяПанель, "Справочник.Метки_ат", "НастроитьОтборы",
		ЭтаФорма, "Установить отбор");
		
	//
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправляемыеФормы_Клиент_ат.ПриОткрытии(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "КлиентДляОтбораИзменен" И НЕ Элементы.Список.РежимВыбора Тогда
		
		ВнутреннегоИспользования_Клиент_ат.ИзменитьОтборПоКлиентуДляОтбора(Список,, Параметр);
		
	ИначеЕсли ИмяСобытия = "ОбновитьЗаявку" Тогда
		
		//Элементы.Список.Обновить(); //!!! постоянно вызывает "Обнаружено рассогласование при получении данных"
		
	ИначеЕсли ИмяСобытия = "ОбновилисьМетки" Тогда
		
		Если Элементы.Найти("ГруппаОтбораПоМеткам") = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ Элементы.ГруппаОтбораПоМеткам.Подсказка = "Нет отбора" Тогда
			
			Метки_КлиентСервер_ат.УстановитьОтборСпискаПоТаблицеЗначений(Список, Тип("ДокументСсылка.Заявка_ат"),
				Тип("СправочникСсылка.Метки_ат"), "Ссылка", ТаблицаЗначенийОтбора,, ОтображатьПустые,,
				Элементы.ГруппаОтбораПоМеткам, Элементы.ГруппаОтбораПоМеткам.Подсказка);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	УправляемыеФормы_Клиент_ат.ПередЗакрытием(ЭтаФорма, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	УправляемыеФормы_КлиентСервер_ат.ВосстановитьОтборСписка(Список, Настройки, "Клиент");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если ПараметрыПеретаскивания.Значение.Количество() = 1 Тогда
		
		ИзменитьПриоритетЗаявки(ПараметрыПеретаскивания.Значение[0], Строка);
		Элемент.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьОтборПоАктуальным(Команда)
	
	УстановитьОтборПоАктуальным_Сервер(НЕ Элементы.ОтборПоАктуальным.Пометка);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоПроектам(Команда)
	
	Если Элементы.ОтборПоПроектам.Пометка Тогда
		
		ПослеВыбораПроектов(Неопределено, Неопределено);
		
	Иначе
		
		Оповещение = Новый ОписаниеОповещения("ПослеВыбораПроектов", ЭтаФорма);
		
		ОткрытьФорму("Справочник.Проекты_ат.Форма.ФормаГрупповогоВыбора", , ЭтаФорма, , , , Оповещение,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборПоАктуальным_Сервер(ИспользоватьОтбор)
	
	Элементы.ОтборПоАктуальным.Пометка = ИспользоватьОтбор;
	
	СотрудникОрганизации = ВнутреннегоИспользования_КлиентСерверПовтИсп_ат.СотрудникОрганизации();
	
	АктуальныеПроекты = Планирование_Сервер_ат.ПолучитьМассивАктуальныхПроектов(
		ИспользоватьОтбор,//Актуальные Или Не Архивные,
		ИспользоватьОтбор,//Актуальные Или не Отложенные,
		Ложь//Не ВнутреннегоИспользования_КлиентСерверПовтИсп_ат.МенеджерПроектовИлиПолныеПрава()
		); //И Элементы.ФормаФильтр_Персональные.Пометка);
	
	Список.Параметры.УстановитьЗначениеПараметра("ОтбиратьПоАктуальнымПроектам", ИспользоватьОтбор);
	Список.Параметры.УстановитьЗначениеПараметра("АктуальныеПроекты", АктуальныеПроекты);
	
	УправляемыеФормы_КлиентСервер_ат.ИзменитьИспользованиеОтбораДинамическогоСписка(Список, "Скрыть завершённые", ИспользоватьОтбор);
	
	// отбор кривоват, пока просто отключим
	//Если СотрудникОрганизации Тогда
	//	
	//	Список.Параметры.УстановитьЗначениеПараметра("ОтбиратьАктуальныеПоПользователю", ИспользоватьОтбор);
	//	
		УправляемыеФормы_КлиентСервер_ат.ИзменитьИспользованиеОтбораДинамическогоСписка(Список, "Скрыть подчинённые", ИспользоватьОтбор);
	//	
	//Иначе
	//	
		Список.Параметры.УстановитьЗначениеПараметра("ОтбиратьАктуальныеПоПользователю", Ложь);
	//	
	//КонецЕсли;
	
	Если ИспользоватьОтбор Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СвязиОбъектов_ат.Предок КАК Заявка
			|ИЗ
			|	РегистрСведений.СвязиОбъектов_ат КАК СвязиОбъектов_ат
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваЗаданий_ат КАК СвойстваЗаданий_ат
			|		ПО (СвойстваЗаданий_ат.Ссылка = СвязиОбъектов_ат.Объект)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСтатусовЗаданий_ат.СрезПоследних(, ) КАК ИсторияСтатусовЗаданий_ат
			|		ПО (ИсторияСтатусовЗаданий_ат.Ссылка = СвязиОбъектов_ат.Объект)
			|ГДЕ
			|	СвязиОбъектов_ат.Предок ССЫЛКА Документ.Заявка_ат
			|	И СвязиОбъектов_ат.Объект ССЫЛКА Документ.Задание_ат
			|	И НЕ СвязиОбъектов_ат.Объект.ПометкаУдаления
			|	И СвойстваЗаданий_ат.Исполнитель = &Ответственный
			|	И (ИсторияСтатусовЗаданий_ат.Статус ЕСТЬ NULL
			|		ИЛИ ИсторияСтатусовЗаданий_ат.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданий_ат.Выполнено)
			|		ИЛИ ИсторияСтатусовЗаданий_ат.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданий_ат.Прервано)
			|		ИЛИ ИсторияСтатусовЗаданий_ат.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданий_ат.Отменено))
			|");
		
		Запрос.УстановитьПараметр("Ответственный", Пользователи.ТекущийПользователь());
		
		ЗаявкиПоАктуальныеЗаданиям = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Заявка");
		
	Иначе
		
		ЗаявкиПоАктуальныеЗаданиям = Новый Массив;
		
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ЗаявкиПоАктуальныеЗаданиям", ЗаявкиПоАктуальныеЗаданиям);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораПроектов(Результат, ПередаваемыеПараметры) Экспорт
	
	Если Результат <> Неопределено И Результат.Проекты.Количество() > 0 Тогда
		
		Список.Параметры.УстановитьЗначениеПараметра("ОтбиратьПоПроектам", Истина);
		Список.Параметры.УстановитьЗначениеПараметра("Проекты", Результат.Проекты);

		Элементы.ОтборПоПроектам.Пометка = Истина;
		Элементы.ОтборПоПроектам.РасширеннаяПодсказка.Заголовок = Результат.Представление;
		
	Иначе
		
		Список.Параметры.УстановитьЗначениеПараметра("ОтбиратьПоПроектам", Ложь);
		
		Элементы.ОтборПоПроектам.Пометка = Ложь;
		Элементы.ОтборПоПроектам.РасширеннаяПодсказка.Заголовок = "Установить отбор по проектам";
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьПриоритетЗаявки(Заявка, ВыбраннаяПозиция)
	
	Планирование_Сервер_ат.ИзменитьПриоритетЗаявки(Заявка, ВыбраннаяПозиция);
	
КонецПроцедуры

#КонецОбласти

#Область УниверсальныеОбработчикиДействий

&НаКлиенте
Процедура ОбработчикУниверсальныхДействий(Команда)
	
	УправляемыеФормы_Клиент_ат.ДополнительныеДействияФормы(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаСервере
Функция   ОбработчикУниверсальныхДействий_Сервер(Элемент) Экспорт
	
	Возврат УправляемыеФормы_Сервер_ат.ДополнительныеДействияФормы(ЭтаФорма, Команды[Элемент.Имя]);
	
КонецФункции

&НаКлиенте
Процедура НастроитьОтборы(Команда)
	
	ОписаниеОповещенияОЗакрытииФормы = Новый ОписаниеОповещения("УстановитьОтборыПослеНастройки", Метки_Клиент_ат);
	
	ПараметрыМеток = Новый Структура;
	ПараметрыМеток.Вставить("ИмяОбъектаМетаданных",				"Справочник.Метки_ат");
	ПараметрыМеток.Вставить("ТаблицаЗначенийОтбора",			ПреобразоватьТаблицуЗначенийОтбораВМассивСтруктур());
	ПараметрыМеток.Вставить("ДобавлятьНулевоеЗначение",			ОтображатьПустые);
	ПараметрыМеток.Вставить("ИмяРеквизитаОтбора",				"КлючОтбораПоТегам");
	ПараметрыМеток.Вставить("ОтбиратьПоКлючу",					Истина);
	ПараметрыМеток.Вставить("ВключитьОтборПоПроекту",			Истина); //!!!!!TODO - удалить, не используется
	ПараметрыМеток.Вставить("ТипЗначенияОбъекта",				Тип("ДокументСсылка.Заявка_ат"));
	ПараметрыМеток.Вставить("ТипЗначенияМеток",					Тип("СправочникСсылка.Метки_ат"));
	ПараметрыМеток.Вставить("Форма",							ЭтаФорма);
	
	Если Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтбиратьПоПроектам")).Значение = Истина Тогда
		ПараметрыМеток.Вставить("Проекты",
			Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Проекты")).Значение);
	КонецЕсли;
	
	ПараметрыМеток.Вставить("ОписаниеОповещенияОЗакрытииФормы",	ОписаниеОповещенияОЗакрытииФормы);
	
	Метки_Клиент_ат.ОбработчикКомандНастройкиОтборов(Команда, ПараметрыМеток);
	
КонецПроцедуры

&НаСервере
Функция   ПреобразоватьТаблицуЗначенийОтбораВМассивСтруктур()
	
	ТаблицаЗначений = РеквизитФормыВЗначение("ТаблицаЗначенийОтбора");
	
	Колонки = ТаблицаЗначений.Колонки;
	
	МассивСтруктур = Новый Массив;
	
	Для Каждого СтрокаТаблицыЗначений Из ТаблицаЗначений Цикл
		
		СтрокаТаблицы = Новый Структура;
		
		Для Каждого Колонка Из Колонки Цикл
			
			ИмяКолонки = Колонка.Имя;
			СтрокаТаблицы.Вставить(ИмяКолонки, СтрокаТаблицыЗначений[ИмяКолонки]);
			
		КонецЦикла;
		
		МассивСтруктур.Добавить(СтрокаТаблицы);
		
	КонецЦикла;
	
	Возврат МассивСтруктур;
	
КонецФункции

#КонецОбласти
