
Функция ОтправитьОтчетОбОшибке_ОбработчикМетодаОтправить(Запрос)
	
	ДанныеОтчета = Новый ХранилищеЗначения(Запрос.ПолучитьТелоКакДвоичныеДанные());
	РегистрыСведений.РегистрацияОшибок_ат.ДобавитьЗапись(ДанныеОтчета);
	
	Возврат Новый HTTPСервисОтвет(200);
	
КонецФункции

Функция ПолучениеИнформацииОбОшибке_ОбработчикМетодаОтправить(Запрос)
	
	ДанныеОтвета = Новый Структура;
	
	//данная ошибка должна быть отправлена в сервис регистрации
	ДанныеОтвета.Вставить("needSendReport", Истина); 
	
	//Текст, который будет показан пользователю в качестве дополнительной информации об ошибке (подробнее см. здесь). 
	//https://its.1c.ru/db/v8317doc#bookmark:dev:TI000002261
	//Текст желательно возвращать на том языке, который будет понятен пользователю. 
	//Информацию о локализации можно получить из запроса, который поступает в метод getInfo.
	//Если желательно, чтобы пользователь отправил отчет о конкретной ошибке в сервис регистрации ошибок, 
	//то с помощью данного свойства можно показать пользователю рекомендацию, мотивирующую на отправку отчета об ошибке.
	ДанныеОтвета.Вставить("userMessage", "Чем быстрее разработчики узнают об ошибке, тем скорее она будет исправлена =)"
		"Если автоматическая отправка не работает, сохраните, пожалуйста, отчёт об ошибке в файл и отправьте его как вложение по адресу электропочты support@at.com.ru");
	
	//тип дампа, который нужно приложить к отчету об ошибке (аналогичен значению атрибута type элемента dump файла logcfg.xml)
	ДанныеОтвета.Вставить("dumpType", 1);
	
	ЗаписьJSONОтвета = Новый ЗаписьJSON;
	ЗаписьJSONОтвета.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSONОтвета, ДанныеОтвета);
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки(ЗаписьJSONОтвета.Закрыть());
	
	Возврат Ответ;
	
КонецФункции
