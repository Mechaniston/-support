
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Планирование"
//
////////////////////////////////////////////////////////////////////////////////

#Область  ПрограммныйИнтерфейс

#Область  ВыполнениеЗаданий

Процедура ПриступитьКЗаданию(Задание, Источник) Экспорт
	
	РезультатПроверкиВозможностиПриступитьКЗаданию = Планирование_Сервер_ат.ПроверитьВозможностьПриступитьКЗаданию(Задание);
	
	ПередаваемыеПараметры = Новый Структура;
	ПередаваемыеПараметры.Вставить("НачинаемоеЗадание", Задание);
	ПередаваемыеПараметры.Вставить("Источник", Источник);
	
	Если ТипЗнч(РезультатПроверкиВозможностиПриступитьКЗаданию) = Тип("Структура") Тогда
		
		Если РезультатПроверкиВозможностиПриступитьКЗаданию.Свойство("ПредложитьВвестиОДЗ") Тогда
			
			//Результат_Дата = Результат.ПредложитьВвестиОДЗ.Дата; //почему-то не используется
			//Результат_Тикет = Результат.ПредложитьВвестиОДЗ.Тикет;
			
			ПередаваемыеПараметры.Вставить("РезультатПроверкиВозможностиПриступитьКЗаданию", РезультатПроверкиВозможностиПриступитьКЗаданию);
			ПередаваемыеПараметры.Вставить("Заявка", РезультатПроверкиВозможностиПриступитьКЗаданию.ПредложитьВвестиОДЗ.Заявка);
			ПередаваемыеПараметры.Вставить("ЗавершаемоеЗадание", РезультатПроверкиВозможностиПриступитьКЗаданию.ЗавершаемоеЗадание);
			
			Оповещение = Новый ОписаниеОповещения("ПослеВводаОДЗ", ЭтотОбъект, ПередаваемыеПараметры);
			
			ПараметрыОткрытияФормы = Новый Структура("Заявка, Задание", ПередаваемыеПараметры.Заявка, ПередаваемыеПараметры.НачинаемоеЗадание);
			
			ОткрытьФорму("ОбщаяФорма.ФормаВводаОДЗ", ПараметрыОткрытияФормы, Источник,,,, Оповещение);
			
		КонецЕсли;
		
		ПроверитьВопросыПередНачаломВыполненияЗадания(ПередаваемыеПараметры);
		
	ИначеЕсли ТипЗнч(РезультатПроверкиВозможностиПриступитьКЗаданию) = Тип("Строка") Тогда
		
		ПоказатьПредупреждение(, РезультатПроверкиВозможностиПриступитьКЗаданию, 5);
		
	Иначе
		
		ПриступитьКЗаданиюПослеВопросов(ПередаваемыеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗавершитьЗадание(Задание, Источник, СтатусЗавершения) Экспорт
	
	СтруктураЗакрытия = Планирование_Сервер_ат.ПолучитьСтруктуруЗавершенияЗадания(Задание, СтатусЗавершения);
	
	Если НЕ ПустаяСтрока(СтруктураЗакрытия.ТекстОшибки) Тогда
		
		ПоказатьПредупреждение(, СтруктураЗакрытия.ТекстОшибки, 5);
		Возврат;
		
	КонецЕсли;
	
	СтруктураЗакрытия.Вставить("Источник", Источник);
	СтруктураЗакрытия.Вставить("ЗавершаемоеЗадание", Задание);
	СтруктураЗакрытия.Вставить("СтатусЗавершенияЗадания", СтатусЗавершения);
	
	КоличествоЗакрываемыхЗаявок = СтруктураЗакрытия.ЗакрываемыеЗаявки.Количество();
	
	Если КоличествоЗакрываемыхЗаявок = 0 Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ЗавершаемоеЗадание", Задание);
		ПараметрыОткрытия.Вставить("СтатусЗавершенияЗадания", СтатусЗавершения);
		
		Оповещение = Новый ОписаниеОповещения("ПослеНастройкиЗавершенияЗадания", ЭтотОбъект, СтруктураЗакрытия);
		
		ОткрытьФорму("Обработка.ФинализацияЗиЗ_ат.Форма.ЗавершениеЗадания", ПараметрыОткрытия, Источник,,,, Оповещение);
		
	Иначе
		
		Оповещение = Новый ОписаниеОповещения("ПослеВопросаОЗакрытииЗаявок", ЭтотОбъект, СтруктураЗакрытия);
		
		Если КоличествоЗакрываемыхЗаявок = 1 Тогда
			
			ТекстВопроса = "Это последнее Задание по данной Заявке.";
			
		Иначе
			
			ТекстВопроса = "С заданием связано несколько Заявок. Будет закрыта только Заявка #"
				+ СтруктураЗакрытия.ЗакрываемыеЗаявки[0].Тикет;
			//!!!!!HOTFIX
			//ТекстВопроса = "Будут закрыты связанные Заявки (" + КоличествоЗакрываемыхЗаявок + " шт.).";
			ВызватьИсключение "Ошибка архитектуры! Допустимо закрывать только одну Заявку!";
			
		КонецЕсли;
		
		ТекстВопроса = ТекстВопроса + Символы.ПС + "Закрыть Заявку?";
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 10);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПрерватьЗадание(Задание, Источник) Экспорт
	
	СтруктураЗакрытия = Планирование_Сервер_ат.ПолучитьСтруктуруЗавершенияЗадания(Задание,
		ПредопределенноеЗначение("Перечисление.СтатусыЗаданий_ат.Прервано"), Ложь);
	
	Если НЕ ПустаяСтрока(СтруктураЗакрытия.ТекстОшибки) Тогда
		
		ПоказатьПредупреждение(, СтруктураЗакрытия.ТекстОшибки, 5);
		Возврат;
		
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗавершаемоеЗадание", Задание);
	ПараметрыОткрытия.Вставить("ЗавершениеПрерыванием", Истина);
	ПараметрыОткрытия.Вставить("СтатусЗавершенияЗадания", ПредопределенноеЗначение("Перечисление.СтатусыЗаданий_ат.Прервано"));
	
	ПередаваемыеПараметры = Новый Структура;
	ПередаваемыеПараметры.Вставить("ЗавершаемоеЗадание", Задание);
	ПередаваемыеПараметры.Вставить("Источник", Источник);
	
	Оповещение = Новый ОписаниеОповещения("ПослеНастройкиПрерыванияЗадания", ЭтотОбъект, ПередаваемыеПараметры);
	
	ОткрытьФорму("Обработка.ФинализацияЗиЗ_ат.Форма.ЗавершениеЗадания", ПараметрыОткрытия, Источник,,,, Оповещение);
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

#Область  СлужебныеПроцедурыИФункции

#Область  ВыполнениеЗаданий

Процедура ПроверитьВопросыПередНачаломВыполненияЗадания(ПередаваемыеПараметры)
	
	Если ПередаваемыеПараметры.Свойство("ЗадатьВопросОПродолженииПриНедостаткеВремени") Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПослеВопросаОПродолженииПриНедостаткеВремени", ЭтотОбъект,
			ПередаваемыеПараметры);
		
		ПоказатьВопрос(Оповещение, "Недостаточно согласованного времени по заданию!
			|Продолжить?", РежимДиалогаВопрос.ДаНет, 5, КодВозвратаДиалога.Нет);
		
	КонецЕсли;
	
	Если ПередаваемыеПараметры.Свойство("ЗадатьВопросОПродолженииПриНедостаткеСредств") Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПослеВопросаОПродолженииПриНедостаткеСредств", ЭтотОбъект,
			ПередаваемыеПараметры);
		
		ПоказатьВопрос(Оповещение, "Недостаточно согласованного времени по заданию!
			|Продолжить?", РежимДиалогаВопрос.ДаНет, 5, КодВозвратаДиалога.Нет);
		
	КонецЕсли;
	
	ПриступитьКЗаданиюПослеВопросов(ПередаваемыеПараметры);
	
КонецПроцедуры

Процедура ПослеВопросаОПродолженииПриНедостаткеВремени(Результат, ПередаваемыеПараметры)
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ПриступитьКЗаданиюПослеВопросов(ПередаваемыеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеВопросаОПродолженииПриНедостаткеСредств(Результат, ПередаваемыеПараметры)
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ПриступитьКЗаданиюПослеВопросов(ПередаваемыеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеВводаОДЗ(Результат, ПередаваемыеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") И Результат.Свойство("ОДЗ") Тогда
		
		Если ЗначениеЗаполнено(Результат.ОДЗ) Тогда
			
			Планирование_Сервер_ат.УстановитьОжидаемуюДатуЗавершенияЗаявки(ПередаваемыеПараметры.Заявка, Результат.ОДЗ,, Результат.Причина, Результат.Комментарий);
			
			ПроверитьВопросыПередНачаломВыполненияЗадания(ПередаваемыеПараметры);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриступитьКЗаданиюПослеВопросов(ПередаваемыеПараметры) Экспорт
	
	Если НЕ ПередаваемыеПараметры.Свойство("ЗавершаемоеЗадание")
		ИЛИ ПередаваемыеПараметры.НачинаемоеЗадание = ПередаваемыеПараметры.ЗавершаемоеЗадание Тогда
		
		Планирование_Сервер_ат.ПриступитьКЗаданию(ПередаваемыеПараметры.НачинаемоеЗадание);
		
	Иначе
		
		Оповещение = Новый ОписаниеОповещения("ПослеВопросаОПриостановкеТекущегоЗадания", ЭтотОбъект, ПередаваемыеПараметры);
		ТекстВопроса = "Хотите приступить к выбранному Заданию с приостановкой выполняемого Вами в настоящий момент?";
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 10, КодВозвратаДиалога.Нет);
		
	КонецЕсли;
	
	ОбновитьОтображениеПослеНачалаЗадания(ПередаваемыеПараметры.Источник);
	
КонецПроцедуры

Процедура ПослеВопросаОПриостановкеТекущегоЗадания(Результат, ПередаваемыеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ЗавершаемоеЗадание", ПередаваемыеПараметры.ЗавершаемоеЗадание);
		ПараметрыОткрытия.Вставить("ЗавершениеПрерыванием", Истина);
		ПараметрыОткрытия.Вставить("СтатусЗавершенияЗадания", ПредопределенноеЗначение("Перечисление.СтатусыЗаданий_ат.Прервано"));
		
		Оповещение = Новый ОписаниеОповещения("ПослеНастройкиВыполненияНовогоЗаданияСПриостановкйТекущего", ЭтотОбъект, ПередаваемыеПараметры);
		
		ОткрытьФорму("Обработка.ФинализацияЗиЗ_ат.Форма.ЗавершениеЗадания", ПараметрыОткрытия, ПередаваемыеПараметры.Источник,,,, Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеНастройкиВыполненияНовогоЗаданияСПриостановкйТекущего(Результат, ПередаваемыеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Результат = Планирование_Сервер_ат.ПриступитьКЗаданиюСПриостановкойТекущего(ПередаваемыеПараметры.НачинаемоеЗадание,
			ПередаваемыеПараметры.ЗавершаемоеЗадание, Результат);
			
		Если ТипЗнч(Результат) = Тип("Строка") Тогда
			
			ПоказатьПредупреждение(, Результат, 5);
			
		ИначеЕсли Результат <> Неопределено И ЗначениеЗаполнено(Результат.Сообщение) Тогда
			
			ПоказатьПредупреждение(, Результат.Сообщение, 5);
			
		КонецЕсли;
		
		ОбновитьОтображениеПослеНачалаЗадания(ПередаваемыеПараметры.Источник);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеНастройкиЗавершенияЗадания(Результат, ПередаваемыеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Планирование_Сервер_ат.ЗавершитьЗадание(ПередаваемыеПараметры.ЗавершаемоеЗадание, ПередаваемыеПараметры.СтатусЗавершенияЗадания, Результат);
		
		ОбновитьОтображениеФормы(ПередаваемыеПараметры.Источник);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеНастройкиПрерыванияЗадания(Результат, ПередаваемыеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		РезультатПрерывания = Планирование_Сервер_ат.ПрерватьЗадание(ПередаваемыеПараметры.ЗавершаемоеЗадание,
			ПредопределенноеЗначение("Перечисление.СтатусыЗаданий_ат.Прервано"), Результат);
		
		Если ТипЗнч(РезультатПрерывания) = Тип("Строка") Тогда
			
			ПоказатьПредупреждение(, РезультатПрерывания, 5);
			
		ИначеЕсли ТипЗнч(РезультатПрерывания) = Тип("Структура") И ЗначениеЗаполнено(РезультатПрерывания.Сообщение) Тогда
			
			ПоказатьПредупреждение(, РезультатПрерывания.Сообщение, 5);
			
		КонецЕсли;
		
		ОбновитьОтображениеФормы(ПередаваемыеПараметры.Источник);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеВопросаОЗакрытииЗаявок(Результат, ПередаваемыеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Владелец = ПередаваемыеПараметры.Источник;
		ПередаваемыеПараметры.Удалить("Источник"); // в параметрах открытия формы нельзя передавать мутабельное значение Источника
		
		ОткрытьФорму("Обработка.ФинализацияЗиЗ_ат.Форма.ЗакрытиеЗаявки", ПередаваемыеПараметры, Владелец);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область  Проекты

Процедура ВыбратьПроект(Форма, Ссылка, ЗапретВыбораДочерних = Ложь, ИмяРеквизита = Неопределено) Экспорт
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытия.Вставить("Ссылка", Ссылка);
	ПараметрыОткрытия.Вставить("ЗапретВыбораДочерних", ЗапретВыбораДочерних);
	
	ПередаваемыеПараметры = Новый Структура;
	ПередаваемыеПараметры.Вставить("ИмяРеквизита", ИмяРеквизита);
	Оповещение = Новый ОписаниеОповещения("ПослеВыбораПроекта", Форма, ПередаваемыеПараметры); 
	
	ОткрытьФорму("Справочник.Проекты_ат.ФормаВыбора", ПараметрыОткрытия, Форма, , , , Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область  ВспомогательныеПроцедурыИФункции

Процедура ОбновитьОтображениеФормы(Форма) Экспорт
	
	Если Форма.ИмяФормы = "Документ.Задание_ат.Форма.ФормаДокумента" Тогда
		
		Форма.Прочитать();
		
	ИначеЕсли Форма.ИмяФормы = "Документ.Задание_ат.Форма.ФормаСписка" Тогда
		
		Форма.Элементы.Список.Обновить();
		
	ИначеЕсли Форма.ИмяФормы = "ОбщаяФорма.ЗаявкиИЗадания_ат" Тогда
		
		Форма.Элементы.СписокЗаданий.Обновить();
		Форма.Элементы.СписокЗаявок.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗадатьВопросОбУстановкеОтветственного(Заявка, Исполнитель) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СменитьОтветственногоПоЗаявке", ЭтотОбъект,
		Новый Структура("Заявка,Исполнитель", Заявка, Исполнитель));
	
	ПоказатьВопрос(ОписаниеОповещения, "У родительской Заявки не установлен ответственный!
		|Установить ответственным исполнителя задания?", РежимДиалогаВопрос.ДаНет, 5, КодВозвратаДиалога.Да,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

Процедура СменитьОтветственногоПоЗаявке(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Планирование_Сервер_ат.СменитьОтветственногоПоЗаявке(ДополнительныеПараметры.Заявка, ДополнительныеПараметры.Исполнитель);
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьПараметрыФактическогоВыполнения(ФактическаяДатаНачала, ФактическаяДатаОкончания, ФактическоеВремяДляОтображения, ПоВремени = Истина) Экспорт
	
	Если ПоВремени Тогда
		
		ФактическоеВремя = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляХранения(ФактическоеВремяДляОтображения);
		ФактическаяДатаНачала = ФактическаяДатаОкончания - ФактическоеВремя * 60;
		
	Иначе
		
		ФактическоеВремя = ФактическаяДатаОкончания - ФактическаяДатаНачала;
		ФактическоеВремяДляОтображения = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(ФактическоеВремя);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область  ВнутренниеСлужебныеПроцедурыИФункции

#Область  ВыполнениеЗаданий

Процедура ОбновитьОтображениеПослеНачалаЗадания(Источник)
	
	ОбновитьОтображениеФормы(Источник);
	
	Если Источник.ИмяФормы = "Документ.Задание_ат.Форма.ФормаДокумента" Тогда
		Источник.Элементы.ПерейтиВРПЗ.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
