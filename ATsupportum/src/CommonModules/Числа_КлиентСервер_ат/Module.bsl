
////////////////////////////////////////////////////////////////////////////////
// Работа с числами
// 
// Первый автор - Вячеслав 'Mechanist' А. Павлов (с) с 2008 г.
//
//////////////////////////////////////////////////////////////////////////////// 

 //!!!!!HOTFIX - скопировать целиком
 
// Функция округления числа по базовому значению
Функция   ПривестиЧислоКБазе(Значение, База, МинимальноеЧислоОкругления = 0) Экспорт //!!!!!TODO - переименовать в ПривестиКБазе
	
	Если База = 0 Тогда
		
		Возврат Значение;
		
	КонецЕсли;
	
	Если Значение < 0 Тогда
		
		Множитель = -1;
		
	Иначе
		
		Множитель = 1;
		
	КонецЕсли;
	
	ПриведенноеЧисло = Цел((Значение * Множитель + База / 2) / База) * База;
	Остаток = Значение * Множитель - ПриведенноеЧисло;
	
	Если МинимальноеЧислоОкругления = 0
	   И Остаток = 0 ИЛИ Остаток < МинимальноеЧислоОкругления Тогда
		
		Возврат ПриведенноеЧисло * Множитель;
		
	Иначе
		
		Возврат (ПриведенноеЧисло + База) * Множитель;
		
	КонецЕсли;
	
КонецФункции

Функция   ВернутьКакЧисло(Значение) Экспорт //!!!!!HOTFIX

	Попытка
		Возврат Число(Значение);
	Исключение
		Возврат 0;
	КонецПопытки;

КонецФункции

// Возвращает модуль числа.
// Параметры:
//  Х – (Число) Исходное число
// Возвращаемое значение:
//  Число – модуль исходного числа
Функция   ПолучитьПоМодулю(Число) Экспорт //!!!!!HOTFIX
	
	Возврат ?(Число >= 0, Число, -Число);
	
КонецФункции

Функция   ЯвляетсяНечётным(Число) Экспорт //!!!!!HOTFIX
	
	Если ТипЗнч(Число) = Тип("Число") Тогда
		Возврат Число%2 <> 0;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции // НечётноеЧисло


////////////////////////////////////////////////////////////////////////////////
// Хеширование
 
// Возвращает хеш-сумму переданных данных (использование актуально на версиях платформы ниже 8.3)
// Ссылка на источник: http://infostart.ru/public/100845/
//
// Параметры:
// ИсходныеДанные - передаваемые для получения хеш-кода данные
// Хеш - начальное значение хеша
// М - множитель (влияет на качество хеша и производительность)
// Разрядность - размер получаемого ключа, как Максимальная величина + 1 (18446744073709551615 - 64 бита)
Функция   ПолучитьХешСумму(ИсходныеДанные, Хеш = 5381, М = 33, Разрядность = 18446744073709551616) Экспорт 

    // Приведем к строке
    Если ТипЗнч(ИсходныеДанные) = Тип("ДвоичныеДанные") Тогда
        СтрокаДляКодирования = Base64Строка(ИсходныеДанные);
    Иначе
        СтрокаДляКодирования = Строка(ИсходныеДанные);
    КонецЕсли;

    ДлинаБлока = 11;
    НачПозиция = 1;
    ДлинаСтроки = СтрДлина(СтрокаДляКодирования);

    Пока НачПозиция <= ДлинаСтроки Цикл
        СтрокаБлока = Сред(СтрокаДляКодирования, НачПозиция, ДлинаБлока);
        ДлинаПодстроки = СтрДлина(СтрокаБлока);
        Если ДлинаПодстроки = ДлинаБлока Тогда
            Хеш = ((((((((((( Хеш * М + КодСимвола(СтрокаБлока, 1)) * М + КодСимвола(СтрокаБлока, 2)) * М
                + КодСимвола(СтрокаБлока, 3)) * М + КодСимвола(СтрокаБлока, 4)) * М + КодСимвола(СтрокаБлока, 5)) * М
                + КодСимвола(СтрокаБлока, 6)) * М + КодСимвола(СтрокаБлока, 7)) * М + КодСимвола(СтрокаБлока, 8)) * М
                + КодСимвола(СтрокаБлока, 9)) * М + КодСимвола(СтрокаБлока, 10)) * М + КодСимвола(СтрокаБлока, 11))
        Иначе
            Для к = 1 По ДлинаПодстроки Цикл
                Хеш = М * Хеш + КодСимвола(СтрокаБлока, к);
            КонецЦикла
        КонецЕсли;
        Хеш = Хеш % Разрядность;
        НачПозиция = НачПозиция + ДлинаБлока
    КонецЦикла;

    Возврат Хеш;

КонецФункции
