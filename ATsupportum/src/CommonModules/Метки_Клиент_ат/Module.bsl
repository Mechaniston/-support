
Процедура ОбработчикКомандНастройкиОтборов(Команда, Параметры) Экспорт
	
	ИмяКоманды = Команда.Имя;
	
	Если Прав(ИмяКоманды, 7) = "Текущий" Тогда
		ОтобратьПоТекущемуЗначению(Параметры);
	ИначеЕсли Прав(ИмяКоманды, 18) = "ВыбратьСохраненный" Тогда
		ЗагрузитьНастройку(Параметры);
	ИначеЕсли Прав(ИмяКоманды, 14) = "ОтключитьОтбор" Тогда
		ОтключитьОтбор(Параметры);
	Иначе
		ОткрытьФормуНастройки(Параметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтобратьПоТекущемуЗначению(Параметры)
	
	ИсточникМеток = Параметры.Форма.Элементы.Список.ТекущаяСтрока;
	СписокЗначенийМеток = Метки_Сервер_ат.ПолучитьСписокЗначенийМеток(ИсточникМеток, Параметры.ИмяОбъектаМетаданных, ТипЗнч(ИсточникМеток), Параметры.ТипЗначенияМеток);
	
	ПолныйМассивМеток = Метки_Сервер_ат.ПолучитьПолныйМассивЭлементовОтбора(Параметры.ИмяОбъектаМетаданных);
	
	МассивОтборовМеток = Новый Массив;
	
	Для Каждого ЭлементМассива Из ПолныйМассивМеток Цикл
		
		СтруктураОтборовМетки = Новый Структура;
		СтруктураОтборовМетки.Вставить("Значение", ЭлементМассива);
		
		ЭлементСпискаЗначенийМеток = СписокЗначенийМеток.НайтиПоЗначению(ЭлементМассива);
		Если НЕ ЭлементСпискаЗначенийМеток = Неопределено
		   И ЭлементСпискаЗначенийМеток.Пометка Тогда
			
			СтруктураОтборовМетки.Вставить("ИспользоватьИ", 	Истина);
			СтруктураОтборовМетки.Вставить("ИспользоватьИЛИ",	Ложь);
			СтруктураОтборовМетки.Вставить("ИспользоватьНЕ",	Ложь);
			
		Иначе
			
			СтруктураОтборовМетки.Вставить("ИспользоватьИ", 	Ложь);
			СтруктураОтборовМетки.Вставить("ИспользоватьИЛИ",	Ложь);
			СтруктураОтборовМетки.Вставить("ИспользоватьНЕ",	Ложь);
			
		КонецЕсли;
		
		МассивОтборовМеток.Добавить(СтруктураОтборовМетки);
		
	КонецЦикла;

	Параметры.Форма.ТаблицаЗначенийОтбора.Очистить();
	Для Каждого ЭлементМассиваМеток Из МассивОтборовМеток Цикл
		
		НоваяСтрока = Параметры.Форма.ТаблицаЗначенийОтбора.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементМассиваМеток);
		
	КонецЦикла;
		
	Метки_КлиентСервер_ат.УстановитьОтборСпискаПоТаблицеЗначений(Параметры.Форма.Список, ТипЗнч(ИсточникМеток),
		Параметры.ТипЗначенияМеток,	Параметры.ИмяРеквизитаОтбора, МассивОтборовМеток, Параметры.ОтбиратьПоКлючу,
		Ложь,,	Параметры.Форма.Элементы.ГруппаОтбораПоМеткам,
		Метки_ВызовСервера_ат.СформироватьПредставлениеОтбораИзСпискаАктивныхМеток(СписокЗначенийМеток));
	
КонецПроцедуры

Процедура ЗагрузитьНастройку(Параметры)
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("РежимВыбора", Истина);
	ОписаниеОповещенияОВыборе = Новый ОписаниеОповещения("ЗагрузитьВыбраннуюНастройку", Метки_Клиент_ат, Параметры);
	
	ОткрытьФорму("Справочник.НастройкиМеток_ат.ФормаВыбора", ПараметрыОткрытияФормы,,,,, ОписаниеОповещенияОВыборе,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура ОтключитьОтбор(Параметры)
	
	Метки_КлиентСервер_ат.УстановитьОтборСпискаПоТаблицеЗначений(Параметры.Форма.Список, Параметры.ТипЗначенияОбъекта,
		Параметры.ТипЗначенияМеток, Параметры.ИмяРеквизитаОтбора, Неопределено, Параметры.ОтбиратьПоКлючу,
		Ложь, Истина, Параметры.Форма.Элементы.ГруппаОтбораПоМеткам);
	
КонецПроцедуры

Процедура ОткрытьФормуНастройки(Параметры)
	
	ОписаниеОповещенияОЗакрытииФормы = Параметры.ОписаниеОповещенияОЗакрытииФормы;
	Форма = Параметры.Форма;
	
	// Удаляются мутабельные значения.
	Параметры.Удалить("ОписаниеОповещенияОЗакрытииФормы");
	Параметры.Удалить("Форма");
	
	ОткрытьФорму("ОбщаяФорма.ФормаНастройкиОтборовПоТегам_ат", Параметры, Форма,,,, ОписаниеОповещенияОЗакрытииФормы);
	
КонецПроцедуры

Процедура УстановитьОтборыПослеНастройки(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		Метки_КлиентСервер_ат.УстановитьОтборСпискаПоТаблицеЗначений(Результат.Форма.Список,
			Результат.ТипЗначенияОбъекта, Результат.ТипЗначенияМеток, Результат.ИмяРеквизитаОтбора,
			Результат.ТаблицаЗначенийОтбора, Результат.ОтбиратьПоКлючу, Результат.ДобавлятьНулевоеЗначение,,
			Результат.Форма.Элементы.ГруппаОтбораПоМеткам, Результат.ПредставлениеОтбора);
			
		Результат.Форма.ТаблицаЗначенийОтбора.Очистить();
		Для Каждого СтрокаТаблицыЗначенийОтбора Из Результат.ТаблицаЗначенийОтбора Цикл
			
			НоваяСтрока = Результат.Форма.ТаблицаЗначенийОтбора.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицыЗначенийОтбора);
			
		КонецЦикла;
		
		Результат.Форма.ОтображатьПустые = Результат.ДобавлятьНулевоеЗначение;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗагрузитьВыбраннуюНастройку(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		СтруктураНастройки = Метки_ВызовСервера_ат.ПолучитьСтруктуруНастройки(Результат);
		ВыбранныеМетки = СтруктураНастройки.ВыбранныеМетки;
		
		Метки_КлиентСервер_ат.УстановитьОтборСпискаПоТаблицеЗначений(ДополнительныеПараметры.Форма.Список,
			ДополнительныеПараметры.ТипЗначенияОбъекта, ДополнительныеПараметры.ТипЗначенияМеток,
			ДополнительныеПараметры.ИмяРеквизитаОтбора, ВыбранныеМетки,	ДополнительныеПараметры.ОтбиратьПоКлючу,
			СтруктураНастройки.ВключаяНезаполненные,, ДополнительныеПараметры.Форма.Элементы.ГруппаОтбораПоМеткам,
			Метки_ВызовСервера_ат.СформироватьПредставлениеОтбораИзТаблицы(ВыбранныеМетки,
			СтруктураНастройки.ВключаяНезаполненные));
			
		ДополнительныеПараметры.Форма.ТаблицаЗначенийОтбора.Очистить();
		Для Каждого ВыбраннаяМетка Из ВыбранныеМетки Цикл
			
			НоваяСтрока = ДополнительныеПараметры.Форма.ТаблицаЗначенийОтбора.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыбраннаяМетка);
			
		КонецЦикла;
				
	КонецЕсли;
	
КонецПроцедуры

#Область  РаботаСМеткамиВФОрмах

Процедура УстановитьМетку(Форма, ИзменятьИспользование = Истина, ИзменениеФлажком = Ложь, ИзменениеИзВыбранных = Ложь) Экспорт
	
	Если ИзменениеИзВыбранных Тогда
		ТекущиеДанные = Форма.Элементы.ВыбранныеМетки.ТекущиеДанные;
	Иначе
		ТекущиеДанные = Форма.Элементы.ДеревоМеток.ТекущиеДанные;
	КонецЕсли;
	
	Значение = ТекущиеДанные.Значение;
	
	Если Метки_ВызовСервера_ат.ЭтоГруппа(Значение) Тогда
		Возврат;
	КонецЕсли;
	
	Если ИзменятьИспользование Тогда
		
		ИзменитьИспользование(Форма, ИзменениеФлажком, ИзменениеИзВыбранных);
		
		Если ИзменениеИзВыбранных Тогда
			ИзменитьИспользованиеВДеревеМеток(Форма, Значение, ТекущиеДанные.Использовать);
		Иначе
			ИзменитьИспользованиеВВыбранныхМетках(Форма, Значение, ТекущиеДанные.Использовать);
		КонецЕсли;
		
	КонецЕсли;
	
	ВыполнитьВыбор(Форма, Значение, ТекущиеДанные.Использовать, ТекущиеДанные.Частичная, ТекущиеДанные.Сохраненная);
	Форма.ВыбранныеМетки.Сортировать("Значение");
	Метки_КлиентСервер_ат.ОбновитьПредставленияВыбранныхМеток(Форма);
	
КонецПроцедуры

Процедура ИзменитьИспользование(Форма, ИзменениеФлажком = Ложь, ИзменениеИзВыбранных = Ложь) Экспорт
	
	Если ИзменениеИзВыбранных Тогда
		ТекущиеДанные = Форма.Элементы.ВыбранныеМетки.ТекущиеДанные;
	Иначе
		ТекущиеДанные = Форма.Элементы.ДеревоМеток.ТекущиеДанные;
	КонецЕсли;
	
	Использование = ТекущиеДанные.Использовать + ?(ИзменениеФлажком, 0, 1);
	Если Использование > Форма.МаксимальноеЗначениеИспользования
		ИЛИ Использование = 2 И НЕ ТекущиеДанные.Частичная Тогда
		
		Использование = 0;
		
	КонецЕсли;
	
	Если ИзменениеИзВыбранных Тогда
		Форма.Элементы.ВыбранныеМетки.ТекущиеДанные.Использовать = Использование;
	Иначе
		Форма.Элементы.ДеревоМеток.ТекущиеДанные.Использовать = Использование;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьИспользованиеВВыбранныхМетках(Форма, Значение, Использование)
	
	НайденныеСтроки = Форма.ВыбранныеМетки.НайтиСтроки(Новый Структура("Значение", Значение));
	
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		НайденнаяСтрока.Использовать = Использование;
	КонецЦикла;
	
КонецПроцедуры

Процедура ИзменитьИспользованиеВДеревеМеток(Форма, Значение, Использование)
	
	Строка = ПолучитьИдентификаторСтроки(Значение, Форма.ДеревоМеток.ПолучитьЭлементы());
	
	Если НЕ Строка = Неопределено Тогда
		Строка.Использовать = Использование;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьВыбор(Форма, Метка, Использование, Частичная, Сохраненная) Экспорт
	
	Если Использование >= 1 Тогда
		
		НайденныеСтроки = Форма.ВыбранныеМетки.НайтиСтроки(Новый Структура("Значение", Метка));
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			НоваяСтрока = Форма.ВыбранныеМетки.Добавить();
			НоваяСтрока.Значение = Метка;
			НоваяСтрока.Новая = НЕ Сохраненная;
			НоваяСтрока.Использовать = Использование;
			НоваяСтрока.Сохраненная = Сохраненная;
			НоваяСтрока.Частичная = Частичная;
			
			//Форма.Элементы.ВыбранныеМетки.ТекущаяСтрока = Форма.ВыбранныеМетки.Индекс(НоваяСтрока);
			
			//Сч = 1;
			//СчСтарый = Сч;
			//Форма.Элементы.ВыбранныеМетки.ТекущаяСтрока = Сч;
			//
			//Пока НЕ Форма.Элементы.ВыбранныеМетки.ТекущаяСтрока = Неопределено Цикл
			//	
			//	СчСтарый = Сч;
			//	Сч = Сч + 1;
			//	Форма.Элементы.ВыбранныеМетки.ТекущаяСтрока = Сч;
			//	
			//КонецЦикла;
			//
			//Форма.Элементы.ВыбранныеМетки.ТекущаяСтрока = СчСтарый;
			
		Иначе
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				НайденнаяСтрока.Использовать = Использование;
				НайденнаяСтрока.Удаленная = Ложь;
				НайденнаяСтрока.Новая = НЕ Сохраненная;
				НайденнаяСтрока.Сохраненная = Сохраненная;
				НайденнаяСтрока.Частичная = Частичная;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Попытка
			//!!!!! пока так, потом убедится, что реквизит формы есть везде, где нужно
			Форма.МеткиИзменены = Истина;
		Исключение
		КонецПопытки;
		
	ИначеЕсли Использование = 0 Тогда
		
		НайденныеСтроки = Форма.ВыбранныеМетки.НайтиСтроки(Новый Структура("Значение", Метка));
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
				Если Сохраненная Тогда
					
					НайденнаяСтрока.Удаленная = Истина;
					НайденнаяСтрока.Новая = Ложь;
					НайденнаяСтрока.Сохраненная = Сохраненная;
					НайденнаяСтрока.Частичная = Частичная;
					
				Иначе
					
					Форма.ВыбранныеМетки.Удалить(НайденнаяСтрока);
					
				КонецЕсли;
				
				Попытка
					//!!!!! пока так, потом убедится, что реквизит формы есть везде, где нужно
					Форма.МеткиИзменены = Истина;
				Исключение
				КонецПопытки;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция   ПолучитьИдентификаторСтроки(Значение, СтрокиДерева) Экспорт
	
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		
		Если СтрокаДерева.Значение = Значение Тогда
			Возврат СтрокаДерева;
		КонецЕсли;
		
		ИдентификаторСтроки = ПолучитьИдентификаторСтроки(Значение, СтрокаДерева.ПолучитьЭлементы());
		
		Если НЕ ИдентификаторСтроки = Неопределено Тогда
			Возврат ИдентификаторСтроки;
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

Процедура ОбновитьПринадлежностьВыбранныхМетокКПроектам(Форма) Экспорт
	
	Для Каждого СтрокаВыбранныхМеток Из Форма.ВыбранныеМетки Цикл
		
		НайденнаяСтрока = ПолучитьИдентификаторСтроки(СтрокаВыбранныхМеток.Значение, Форма.ДеревоМеток.ПолучитьЭлементы());
		Если НайденнаяСтрока = Неопределено Тогда
			
			СтрокаВыбранныхМеток.НетВПроектах = Истина;
			СтрокаВыбранныхМеток.Представление = СтрокаВыбранныхМеток.Представление + "*";
			
		Иначе
			
			СтрокаВыбранныхМеток.НетВПроектах = Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
