
Процедура ОбновитьЗапросы() Экспорт
	
	Токен = Константы.ТГ_botAPItoken.Получить(); //!!!перенести
	Проха = Новый ИнтернетПрокси;
	Проха.Установить("https", "192.168.188.1", 8080);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МАКСИМУМ(ТГ_ЗапросыБоту.Идентификатор) КАК ПоследнийИдентификатор
		|ИЗ
		|	РегистрСведений.ТГ_ЗапросыБоту КАК ТГ_ЗапросыБоту");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() ТОгда
		ПараметрОбновления = "?offset=" + Формат(Выборка.ПоследнийИдентификатор, "ЧГ=");
	Иначе
		ПараметрОбновления = "";
	КонецЕсли;
	
	Соединение = Новый HTTPСоединение("api.telegram.org",,,, Проха,, Новый ЗащищенноеСоединениеOpenSSL);
	Ответ = Соединение.Получить(Новый HTTPЗапрос("bot" + Токен + "/" + "getUpdates"
		+ ПараметрОбновления));
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	
	Данные = ПрочитатьJSON(Чтение, Истина);
	Если Данные.Получить("ok") Тогда
		
		Запросы = Новый ТаблицаЗначений;
		Запросы.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10)));
		
		Для Каждого Результат Из Данные.Получить("result") Цикл
			
			НовыйЗапрос = Запросы.Добавить();
			НовыйЗапрос.Идентификатор = Результат.Получить("update_id");
			
		КонецЦикла;
		
		Запрос = Новый Запрос(
			"выбрать
|запроспараметр.идентификатор
|поместить
|ЗапросыВТ
|из
|&Запросы как запроспараметр;
|ВЫБРАТЬ
			|	ЗапросыВТ.Идентификатор
			|ИЗ
			|	ЗапросыВТ КАК ЗапросыВТ
			|ГДЕ
			|	НЕ ЗапросыВТ.Идентификатор В
			|		(ВЫБРАТЬ
			|			ТГ_ЗапросыБоту.Идентификатор
			|		ИЗ
			|			РегистрСведений.ТГ_ЗапросыБоту КАК ТГ_ЗапросыБоту)");
		Запрос.УстановитьПараметр("Запросы", Запросы);
		
		НовыеЗапросы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Идентификатор");
		
		Для Каждого Результат Из Данные.Получить("result") Цикл
			
			Если НовыеЗапросы.Найти(Результат.Получить("update_id")) = Неопределено Тогда // вторая проверка, на всякий
				Сообщить("СТРАННОСТИ!!!");
				Продолжить;
			КонецЕсли;
			
			Сообщение = Результат.Получить("message");
			
			ЗаписьНовогоЗапроса = РегистрыСведений.ТГ_ЗапросыБоту.СоздатьМенеджерЗаписи();
			ЗаписьНовогоЗапроса.Идентификатор = Результат.Получить("update_id");
			ЗаписьНовогоЗапроса.ДатаВремя = МестноеВремя(Дата('19700101') + Сообщение.Получить("date"));
			ЗаписьНовогоЗапроса.ТекстЗапроса = Сообщение.Получить("text");
			ЗаписьНовогоЗапроса.ИдентификаторСообщения = Сообщение.Получить("message_id");
			ЗаписьНовогоЗапроса.Отправитель = Сообщение.Получить("from").Получить("first_name");
			ЗаписьНовогоЗапроса.ИдентификаторОтправителя = Сообщение.Получить("from").Получить("id");
			ЗаписьНовогоЗапроса.Записать();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьЗапросы

Процедура ОбработатьЗапросы() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТГ_ЗапросыБоту.Идентификатор КАК Идентификатор,
		|	ТГ_ЗапросыБоту.ТекстЗапроса КАК ТекстЗапроса,
		|	ТГ_ЗапросыБоту.ИдентификаторСообщения КАК ИдентификаторСообщения,
		|	ТГ_ЗапросыБоту.ИдентификаторОтправителя КАК ИдентификаторОтправителя
		|ИЗ
		|	РегистрСведений.ТГ_ЗапросыБоту КАК ТГ_ЗапросыБоту
		|ГДЕ
		|	НЕ ТГ_ЗапросыБоту.Обработан
		|
		|УПОРЯДОЧИТЬ ПО
		|	Идентификатор //ИдентификаторСообщения
		|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Запись = РегистрыСведений.ТГ_ЗапросыБоту.СоздатьМенеджерЗаписи();
		Запись.Идентификатор = Выборка.Идентификатор;
		Запись.Прочитать();
		Запись.Обработан = Истина;
		Запись.ОшибкаОбработки = НЕ ОбработатьЗапрос(Выборка);
		Запись.Записать();
		
	КонецЦикла;
	
КонецПроцедуры // ОбработатьЗапросы

Функция   ОбработатьЗапрос(ВыборкаЗапроса)
	
	Возврат ОтправитьСообщение(СформироватьСообщение(ВыборкаЗапроса), ВыборкаЗапроса.ИдентификаторОтправителя);
	
КонецФункции

Функция   СформироватьСообщение(ВыборкаЗапроса)
	
	Результат = "Не понял чего ты хочешь :(";
	
	Если ВыборкаЗапроса.ТекстЗапроса = "/start" Тогда
		
		Результат = "Привет! Всё пока в разработке :)";
		
	ИначеЕсли ВыборкаЗапроса.ТекстЗапроса = "/time"  тогда
		
		Результат = Формат(ТекущаяДата(),"ДЛФ=DDT");
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция   ОтправитьСообщение(ТекстСообщения, ИдентификаторПолучателя)
	
	Токен = Константы.ТГ_botAPItoken.Получить(); //!!!перенести
	Проха = Новый ИнтернетПрокси;
	Проха.Установить("https", "192.168.188.1", 8080);
	
	Соединение = Новый HTTPСоединение("api.telegram.org",,,, Проха,, Новый ЗащищенноеСоединениеOpenSSL);
	Ответ = Соединение.Получить(Новый HTTPЗапрос("bot" + Токен + "/" + "sendMessage?chat_id="
		+ Формат(ИдентификаторПолучателя, "ЧГ=") + "&text=" + СокрЛП(ТекстСообщения)));
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	
	Данные = ПрочитатьJSON(Чтение, Истина);
	Возврат Данные.Получить("ok");
	
КонецФункции

Процедура УстановитьАдресВызоваWebhook()
	
	Токен = Константы.ТГ_botAPItoken.Получить(); //!!!перенести
	Проха = Новый ИнтернетПрокси;
	Проха.Установить("https", "192.168.188.1", 8080);
	
	Соединение = Новый HTTPСоединение("api.telegram.org",,,, Проха,, Новый ЗащищенноеСоединениеOpenSSL);
	Ответ = Соединение.Получить(Новый HTTPЗапрос("bot" + Токен + "/" + "setWebhook?url="
		+ КодироватьСтроку(Константы.ТГ_АдресВызоваWebhook.Получить()
			+ "/" + Константы.ТГ_WebhookToken.Получить(), СпособКодированияСтроки.КодировкаURL)));
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	
	Данные = ПрочитатьJSON(Чтение, Истина);
	//Возврат Данные.Получить("ok");
	
КонецПроцедуры

Процедура ПодпискаНаИзменениеКонстантыТГ_АдресВызоваWebhook(Источник, Отказ) Экспорт
	
	УстановитьАдресВызоваWebhook();
	
КонецПроцедуры
