////////////////////////////////////////////////////////////////////////////////
// Подсистема "Присоединенные файлы".
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Позволяет переопределить справочники хранения файлов по типам владельцев.
// 
// Параметры:
//  ТипВладелецФайла  - Тип ссылки объекта, к которому добавляется файл.
//
//  ИменаСправочников - Соответствие, содержащее в ключах имена справочников.
//                      При вызове содержит имя одного стандартного справочника.
//                      Если в значении соответствия разместить Истина только
//                      один раз, тогда в случаях, когда требуется один справочник,
//                      будет выбран такой справочник.
//                      Если же справочников несколько, и не один в значении не содержит
//                      Истина или более одного содержат Истина, тогда будет ошибка.
//
Процедура ПриОпределенииСправочниковХраненияФайлов(ТипВладелецФайла, ИменаСправочников) Экспорт
	
	
	
КонецПроцедуры

Процедура СкопироватьПрисоединенныеФайлыИзИсточникаДругогоТипа(Знач Источник, Знач Получатель) Экспорт
	
	КопируемыеФайлы = ПрисоединенныеФайлыСлужебный.ПолучитьВсеПодчиненныеФайлы(Источник.Ссылка);
	Для Каждого КопируемыйФайл Из КопируемыеФайлы Цикл
		Если КопируемыйФайл.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(КопируемыйФайл);
		
		ИмяСправочника = ПрисоединенныеФайлыСлужебный.ИмяСправочникаХраненияФайлов(Получатель);
		МенеджерОбъектаПриемника = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("Справочник." + ИмяСправочника);
		
		КопияФайла = МенеджерОбъектаПриемника.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(КопияФайла, КопируемыйФайл, "Наименование,ДатаСоздания,ИндексКартинки,Описание,ПодписанЭЦП,ПутьКФайлу,Размер,Расширение,СтатусИзвлеченияТекста,Том,ТипХраненияФайла");
		
		КопияФайлаСсылка = МенеджерОбъектаПриемника.ПолучитьСсылку();
		КопияФайла.УстановитьСсылкуНового(КопияФайлаСсылка);
		КопияФайла.ВладелецФайла = Получатель.Ссылка;
		КопияФайла.Редактирует = Справочники.Пользователи.ПустаяСсылка();
		
		КопияФайла.ТекстХранилище = Новый ХранилищеЗначения(КопируемыйФайл.ТекстХранилище.Получить());
		КопияФайла.ФайлХранилище = Новый ХранилищеЗначения(КопируемыйФайл.ФайлХранилище.Получить());
		
		КопияФайла.ЭлектронныеЦифровыеПодписи.Очистить();
		Для Каждого КопируемаяСтрокаТаблицы Из КопируемыйФайл.ЭлектронныеЦифровыеПодписи Цикл
			КопияСтрокиТаблицы = КопияФайла.ЭлектронныеЦифровыеПодписи.Добавить();
			ЗаполнитьЗначенияСвойств(КопияСтрокиТаблицы, КопируемаяСтрокаТаблицы);
			КопияСтрокиТаблицы.Подпись = КопируемаяСтрокаТаблицы.Подпись;
			КопияСтрокиТаблицы.Сертификат = КопируемаяСтрокаТаблицы.Сертификат;
		КонецЦикла;
		
		КопияФайла.СертификатыШифрования.Очистить();
		Для Каждого КопируемаяСтрокаТаблицы Из КопируемыйФайл.СертификатыШифрования Цикл
			КопияСтрокиТаблицы = КопияФайла.СертификатыШифрования.Добавить();
			ЗаполнитьЗначенияСвойств(КопияСтрокиТаблицы, КопируемаяСтрокаТаблицы);
			КопияСтрокиТаблицы.Сертификат = КопируемаяСтрокаТаблицы.Сертификат;
		КонецЦикла;
		
		ДвоичныеДанные = ПрисоединенныеФайлы.ПолучитьДвоичныеДанныеФайла(КопируемыйФайл);
		КопияФайла.ТипХраненияФайла = ФайловыеФункцииСлужебный.ТипХраненияФайлов();
		Если ФайловыеФункцииСлужебный.ТипХраненияФайлов() = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе Тогда
			ПрисоединенныеФайлыСлужебный.ЗаписатьФайлВИнформационнуюБазу(КопияФайлаСсылка, ДвоичныеДанные);
		Иначе
			// добавить в один из томов (где есть свободное место)
			ФайловыеФункцииСлужебный.ДобавитьНаДиск(
				ДвоичныеДанные,
				КопияФайла.ПутьКФайлу,
				КопияФайла.Том,
				КопияФайла.ДатаМодификацииУниверсальная,
				"",
				КопияФайла.Наименование,
				КопияФайла.Расширение,
				КопияФайла.Размер);
		КонецЕсли;
		КопияФайла.Записать();
	КонецЦикла;
	
КонецПроцедуры