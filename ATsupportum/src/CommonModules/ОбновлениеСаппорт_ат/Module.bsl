
Процедура ЗаполнитьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.НачальноеЗаполнение = Истина;
	Обработчик.Процедура = "ОбновлениеСаппорт_ат.НачальноеЗаполнение";
	
КонецПроцедуры

Процедура НачальноеЗаполнение() Экспорт
	
	ОбновитьПредопределенныеВидыКонтактнойИнформации();
	
	ВыполнитьНачальноеЗаполнениеСправочникаКонтрагенты_ат();
	ВыполнитьНачальноеЗаполнениеСправочникаСостоянияИБ_ат();
	ВыполнитьНачальноеЗаполнениеСправочникаСодержанияРабот_ат();	
	ВыполнитьНачальноеЗаполнениеСправочникаПараметрыКонтроляДанных_ат();
	ВыполнитьНачальноеЗаполнениеПВХОбъектыНумераторов_ат();
	
КонецПроцедуры 

Процедура ОбновитьПредопределенныеВидыКонтактнойИнформации()
	
	ПараметрыПроверкиАдреса = Новый Структура;
	ПараметрыПроверкиАдреса.Вставить("АдресТолькоРоссийский", Истина);
	ПараметрыПроверкиАдреса.Вставить("ПроверятьКорректность", Ложь);
	ПараметрыПроверкиАдреса.Вставить("ЗапрещатьВводНекорректного", Ложь);
	ПараметрыПроверкиАдреса.Вставить("СкрыватьНеактуальныеАдреса", Ложь);
	ПараметрыПроверкиАдреса.Вставить("ВключатьСтрануВПредставление", Ложь);
	
	УправлениеКонтактнойИнформацией.ОбновитьВидКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента,
		Перечисления.ТипыКонтактнойИнформации.Адрес, НСтр("ru='Юридический адрес контрагента'"), Истина, Ложь, Ложь, 1, , ПараметрыПроверкиАдреса);
	УправлениеКонтактнойИнформацией.ОбновитьВидКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента,
		Перечисления.ТипыКонтактнойИнформации.Адрес, НСтр("ru='Фактический адрес контрагента'"), Истина, Ложь, Ложь, 2);
	УправлениеКонтактнойИнформацией.ОбновитьВидКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента,
		Перечисления.ТипыКонтактнойИнформации.Телефон, НСтр("ru='Телефон контрагента'"), Истина, Ложь, Ложь, 3, Истина);
	УправлениеКонтактнойИнформацией.ОбновитьВидКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.ФаксКонтрагента,
		Перечисления.ТипыКонтактнойИнформации.Факс, НСтр("ru='Факс контрагента'"), Истина, Ложь, Ложь, 4, Истина);
	УправлениеКонтактнойИнформацией.ОбновитьВидКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.EmailКонтрагента,
		Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, НСтр("ru='Адрес электронной почты контрагента'"), Истина, Ложь, Ложь, 5, Истина);
	УправлениеКонтактнойИнформацией.ОбновитьВидКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента,
		Перечисления.ТипыКонтактнойИнформации.Адрес, НСтр("ru='Почтовый адрес контрагента'"), Истина, Ложь, Ложь, 6);
	УправлениеКонтактнойИнформацией.ОбновитьВидКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияКонтрагента,
		Перечисления.ТипыКонтактнойИнформации.Другое, НСтр("ru='Любая другая контактная информация'"), Истина, Ложь, Ложь, 7);
	
	УправлениеКонтактнойИнформацией.ОбновитьВидКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.EmailПользователяДляУведомлений,
		Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, НСтр("ru='Адрес электронной почты для уведомлений'"), Истина,
		Ложь, Ложь, , Истина);
	УправлениеКонтактнойИнформацией.ОбновитьВидКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.EmailПользователяДляФинансовыхДокументов,
		Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, НСтр("ru='Адрес электронной почты для финансовых документов'"), Истина, Ложь, Ложь, , Истина);
	
КонецПроцедуры

Процедура ВыполнитьНачальноеЗаполнениеСправочникаКонтрагенты_ат()
	
	ОдинЭс = Справочники.Контрагенты_ат.ОдинЭс.ПолучитьОбъект();
	ОдинЭс.Поставщик = Истина;
	ОдинЭс.Записать();
	
КонецПроцедуры 

Процедура ВыполнитьНачальноеЗаполнениеСправочникаСостоянияИБ_ат()
	
	СостояниеИБ = Справочники.СостоянияИБ_ат.СоздатьЭлемент();
	СостояниеИБ.Наименование = "Тестовая ИБ";
	СостояниеИБ.Записать();
	
	СостояниеИБ = Справочники.СостоянияИБ_ат.СоздатьЭлемент();
	СостояниеИБ.Наименование = "Временная ИБ";
	СостояниеИБ.Записать();

	СостояниеИБ = Справочники.СостоянияИБ_ат.СоздатьЭлемент();
	СостояниеИБ.Наименование = "Архвная ИБ";
	СостояниеИБ.Записать();

	СостояниеИБ = Справочники.СостоянияИБ_ат.СоздатьЭлемент();
	СостояниеИБ.Наименование = "Не используется";
	СостояниеИБ.Записать();
	
КонецПроцедуры 

Процедура ВыполнитьНачальноеЗаполнениеСправочникаСодержанияРабот_ат()
	
	СодержаниеРабот = Справочники.СодержанияРабот_ат.СоздатьЭлемент();
	СодержаниеРабот.Наименование = "Планирование";
	СодержаниеРабот.Записать();

	СодержаниеРабот = Справочники.СодержанияРабот_ат.СоздатьЭлемент();
	СодержаниеРабот.Наименование = "Выезд";
	СодержаниеРабот.Записать();
	
	СодержаниеРабот = Справочники.СодержанияРабот_ат.СоздатьЭлемент();
	СодержаниеРабот.Наименование = "Документация";
	СодержаниеРабот.Записать();
	
КонецПроцедуры 

Процедура ВыполнитьНачальноеЗаполнениеСправочникаПараметрыКонтроляДанных_ат()
	
	КонтрольНаименований = Справочники.ПараметрыКонтроляДанных_ат.КонтролироватьНаименованияВСправочниках.ПолучитьОбъект();
	КонтрольНаименований.Исключения =
		"Справочник.ИдентификаторыОбъектовМетаданных; Справочник.ПоставкиПродуктов_ат; Справочник.ЭкземплярыПродуктов_ат;";
	КонтрольНаименований.Записать();
	
	ЗаполнениеРеквизитов = Справочники.ПараметрыКонтроляДанных_ат.ЗаполнятьОбщиеОбязательныеПоля.ПолучитьОбъект();
	ЗаполнениеРеквизитов.Использовать = Истина;
	ЗаполнениеРеквизитов.Записать();
	
КонецПроцедуры 

Процедура ВыполнитьНачальноеЗаполнениеПВХОбъектыНумераторов_ат()
	
	ОбъектНумератора = ПланыВидовХарактеристик.ОбъектыНумераторов_ат.СоздатьЭлемент();
	ОбъектНумератора.Наименование = "Договоры";
	ОбъектНумератора.ТипЗначения = Тип("СправочникСсылка.Договоры_ат");
	ОбъектНумератора.Записать();
	
КонецПроцедуры

Процедура ВыполнитьНачальноеЗаполнениеСправончникаПричиныПереносаОжидаемойДатыЗавершенияРабот_ат()
	
	Другое = Справочники.ПричиныПереносаОжидаемойДатыЗавершенияРабот_ат.Другое.ПолучитьОбъект();
	Другое.Наименование = "Прочее";
	Другое.ДобавлятьКомментарий = Истина;
	Другое.Записать();
	
	ИзмененоВСогласовании = Справочники.ПричиныПереносаОжидаемойДатыЗавершенияРабот_ат.ИзмененоВСогласовании.ПолучитьОбъект();
	ИзмененоВСогласовании.Наименование = "Изменено в согласовании";
	ИзмененоВСогласовании.Записать();
	
	ПоздняяОплата = Справочники.ПричиныПереносаОжидаемойДатыЗавершенияРабот_ат.ПоздняяОплатаСчета.ПолучитьОбъект();
	ПоздняяОплата.Наименование = "Поздняя оплата по счету";
	ПоздняяОплата.Записать();
	
	ПозднееСогласование = Справочники.ПричиныПереносаОжидаемойДатыЗавершенияРабот_ат.ПозднееСогласование.ПолучитьОбъект();
	ПозднееСогласование.Наименование = "Позднее согласование";
	ПозднееСогласование.Записать();
	
КонецПроцедуры