
&НаКлиенте
Процедура CPUВыбор(Элемент, ЗначениеДиаграммы, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапрос(Отказ, Команда)
	Если Не ЗначениеЗаполнено(КонечнаяДата) тогда
		КонечнаяДата = КонецДня(ТекущаяДата());		
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Сервер) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не указан Сервер! Пожалуйста, сделайте свой выбор!";
		Сообщение.Поле = "Сервер";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		// работает только с отмеченными(проверять заполнение) элементами и на сервере.
		// Сообщим платформе, что мы сами обработали проверку заполнения реквизита "Поставщик"
		//	    ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Сервер"));
		// Так как информация в документе не консистентна, то продолжать работу дальше смысла нет
		Отказ = Истина;
	Иначе
		Если ВсеКонтейнеры = ложь тогда
			Если Не ЗначениеЗаполнено(Контейнер) Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "Не указан Контейнер! Укажите контейнер, или поставьте галочку Все Контейнеры!";
				Сообщение.Поле = "Контейнер";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;
			Иначе
				ВыполнитьЗапросНаСервере(Сервер, Контейнер);
			КонецЕсли;
		Иначе
			ВыполнитьЗапросНаСервере(Сервер, Контейнер);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьЗапросНаСервере(Сервер, Контейнер)
			//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Память = Перечисления.ТипыРесурсов_ат.RAM;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Нагрузка_ат.Период,
		|	Нагрузка_ат.Сервер,
		|	Нагрузка_ат.VZКонтейнер,
		|	Нагрузка_ат.НаименованиеРесурса КАК Ресурс,
		|	Нагрузка_ат.ЗначениеРесурса КАК Значение
		|ИЗ
		|	РегистрСведений.СтатистикаНагрузкиСерверов_ат КАК Нагрузка_ат
		|ГДЕ
		|	Нагрузка_ат.НаименованиеРесурса = &Память
		|
		|СГРУППИРОВАТЬ ПО
		|	Нагрузка_ат.VZКонтейнер,
		|	Нагрузка_ат.Период,
		|	Нагрузка_ат.Сервер,
		|	Нагрузка_ат.НаименованиеРесурса,
		|	Нагрузка_ат.ЗначениеРесурса";
	
	Запрос.УстановитьПараметр("Контейнер", Контейнер);
	Запрос.УстановитьПараметр("Память", Память);
	Запрос.УстановитьПараметр("Сервер", Сервер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//Диаграмма.Обновление = Ложь;
	//Диаграмма.Очистить();
	//Диаграмма.АвтоТранспонирование = Ложь;
	//
	//ВыборкаНаименованиеРесурса = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//
	//Пока ВыборкаНаименованиеРесурса.Следующий() Цикл
	//	Серия = Диаграмма.УстановитьСерию(ВыборкаНаименованиеРесурса.НаименованиеРесурса);
	//	Серия.Текст = ВыборкаНаименованиеРесурса.НаименованиеРесурса;
	//	Серия.Расшифровка = ВыборкаНаименованиеРесурса.НаименованиеРесурса;
	//	Диаграмма.УстановитьЗначение(Точка, Серия, ВыборкаНаименованиеРесурса.Выбрать(), Серия.Расшифровка);
	//
	//	ВыборкаДетальныеЗаписи = ВыборкаНаименованиеРесурса.Выбрать();
	//
	//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//	КонецЦикла;
	//КонецЦикла;
	//
	//Диаграмма.АвтоТранспонирование = Истина;
	//Диаграмма.Обновление = Истина;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецФункции
//&НаСервере
//Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
//	//Вставить содержимое обработчика
//КонецПроцедуры


