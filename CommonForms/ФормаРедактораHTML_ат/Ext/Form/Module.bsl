
#Область ЛокальныеПеременные
	
//+ Работа с HTML
 
&НаКлиенте
Перем КоординатыЗаменяемогоСлова, СоответствиеКомандЗаменыСловам;

//- Работа с HTML
	
#КонецОбласти 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.ФормаОткрытаДляПросмотра Тогда
		РаботаСHTML_Сервер_ат.СоздатьПанелиРаботыСHTML(ЭтаФорма, Элементы.ГруппаПанелейРаботыСHTML, "ОбработчикКомандРаботыСHTML",, Элементы.ПолеHTML.КонтекстноеМеню);
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		
		АвтоЗаголовок = Ложь;
		Заголовок = Параметры.Заголовок;
		
	КонецЕсли;
	
	ТекстHTML = Параметры.ТекстHTML;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеHTMLДокументСформирован(Элемент)
	
	Если НЕ Параметры.ФормаОткрытаДляПросмотра Тогда
		
		РаботаСHTML_Клиент_ат.УстановитьДоступностьПанелейРедактирования(Элементы.ГруппаПанелейРаботыСHTML,
			Элементы.ПолеHTML, Ложь);
		
		//ДобавитьОбработчик Элемент.Документ.Body.oncontextmenu, ОбработчикСобытийПоляHTML;
		
		ИмяКоманды = "ГруппаПанелейРаботыСHTML_ПанельКнопок_ВключитьВозможностьРедактирования";
		Элементы[ИмяКоманды].Видимость = Ложь;
		ОбработчикКомандРаботыСHTML(Команды[ИмяКоманды], Неопределено);
		
	КонецЕсли;
	
	Если Параметры.ПроверитьОрфографиюПриОткрытии Тогда
		
		ПроверкаОрфографии_Клиент_ат.ПроверитьТекстВПолеHTMLДокумента(Элементы.ПолеHTML.Документ);
		
		ПроверитьПриОткрытии = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	Если НЕ Параметры.ФормаОткрытаДляПросмотра Тогда
		РаботаСHTML_Клиент_ат.ИзменитьПометкиКнопок(Элементы.ГруппаПанелейРаботыСHTML, Элементы.ПолеHTML.Документ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикКомандРаботыСHTML(Команда, ВыбранноеЗначение)
	
	Если НЕ Параметры.ФормаОткрытаДляПросмотра Тогда
		
		РаботаСHTML_Клиент_ат.ОбработчикКомандРаботыСHTML(ЭтаФорма, Команда, ВыбранноеЗначение,
			Элементы.ПолеHTML, Элементы.ГруппаПанелейРаботыСHTML, КоординатыЗаменяемогоСлова, СоответствиеКомандЗаменыСловам);
	
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
// Обработчик событий поля HTML.
// Должен содержать: проверку типа события (Событие.type = "contextmenu"),
// управление доступностью кнопок контекстного меню (ЭлементКонтекстногоМеню.Доступность = ПолеМожноРедактировать),
// вызов обработчика контекстного меню (РаботаСHTML_Клиент_ат.ОбработатьВызовКонтекстногоМеню),
// вызов процедуры формирования контекстного меню замены слова (ИзменитьКонтестноеМенюЗаменыСловПоляHTML(Неопределено, Истина)).
//
Процедура ОбработчикСобытийПоляHTML(Событие) Экспорт
	
	Если Параметры.ФормаОткрытаДляПросмотра Тогда
		Возврат;
	КонецЕсли;
	
	Если Событие.type = "contextmenu" Тогда	
		
		ПолеМожноРедактировать = РаботаСHTML_Клиент_ат.HTMLПолеМожноРедактировать(Элементы.ПолеHTML);
		//Элементы.ПолеHTMLКонтекстноеМеню.Доступность = ПолеМожноРедактировать;
		Для Каждого ЭлементКонтекстногоМеню Из Элементы.ПолеHTMLКонтекстноеМеню.ПодчиненныеЭлементы Цикл
			
			Если НЕ ЭлементКонтекстногоМеню.Имя = "ПолеHTML_КонтекстноеМеню_ВключитьВозможностьРедактирования"
			   И НЕ ЭлементКонтекстногоМеню.Имя = "ПолеHTML_КонтекстноеМеню_ПроверитьОрфографию" Тогда
				ЭлементКонтекстногоМеню.Доступность = ПолеМожноРедактировать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ПолеМожноРедактировать Тогда
			
			Если Событие.srcElement.id = "red_marker" Тогда
				
				РаботаСHTML_Клиент_ат.ОбработатьВызовКонтекстногоМеню(Событие, КоординатыЗаменяемогоСлова, СоответствиеКомандЗаменыСловам);	
				
				ИзменитьКонтестноеМенюЗаменыСловПоляHTML(СоответствиеКомандЗаменыСловам);
				
			Иначе
				
				ИзменитьКонтестноеМенюЗаменыСловПоляHTML(Неопределено, Истина);
				
			КонецЕсли;
			
		Иначе
			
			ИзменитьКонтестноеМенюЗаменыСловПоляHTML(Неопределено, Истина);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьКонтестноеМенюЗаменыСловПоляHTML(СоответствиеКомандЗаменыСловам, ТолькоОчистить = Ложь)
	
	РаботаСHTML_Сервер_ат.ИзменитьКонтестноеМенюЗаменыСловПоляHTML(ЭтаФорма,
		Элементы.ПолеHTML.КонтекстноеМеню, СоответствиеКомандЗаменыСловам, ТолькоОчистить, "ОбработчикКомандРаботыСHTML");
	
КонецПроцедуры 

&НаКлиенте
Процедура Применить(Команда)
	
	Если Параметры.ФормаОткрытаДляПросмотра Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("Текст", ПроверкаОрфографии_Клиент_ат.УдалитьИзТекстаHTMLТэгиВыделения(Элементы.ПолеHTML.Документ.body.innerHTML));
	ПараметрыЗакрытия.Вставить("Модифицированность", Модифицированность);
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры
