
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Ссылка = Параметры.Ссылка;
	ОтображаемыеСвязи = Параметры.ОтображаемыеСвязи;
	
	ЭтаФорма.АвтоЗаголовок = Ложь;
	ЭтаФорма.Заголовок = ОтображаемыеСвязи;
	
	ЗаполнитьДерево();
	
	Если Планирование_Сервер_ат.ПолучитьТекущийСтатус(Ссылка) = Перечисления.СтатусыЗаявок_ат.Закрыта Тогда //TODO - явно не только эта блокировка
		
		Элементы.ДобавитьСвязи.Доступность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиДействийПользователя

&НаКлиенте
Процедура ДеревоСвязейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение( , Элемент.ТекущиеДанные.Объект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьСвязи(Команда)
	
	ПараметрыОткрытия = Новый Структура("ОтображаемыеСвязи, Ссылка", ОтображаемыеСвязи, Ссылка);
	Оповещение = Новый ОписаниеОповещения("ПослеИзмененияСвязей", ЭтаФорма);
	
	ОткрытьФорму("ОбщаяФорма.ДобавлениеСвязейОбъектов_ат", ПараметрыОткрытия, ЭтаФорма, , , , Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСвязи(Команда)
	
	ПараметрыОткрытия = Новый Структура("ОтображаемыеСвязи, Ссылка", ОтображаемыеСвязи, Ссылка);
	Оповещение = Новый ОписаниеОповещения("ПослеИзмененияСвязей", ЭтаФорма);
	
	ОткрытьФорму("ОбщаяФорма.УдалениеСвязейОбъектов_ат", ПараметрыОткрытия, ЭтаФорма, , , , Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьДерево();
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДерево()
	
	Дерево = РеквизитФормыВЗначение("ДеревоСвязей");
	Дерево.Строки.Очистить();
	
	Если ОтображаемыеСвязи = "Предки" Тогда
		ЗаполнитьДеревоПредками(Ссылка, Дерево);
	ИначеЕсли ОтображаемыеСвязи = "Потомки" Тогда
		ЗаполнитьДеревоПотомками(Ссылка, Дерево);
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоСвязей");	
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьДеревоПредками(Объект, Дерево)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СвязиОбъектов.Код,
		|	СвязиОбъектов.Объект,
		|	СвязиОбъектов.Предок,
		|	СвязиОбъектов.СсылкаНаКод,
		|	СвязиОбъектов.Предок.Тезис КАК Тезис,
		|	СвязиОбъектов.Предок.ТипЗаявки КАК ТипЗаявки,
		|	СвязиОбъектов.Предок.СодержаниеРабот КАК СодержаниеРабот,
		|	СвойстваЗаданий.Краткосрочное КАК Краткосрочное,
		|	СвойстваЗаданий.ПланируемаяДатаНачала КАК ПланДатаНачала,
		|	СвойстваЗаданий.ПланируемаяДатаОкончания КАК ПланДатаОкончания,
		|	СвойстваЗаданий.ПланируемаяДлительность КАК ПланДлительность,
		|	СвойстваЗаданий.ПланируемоеВремяВыполнения КАК ПланВремяВыполнения,
		|	СвойстваЗаданий.ФактическаяДатаНачала КАК ФактДатаНачала,
		|	СвойстваЗаданий.ФактическаяДатаОкончания КАК ФактДатаОкончания,
		|	СвойстваЗаданий.ФактическаяДлительность КАК ФактДлительность,
		|	СвойстваЗаданий.ФактическоеВремяВыполнения КАК ФактВремяВыполнения,
		|	СвойстваЗаданий.Порог1 КАК Порог1,
		|	СвойстваЗаданий.Порог2 КАК Порог2,
		|	ВЫБОР
		|		КОГДА СвязиОбъектов.Предок ССЫЛКА Документ.Заявка_ат
		|			ТОГДА ИсторияСтатусовЗаявокСрезПоследних.Статус
		|		ИНАЧЕ ИсторияСтатусовЗаданийСрезПоследних.Статус
		|	КОНЕЦ КАК Статус,
		|	ВЫБОР
		|		КОГДА СвязиОбъектов.Предок ССЫЛКА Документ.Заявка_ат
		|			ТОГДА СвязиОбъектов.Предок.Тикет
		|		ИНАЧЕ СвязиОбъектов.Предок.Номер
		|	КОНЕЦ КАК Номер
		|ИЗ
		|	РегистрСведений.СвязиОбъектов_ат КАК СвязиОбъектов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСтатусовЗаявок_ат.СрезПоследних КАК ИсторияСтатусовЗаявокСрезПоследних
		|		ПО СвязиОбъектов.Предок = ИсторияСтатусовЗаявокСрезПоследних.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСтатусовЗаданий_ат.СрезПоследних КАК ИсторияСтатусовЗаданийСрезПоследних
		|		ПО СвязиОбъектов.Предок = ИсторияСтатусовЗаданийСрезПоследних.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваЗаданий_ат КАК СвойстваЗаданий
		|		ПО СвязиОбъектов.Предок = СвойстваЗаданий.Ссылка
		|ГДЕ
		|	СвязиОбъектов.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", Объект);
	
	ТаблицаСвязей = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаСвязей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСвязей.Индексы.Добавить("Код");
	
	СтатистикаЗаданий = Новый ТаблицаЗначений;
	СтатистикаЗаданий.Колонки.Добавить("Статус");
	СтатистикаЗаданий.Колонки.Добавить("Количество");
	СтатистикаЗаданий.Колонки.Добавить("ПланВремя");
	СтатистикаЗаданий.Колонки.Добавить("ФактВремя");
	
	СтатистикаЗаявок = Новый ТаблицаЗначений;
	СтатистикаЗаявок.Колонки.Добавить("Статус");
	СтатистикаЗаявок.Колонки.Добавить("Количество");
	СтатистикаЗаявок.Колонки.Добавить("ПланВремя");
	СтатистикаЗаявок.Колонки.Добавить("ФактВремя");
	
	Для каждого СтрокаТаблицыСвязей Из ТаблицаСвязей Цикл
		
		ТекущаяСтрокаДерева = Дерево.Строки;
		
		Пока СтрокаТаблицыСвязей.СсылкаНаКод > 0 Цикл
			
			Запрос = Новый Запрос;
			Запрос.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	СвязиОбъектов.Код КАК Код,
				|	СвязиОбъектов.Предок КАК Предок,
				|	СвязиОбъектов.Объект КАК Объект,
				|	СвязиОбъектов.ТипСвязи КАК ТипСвязи,
				|	СвязиОбъектов.СсылкаНаКод КАК СсылкаНаКод,
				|	СвязиОбъектов.Предок.Тезис КАК Тезис,
				|	СвязиОбъектов.Предок.ТипЗаявки КАК ТипЗаявки,
				|	СвязиОбъектов.Предок.СодержаниеРабот КАК СодержаниеРабот,
				|	СвойстваЗаданий.Краткосрочное КАК Краткосрочное,
				|	СвойстваЗаданий.ПланируемаяДатаНачала КАК ПланДатаНачала,
				|	СвойстваЗаданий.ПланируемаяДатаОкончания КАК ПланДатаОкончания,
				|	СвойстваЗаданий.ПланируемаяДлительность КАК ПланДлительность,
				|	СвойстваЗаданий.ПланируемоеВремяВыполнения КАК ПланВремяВыполнения,
				|	СвойстваЗаданий.ФактическаяДатаНачала КАК ФактДатаНачала,
				|	СвойстваЗаданий.ФактическаяДатаОкончания КАК ФактДатаОкончания,
				|	СвойстваЗаданий.ФактическаяДлительность КАК ФактДлительность,
				|	СвойстваЗаданий.ФактическоеВремяВыполнения КАК ФактВремяВыполнения,
				|	СвойстваЗаданий.Порог1 КАК Порог1,
				|	СвойстваЗаданий.Порог2 КАК Порог2,
				|	ВЫБОР
				|		КОГДА СвязиОбъектов.Предок ССЫЛКА Документ.Заявка_ат
				|			ТОГДА ИсторияСтатусовЗаявокСрезПоследних.Статус
				|		ИНАЧЕ ИсторияСтатусовЗаданийСрезПоследних.Статус
				|	КОНЕЦ КАК Статус,
				|	ВЫБОР
				|		КОГДА СвязиОбъектов.Предок ССЫЛКА Документ.Заявка_ат
				|			ТОГДА СвязиОбъектов.Предок.Тикет
				|		ИНАЧЕ СвязиОбъектов.Предок.Номер
				|	КОНЕЦ КАК Номер
				|ИЗ
				|	РегистрСведений.СвязиОбъектов_ат КАК СвязиОбъектов
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСтатусовЗаявок_ат.СрезПоследних КАК ИсторияСтатусовЗаявокСрезПоследних
				|		ПО СвязиОбъектов.Предок = ИсторияСтатусовЗаявокСрезПоследних.Ссылка
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСтатусовЗаданий_ат.СрезПоследних КАК ИсторияСтатусовЗаданийСрезПоследних
				|		ПО СвязиОбъектов.Предок = ИсторияСтатусовЗаданийСрезПоследних.Ссылка
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваЗаданий_ат КАК СвойстваЗаданий
				|		ПО СвязиОбъектов.Предок = СвойстваЗаданий.Ссылка
				|ГДЕ
				|	СвязиОбъектов.Код = &Код";
			
			Запрос.УстановитьПараметр("Код", СтрокаТаблицыСвязей.СсылкаНаКод);
			ДальнийПредок = Запрос.Выполнить().Выбрать();
			
			Если ДальнийПредок.Количество() > 0 Тогда
				
				ДальнийПредок.Следующий();
				
			Иначе
				
				Прервать;
				
			КонецЕсли;
			
			СуществующийПредок = ТекущаяСтрокаДерева.Найти(ДальнийПредок.Объект, "Объект");
			
			Если СуществующийПредок = Неопределено Тогда
				
				Предок = ТекущаяСтрокаДерева.Добавить();
				Предок.Объект = ДальнийПредок.Предок;
				Предок.Статус = ДальнийПредок.Статус;
				Предок.Номер = ДальнийПредок.Номер;
				
				Если ТипЗнч(ДальнийПредок.Предок) = Тип("ДокументСсылка.Задание_ат") Тогда	
					
					Описание = "Задание: " + ДальнийПредок.Тезис;
					Описание = Описание + " (" + ДальнийПредок.СодержаниеРабот + ")";
					Предок.Краткосрочное = ДальнийПредок.Краткосрочное;
					Предок.ПланДатаНачала = ДальнийПредок.ПланДатаНачала;
					Предок.ПланДатаОкончания = ДальнийПредок.ПланДатаОкончания;
					Предок.ПланДлительность = ДальнийПредок.ПланДлительность;
					Предок.ФактДатаНачала = ДальнийПредок.ФактДатаНачала;
					Предок.ФактДатаОкончания = ДальнийПредок.ФактДатаОкончания;
					Предок.ФактДлительность = ДальнийПредок.ФактДлительность;
					Предок.ФактВремя = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(ДальнийПредок.ФактВремяВыполнения);
					Предок.ПланВремя = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(ДальнийПредок.ПланВремяВыполнения);
					Предок.Порог1 = ДальнийПредок.Порог1;
					Предок.Порог2 = ДальнийПредок.Порог2;
					
					НоваяСтрока = СтатистикаЗаданий.Добавить();
					НоваяСтрока.Статус = ДальнийПредок.Статус;
					НоваяСтрока.Количество = 1;
					НоваяСтрока.ПланВремя = ДальнийПредок.ПланВремяВыполнения;
					НоваяСтрока.ФактВремя = ДальнийПредок.ФактВремяВыполнения;
					
				ИначеЕсли ТипЗнч(ДальнийПредок.Предок) = Тип("ДокументСсылка.Заявка_ат") Тогда
					
					Если ЗначениеЗаполнено(ДальнийПредок.Тезис) Тогда
						
						Описание = "Заявка: " + ДальнийПредок.Тезис;
						
					Иначе
						
						Описание = Строка(ДальнийПредок.Предок);
						
					КонецЕсли;
					
					Предок.Тип = ДальнийПредок.ТипЗаявки;
					ДатыЗаявки = Планирование_Сервер_ат.ПолучитьДатыЗаявкиПоЗаданиям(ДальнийПредок.Предок);
					Предок.ПланДатаНачала = ДатыЗаявки.ПланДатаНачала;
					Предок.ПланДатаОкончания = ДатыЗаявки.ПланДатаОкончания;
					Предок.ПланВремя = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(ДатыЗаявки.ПланВремяВыполнения);
					Предок.ФактДатаНачала = ДатыЗаявки.ФактДатаНачала;
					Предок.ФактДатаОкончания = ДатыЗаявки.ФактДатаОкончания;
					Предок.ФактВремя = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(ДатыЗаявки.ФактВремяВыполнения);
					
					НоваяСтрока = СтатистикаЗаявок.Добавить();
					НоваяСтрока.Статус = ДальнийПредок.Статус;
					НоваяСтрока.Количество = 1;
					НоваяСтрока.ПланВремя = ДальнийПредок.ПланВремяВыполнения;
					НоваяСтрока.ФактВремя = ДальнийПредок.ФактВремяВыполнения;
					
				Иначе
					
					Описание = Строка(ДальнийПредок.Предок);
					
				КонецЕсли;
				
				Предок.Описание = Описание;
				
				ТекущаяСтрокаДерева = Предок.Строки;
				
			Иначе
				
				ТекущаяСтрокаДерева = СуществующийПредок.Строки;
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыСвязей, ДальнийПредок);
			
		КонецЦикла;
		
		Предок = ТекущаяСтрокаДерева.Добавить();
		Предок.Объект = СтрокаТаблицыСвязей.Предок;
		Предок.Статус = СтрокаТаблицыСвязей.Статус;
		Предок.Номер = СтрокаТаблицыСвязей.Номер;
		
		Если ТипЗнч(СтрокаТаблицыСвязей.Предок) = Тип("ДокументСсылка.Задание_ат") Тогда
			
			Описание = "Задание: " + СтрокаТаблицыСвязей.Тезис;
			Описание = Описание + " (" + СтрокаТаблицыСвязей.СодержаниеРабот + ")";
			
			Предок.ПланДатаНачала = СтрокаТаблицыСвязей.ПланДатаНачала;
			Предок.ПланДатаОкончания = СтрокаТаблицыСвязей.ПланДатаОкончания;
			Предок.ПланВремя = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(СтрокаТаблицыСвязей.ПланВремяВыполнения);
			Предок.ФактДатаНачала = СтрокаТаблицыСвязей.ФактДатаНачала;
			Предок.ФактДатаОкончания = СтрокаТаблицыСвязей.ФактДатаОкончания;
			Предок.ФактВремя = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(СтрокаТаблицыСвязей.ФактВремяВыполнения);
			
			НоваяСтрока = СтатистикаЗаданий.Добавить();
			НоваяСтрока.Статус = СтрокаТаблицыСвязей.Статус;
			НоваяСтрока.Количество = 1;
			НоваяСтрока.ПланВремя = СтрокаТаблицыСвязей.ПланВремяВыполнения;
			НоваяСтрока.ФактВремя = СтрокаТаблицыСвязей.ФактВремяВыполнения;
			
		ИначеЕсли ТипЗнч(СтрокаТаблицыСвязей.Предок) = Тип("ДокументСсылка.Заявка_ат") Тогда
			
			Если ЗначениеЗаполнено(СтрокаТаблицыСвязей.Тезис) Тогда
				
				Описание = "Заявка: " + СтрокаТаблицыСвязей.Тезис;
				
			Иначе
				
				Описание = Строка(СтрокаТаблицыСвязей.Предок);
				
			КонецЕсли;
			
			ДатыЗаявки = Планирование_Сервер_ат.ПолучитьДатыЗаявкиПоЗаданиям(СтрокаТаблицыСвязей.Предок);
			Предок.ПланДатаНачала = ДатыЗаявки.ПланДатаНачала;
			Предок.ПланДатаОкончания = ДатыЗаявки.ПланДатаОкончания;
			Предок.ПланВремя = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(ДатыЗаявки.ПланВремяВыполнения);
			Предок.ФактДатаНачала = ДатыЗаявки.ФактДатаНачала;
			Предок.ФактДатаОкончания = ДатыЗаявки.ФактДатаОкончания;
			Предок.ФактВремя = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(ДатыЗаявки.ФактВремяВыполнения);
			
			НоваяСтрока = СтатистикаЗаявок.Добавить();
			НоваяСтрока.Статус = СтрокаТаблицыСвязей.Статус;
			НоваяСтрока.Количество = 1;
			НоваяСтрока.ПланВремя = ДатыЗаявки.ПланВремяВыполнения;
			НоваяСтрока.ФактВремя = ДатыЗаявки.ФактВремяВыполнения;
			
		Иначе
			
			Описание = Строка(СтрокаТаблицыСвязей.Предок);
			
		КонецЕсли;
		
		Предок.Описание = Описание;
	
	КонецЦикла;
	
	ВывестиСтатистику(СтатистикаЗаявок, СтатистикаЗаданий);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПотомками(Объект, Дерево)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СвязиОбъектов.Код,
		|	СвязиОбъектов.Объект,
		|	СвязиОбъектов.Предок,
		|	СвязиОбъектов.СсылкаНаКод,
		|	СвязиОбъектов.Объект.Тезис КАК Тезис,
		|	СвязиОбъектов.Объект.ТипЗаявки КАК ТипЗаявки,
		|	СвязиОбъектов.Объект.СодержаниеРабот КАК СодержаниеРабот,
		|	СвойстваЗаданий.Краткосрочное КАК Краткосрочное,
		|	СвойстваЗаданий.ПланируемаяДатаНачала КАК ПланДатаНачала,
		|	СвойстваЗаданий.ПланируемаяДатаОкончания КАК ПланДатаОкончания,
		|	СвойстваЗаданий.ПланируемаяДлительность КАК ПланДлительность,
		|	СвойстваЗаданий.ПланируемоеВремяВыполнения КАК ПланВремяВыполнения,
		|	СвойстваЗаданий.ФактическаяДатаНачала КАК ФактДатаНачала,
		|	СвойстваЗаданий.ФактическаяДатаОкончания КАК ФактДатаОкончания,
		|	СвойстваЗаданий.ФактическаяДлительность КАК ФактДлительность,
		|	СвойстваЗаданий.ФактическоеВремяВыполнения КАК ФактВремяВыполнения,
		|	СвойстваЗаданий.Порог1 КАК Порог1,
		|	СвойстваЗаданий.Порог2 КАК Порог2,
		|	ИсторияСтатусовЗаданийСрезПоследних.Статус,
		|	СвязиОбъектов.Объект.Номер КАК Номер
		|ИЗ
		|	РегистрСведений.СвязиОбъектов_ат КАК СвязиОбъектов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСтатусовЗаданий_ат.СрезПоследних КАК ИсторияСтатусовЗаданийСрезПоследних
		|		ПО СвязиОбъектов.Объект = ИсторияСтатусовЗаданийСрезПоследних.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваЗаданий_ат КАК СвойстваЗаданий
		|		ПО СвязиОбъектов.Объект = СвойстваЗаданий.Ссылка
		|ГДЕ
		|	СвязиОбъектов.Предок = &Объект";
	
	Запрос.УстановитьПараметр("Объект", Объект);
	
	ТаблицаСвязей = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаСвязей.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ТаблицаСвязей.Индексы.Добавить("Код");
	ТаблицаСвязей.Колонки.Добавить("СсылкаНаСтроку");
	
	СтатистикаЗаданий = Новый ТаблицаЗначений;
	СтатистикаЗаданий.Колонки.Добавить("Статус");
	СтатистикаЗаданий.Колонки.Добавить("Количество");
	СтатистикаЗаданий.Колонки.Добавить("ПланВремя");
	СтатистикаЗаданий.Колонки.Добавить("ФактВремя");
	
	СтатистикаЗаявок = Новый ТаблицаЗначений;
	СтатистикаЗаявок.Колонки.Добавить("Статус");
	СтатистикаЗаявок.Колонки.Добавить("Количество");
	СтатистикаЗаявок.Колонки.Добавить("ПланВремя");
	СтатистикаЗаявок.Колонки.Добавить("ФактВремя");
	
	Для каждого СтрокаТаблицыСвязей Из ТаблицаСвязей Цикл
		
		СтрокаРодителя = Неопределено;
		
		Если СтрокаТаблицыСвязей.СсылкаНаКод > 0 Тогда
			
			ПоискРодителя = ТаблицаСвязей.Найти(СтрокаТаблицыСвязей.СсылкаНаКод, "Код");
			
			Если ПоискРодителя <> Неопределено Тогда
				
				СтрокаРодителя = ПоискРодителя.СсылкаНаСтроку;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтрокаРодителя = Неопределено Тогда
			
			СтрокаРодителя = Дерево.Строки;
			
		КонецЕсли;
		
		Потомок = СтрокаРодителя.Добавить();
		Потомок.Объект = СтрокаТаблицыСвязей.Объект;
		Потомок.Статус = СтрокаТаблицыСвязей.Статус;
		Потомок.Номер = СтрокаТаблицыСвязей.Номер;
		
		Если ТипЗнч(СтрокаТаблицыСвязей.Объект) = Тип("ДокументСсылка.Задание_ат") Тогда
			
			Описание = "Задание: " + СтрокаТаблицыСвязей.Тезис;
			Описание = Описание + " (" + СтрокаТаблицыСвязей.СодержаниеРабот + ")";
			Потомок.ПланДатаНачала = СтрокаТаблицыСвязей.ПланДатаНачала;
			Потомок.ПланДатаОкончания = СтрокаТаблицыСвязей.ПланДатаОкончания;
			Потомок.ПланВремя = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(СтрокаТаблицыСвязей.ПланВремяВыполнения);
			Потомок.ФактДатаНачала = СтрокаТаблицыСвязей.ФактДатаНачала;
			Потомок.ФактДатаОкончания = СтрокаТаблицыСвязей.ФактДатаОкончания;
			Потомок.ФактВремя = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(СтрокаТаблицыСвязей.ФактВремяВыполнения);
			
			НоваяСтрока = СтатистикаЗаданий.Добавить();
			НоваяСтрока.Статус = СтрокаТаблицыСвязей.Статус;
			НоваяСтрока.Количество = 1;
			НоваяСтрока.ПланВремя = СтрокаТаблицыСвязей.ПланВремяВыполнения;
			НоваяСтрока.ФактВремя = СтрокаТаблицыСвязей.ФактВремяВыполнения;
			
		ИначеЕсли ТипЗнч(СтрокаТаблицыСвязей.Объект) = Тип("ДокументСсылка.Заявка_ат") Тогда
			
			Если ЗначениеЗаполнено(СтрокаТаблицыСвязей.Тезис) Тогда
				
				Описание = "Заявка: " + СтрокаТаблицыСвязей.Тезис;
				
			Иначе
				
				Описание = Строка(СтрокаТаблицыСвязей.Объект);
				
			КонецЕсли;
			
			Потомок.Тип = СтрокаТаблицыСвязей.ТипЗаявки;
			ДатыЗаявки = Планирование_Сервер_ат.ПолучитьДатыЗаявкиПоЗаданиям(СтрокаТаблицыСвязей.Объект);
			Потомок.ПланДатаНачала = ДатыЗаявки.ПланДатаНачала;
			Потомок.ПланДатаОкончания = ДатыЗаявки.ПланДатаОкончания;
			Потомок.ПланВремя = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(ДатыЗаявки.ПланВремяВыполнения);
			Потомок.ФактДатаНачала = ДатыЗаявки.ФактДатаНачала;
			Потомок.ФактДатаОкончания = ДатыЗаявки.ФактДатаОкончания;
			Потомок.ФактВремя = ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(ДатыЗаявки.ФактВремяВыполнения);
			
			НоваяСтрока = СтатистикаЗаявок.Добавить();
			НоваяСтрока.Статус = СтрокаТаблицыСвязей.Статус;
			НоваяСтрока.Количество = 1;
			НоваяСтрока.ПланВремя = ДатыЗаявки.ПланВремяВыполнения;
			НоваяСтрока.ФактВремя = ДатыЗаявки.ФактВремяВыполнения;
			
		Иначе
			
			Описание = Строка(СтрокаТаблицыСвязей.Объект);
			
		КонецЕсли;
		
		Потомок.Описание = Описание;
		СтрокаТаблицыСвязей.СсылкаНаСтроку = Потомок.Строки;
		
	КонецЦикла;
	
	ВывестиСтатистику(СтатистикаЗаявок, СтатистикаЗаданий);
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСтатистику(СтатистикаЗаявок, СтатистикаЗаданий)
	
	Если СтатистикаЗаявок.Количество() > 0 Тогда
		
		ПланВремя = Формат(ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(СтатистикаЗаявок.Итог("ПланВремя")), "ЧДЦ=2");
		ФактВремя = Формат(ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(СтатистикаЗаявок.Итог("ФактВремя")), "ЧДЦ=2");
		ТекстСтатистикиЗаявок = "Количество Заявок: " + СтатистикаЗаявок.Количество()
			+ " (ПВ = " + ПланВремя + " / ФВ = " + ФактВремя + ")"
			+ ", из них:";
		СтатистикаЗаявок.Свернуть("Статус", "Количество, ПланВремя, ФактВремя");
		
		Для Каждого Строка Из СтатистикаЗаявок Цикл
			
			ПланВремя = Формат(ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(Строка.ПланВремя), "ЧДЦ=2");
			ФактВремя = Формат(ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(Строка.ФактВремя), "ЧДЦ=2");
			
			ТекстСтатистикиЗаявок = ТекстСтатистикиЗаявок + " " + Строка.Количество + " - "
				+ ?(ПустаяСтрока(Строка.Статус), " без статуса", Строка.Статус)
				+ " (ПВ = " + ПланВремя + " / ФВ = " + ФактВремя + ");";
			
		КонецЦикла;
		
		Заявки = ТекстСтатистикиЗаявок;
		Элементы.Заявки.Видимость = Истина;
		
	Иначе 
		
		Элементы.Заявки.Видимость = Ложь;
		
	КонецЕсли;
	
	Если СтатистикаЗаданий.Количество() > 0 Тогда
		
		ПланВремя = Формат(ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(СтатистикаЗаданий.Итог("ПланВремя")), "ЧДЦ=2");
		ФактВремя = Формат(ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(СтатистикаЗаданий.Итог("ФактВремя")), "ЧДЦ=2");
		ТекстСтатистикиЗаданий = "Количество Заданий: " + СтатистикаЗаданий.Количество()
			+ " (ПВ = " + ПланВремя + " / ФВ = " + ФактВремя + ")"
			+ ", из них:";
		СтатистикаЗаданий.Свернуть("Статус", "Количество, ПланВремя, ФактВремя");
		
		Для Каждого Строка Из СтатистикаЗаданий Цикл
			
			ПланВремя = Формат(ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(Строка.ПланВремя), "ЧДЦ=2");
			ФактВремя = Формат(ПродолжительностьПроцессов_КлиентСервер_ат.ПолучитьВремяДляОтображения(Строка.ФактВремя), "ЧДЦ=2");
			
			ТекстСтатистикиЗаданий = ТекстСтатистикиЗаданий + " " + Строка.Количество + " - "
				+ ?(ПустаяСтрока(Строка.Статус), " без статуса", Строка.Статус)
				+ " (ПВ = " + ПланВремя + " / ФВ = " + ФактВремя + ");";
			
		КонецЦикла;
		
		Задания = ТекстСтатистикиЗаданий;
		Элементы.Задания.Видимость = Истина;
		
	Иначе
		
		Элементы.Задания.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеИзмененияСвязей(Результат, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьДерево();
	
КонецПроцедуры

#КонецОбласти
