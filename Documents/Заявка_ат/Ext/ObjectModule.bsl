
//!!ТУДУ: осуществлять контроль корректности заполнения полей (реквизитов и записей в РСах)!
//в т.ч. использовать Планирование_Сервер_ат.ПолучитьДочерниеЗадания

Перем ЭтоНовый;
Перем ИзменилосьОснование;
Перем МассивСтруктурУведомлений;
Перем НеобходимоПересчитатьПриоритет;
Перем СоответствиеИменФайловИдентификаторам;

#Область  ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	Автор = Неопределено;
	ДатаСоздания = Неопределено;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		
		Основание = ДанныеЗаполнения;
		Контакты = Взаимодействия.ПолучитьВсеКонтактыПоEmail(ДанныеЗаполнения.ОтправительАдрес);
		
		Для Каждого Контакт Из Контакты Цикл
			
			Если НЕ Контакт.Контакт.Пустая() Тогда
				
				Планирование_Сервер_ат.ПервичноеЗаполнениеСотрудникКлиентПодразделение(Контакт.Контакт, Сотрудник, Клиент, Подразделение);
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Тезис = ДанныеЗаполнения.Тема;
		
		Текст = ОбработчикиСобытийДляПочтовыхДокументов_ат.ПолучитьТексПисьмаИзРегистраСодержаниеЭлектронныхПисем(ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.ПростойТекст Тогда
			
			ДокументHTML = Взаимодействия.ПолучитьДокументHTMLИзОбычногоТекста(Текст);
			
		ИначеЕсли ДанныеЗаполнения.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.HTML
				Или ДанныеЗаполнения.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.HTMLСКартинками Тогда
			
			ДокументHTML = Взаимодействия.ПолучитьОбъектДокументHTMLИзТекстаHTML(Текст);
			
		КонецЕсли;
		
		ТекстЗаявкиВHTML = Взаимодействия.ПолучитьТекстHTMLИзОбъектаДокументHTML(ДокументHTML);
		
		Если ДанныеЗаполнения.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.HTMLСКартинками Тогда
			
			РаботаСHTML_Сервер_ат.ОбработатьКартинкиВHTMLПриСозданииНаОсновании(ДанныеЗаполнения, ТекстЗаявкиВHTML);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если РольДоступна("ОрганизацияМенеджерПроектов_ат")
		ИЛИ РольДоступна("ОрганизацияИсполнитель_ат") Тогда
				
		ПроверяемыеРеквизиты.Добавить("Проект");
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНовый = ЭтоНовый();
	ИзменилосьОснование = (Основание <> Ссылка.Основание);
	Статус = Планирование_Сервер_ат.ПолучитьТекущийСтатус(Ссылка);
	
	Если Тезис = ВРег(Тезис) Тогда
		Тезис = Лев(Тезис, 1) + НРег(Сред(Тезис, 2));
	КонецЕсли;
	
	Если ЭтоНовый Тогда
		УстановитьНовыйНомер();
	КонецЕсли;
	
	Если ПустаяСтрока(Тикет) Тогда
		
		Если (ЭтоНовый И ДополнительныеСвойства.Свойство("Регистрировать"))
			ИЛИ (НЕ ЭтоНовый И НЕ Статус = Перечисления.СтатусыЗаявок_ат.Черновик) Тогда
		
			Тикет = Строки_КлиентСервер_ат.ПолучитьНомерТикета(Номер, Дата);
			
		КонецЕсли;
		
	КонецЕсли;
	
	//Если НЕ ЭтоНовый Тогда //!!!!!TODO
	//
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//		"ВЫБРАТЬ ПЕРВЫЕ 1
	//		|	Согласование_ат.Ссылка КАК Согласование
	//		|ИЗ
	//		|	Документ.Согласование_ат КАК Согласование_ат
	//		|ГДЕ
	//		|	Согласование_ат.Заявки.Заявка = &Заявка
	//		|	И Согласование_ат.ОтправленоНаСогласование";
	//	Запрос.УстановитьПараметр("Заявка", Ссылка);
	//
	//	Выборка = Запрос.Выполнить().Выбрать();
	//
	//	Если Выборка.Следующий() Тогда
	//		
	//		Отказ = Истина;
	//		
	//		Сообщить("Изменение Заявки находящейся на согласовании запрещено.");
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
	Если ПометкаУдаления Тогда
		
		КоличествоПодчиненныхЗаданий = Планирование_Сервер_ат.ПолучитьДочерниеЗадания(Ссылка, Ложь).Количество();
		Если КоличествоПодчиненныхЗаданий > 0 Тогда
			
			Отказ = Истина;
			Сообщить("Заявка не может быть помечена на удаление т.к. она имеет "
				+ ?(КоличествоПодчиненныхЗаданий = 1, "подчинённое Задание.", "подчинённые Задания."));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоНовый И НЕ ПометкаУдаления И НЕ Статус = Перечисления.СтатусыЗаявок_ат.Черновик Тогда
		МассивСтруктурУведомлений = Уведомления_ат.ПолучитьМассивСтруктурУведомленийПриИзмененииЗаявки(ЭтотОбъект);
	Иначе
		МассивСтруктурУведомлений = Новый Массив;
	КонецЕсли;
	
	Если НЕ ЭтоНовый И (ПометкаУдаления <> Ссылка.ПометкаУдаления ИЛИ ТипЗаявки <> Ссылка.ТипЗаявки) Тогда
		НеобходимоПересчитатьПриоритет = Истина;
	КонецЕсли;
	
	СоответствиеИменФайловИдентификаторам = Новый Соответствие;
	
	РаботаСHTML_Сервер_ат.ЗаменитьИменаКартинокНаИдентификаторыВHTML(ТекстЗаявкиВHTML, СоответствиеИменФайловИдентификаторам);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//Попытка //??? хорошо ли напрочь экранировать ошибку?
		
		Если ЭтоНовый ИЛИ ИзменилосьОснование Тогда
			
			Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
				
				Предмет = ?(Основание.Пустая(), Ссылка, Взаимодействия.ПолучитьЗначениеПредмета(Основание));
				Взаимодействия.УстановитьПредмет(Ссылка, Предмет);
				
				ДобавитьФайлыИзПисьма();
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЭтоНовый Тогда
			
			Планирование_Сервер_ат.УстановитьСтатус(Ссылка,
				?(ДополнительныеСвойства.Свойство("Регистрировать"),
					Перечисления.СтатусыЗаявок_ат.Зарегистрирована, Перечисления.СтатусыЗаявок_ат.Черновик),
				Дата, ДополнительныеСвойства.Свойство("ОтправлятьУведомления"));
			
		КонецЕсли;
		
		Если НеобходимоПересчитатьПриоритет Тогда
			Планирование_Сервер_ат.УстановитьПриоритетЗаявки(Ссылка, Неопределено, Истина);
		КонецЕсли;
		
		РаботаСHTML_Сервер_ат.ЗаписатьПрикрепленныеФайлыКартинок(Ссылка, СоответствиеИменФайловИдентификаторам);
		
	//Исключение //??? хотя бы Сообщить(ОписаниеОшибки()) ?
	//	
	//	Отказ = Истина;
	//	
	//КонецПопытки;
	//
	//Если Отказ Тогда
	//	Возврат;
	//КонецЕсли;
	
	Если МассивСтруктурУведомлений.Количество() > 0 Тогда
		Уведомления_ат.ОтправитьУведомленияИзМассива(МассивСтруктурУведомлений);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область  ДополнительныеПроцедурыИФункции

Процедура ДобавитьФайлыИзПисьма()
	
	Если НЕ ТипЗнч(Основание) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		Возврат;
	КонецЕсли;
	
	МассивФайлов = Новый Массив;
	
	ПрисоединенныеФайлы.ПолучитьПрикрепленныеФайлыКОбъекту(Основание, МассивФайлов);
	
	Если МассивФайлов.Количество() > 0 Тогда
	
		ПрисоединенныеФайлыПереопределяемый.СкопироватьПрисоединенныеФайлыИзИсточникаДругогоТипа(Основание, Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

НеобходимоПересчитатьПриоритет = Ложь;
МассивСтруктурУведомлений = Новый Массив;
