
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	Если Объект.Ссылка.Пустая() тогда
		
		Если НЕ Объект.Клиент.Пустая() тогда
		РезультатЗапроса = РаботаССерверами_ат.ОпределениеДоговораПользователя(ЭтотОбъект.Клиент, Перечисления.ТипыДоговоров_ат.АрендаСерверов);
		//Запрос = Новый Запрос;
		//Запрос.Текст = 
		//	"ВЫБРАТЬ РАЗЛИЧНЫЕ
		//	|	Договоры_ат.Владелец,
		//	|	ВЫБОР
		//	|		КОГДА Договоры_ат.Родитель = ЗНАЧЕНИЕ(Справочник.Договоры_ат.ПустаяСсылка)
		//	|			ТОГДА Договоры_ат.Ссылка
		//	|		ИНАЧЕ Договоры_ат.Родитель
		//	|	КОНЕЦ КАК Договор
		//	|ИЗ
		//	|	Справочник.Договоры_ат КАК Договоры_ат
		//	|ГДЕ
		//	|	Договоры_ат.ПометкаУдаления = &ПометкаУдаления
		//	|	И Договоры_ат.Владелец = &Владелец
		//	|	И Договоры_ат.ВидДоговора.ТипДоговора = &ТипДоговора";
		//
		//Запрос.УстановитьПараметр("Владелец", Объект.Клиент);
		//Запрос.УстановитьПараметр("ПометкаУдаления", ложь);
		//Запрос.УстановитьПараметр("ТипДоговора", ТипДоговора);	
		//РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если РезультатЗапроса.Пустой() тогда
			Сообщить("Ошибка выполенения - не найден действующий договор!!!! "); 
			Отказ = Истина;
		Иначе
			Если ВыборкаДетальныеЗаписи.Количество() = 1 тогда 
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Объект.Договор = ВыборкаДетальныеЗаписи;	
				КонецЦикла;
			Иначе
			КонецЕсли;
		КонецЕсли;
		КонецЕсли;
	Иначе
	КонецЕсли;
	
	Если Объект.Договор.Пустая() тогда
		ЭтаФорма.Элементы.Договор.ТолькоПросмотр = ложь;
	Иначе ЭтаФорма.Элементы.Договор.ТолькоПросмотр = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
			
	error = 0; 		// накопитель ошибки,
					// логика: пишим все ошибки, если есть хоть одна останавливаем проведение,
					// если это только запись - то просто уведомляем		
		//Если Объект.Договор.Пустая() тогда
		//	Сообщение = новый СообщениеПользователю;
		//	Сообщение.Поле = "Объект.Договор";
		//	Сообщение.Текст = "Требуется указать договор";
		//	Сообщение.Сообщить();
		//	error = error + 1;
		//КонецЕсли;
		//
		//Если Объект.Клиент.Пустая() тогда
		//	Сообщение2 = новый СообщениеПользователю;
		//	Сообщение2.Поле = "Объект.Договор";
		//	Сообщение2.Текст = "Требуется указать договор";
		//	Сообщение2.Сообщить();
		//	error = error + 1;
		//КонецЕсли;

		
	Если  ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение тогда 
		Если Объект.Договор.Пустая() тогда
			Сообщение = новый СообщениеПользователю;
			Сообщение.Поле = "Объект.Договор";
			Сообщение.Текст = "Требуется указать договор";
			Сообщение.Сообщить();
			error = error + 1;
		КонецЕсли;
		
		Если Объект.Клиент.Пустая() тогда
			Сообщение2 = новый СообщениеПользователю;
			Сообщение2.Поле = "Объект.Договор";
			Сообщение2.Текст = "Требуется указать договор";
			Сообщение2.Сообщить();
			error = error + 1;
		КонецЕсли;
		Если error >= 1 тогда отказ = истина;
		КонецЕсли;
	КонецЕсли;	
			
			
КонецПроцедуры

&НаКлиенте
Процедура ДоговорНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = ложь;
	
	Если Объект.Организация.Пустая() тогда
		СП = Новый СообщениеПользователю;
		СП.Текст = "Перед выбором договора необходимо выбрать организацию!";
		СП.Поле ="Объект.Организация";
		СП.Сообщить();
	Иначе
		//отбор = Новый структура;
		//Отбор.Вставить("Владелец", Объект.Клиент);
		//отбор.Вставить("ПометкаУдаления", Ложь);
		//Отбор.Вставить("Родитель", Справочники.Договоры_ат.ПустаяСсылка());

		//Список = Новый Структура;
		//Список.Вставить("Отбор", Отбор);
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РежимВыбора",Истина);
		ПараметрыФормы.Вставить("ЗакрытьПриВыборе", Истина);
		//ПараметрыФормы.Вставить("Список",Список);
		//ПараметрыФормы.Вставить("Отбор", Отбор);
		ПараметрыФормы.Вставить("ВидДог", ПредопределенноеЗначение("Перечисление.ТипыДоговоров_ат.АрендаСерверов"));
		ПараметрыФормы.Вставить("Организация", Объект.Организация);
		ПараметрыФормы.Вставить("Владелец", Объект.Клиент);
		//ПараметрыФормы.Вставить("РежимПросмотра", ОтображениеТаблицы.Список);
		//Форма = ПолучитьФорму("Справочник.Договоры_ат.ФормаВыбора",ПараметрыФормы,Элемент);
		//Форма.Элементы.Список.отображение = ОтображениеТаблицы.Список; 
		Форма = ПолучитьФорму("ОбщаяФорма.ФормаВыбораДоговораПоТипу_ат", ПараметрыФормы,Элемент);
		Форма.Открыть();
		//ОткрытьФорму("Справочник.Договоры_ат.ФормаВыбора",ПараметрыФормы,Элемент);
	КонецЕсли;
КонецПроцедуры

//&НаСервере
//Функция ВОЗРАТТипДоговораАПП()
//    Возврат Перечисления.ТипыДоговоров_ат.АрендаСерверов;
//КонецФункции

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения тогда
		 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	Договоры_ат.Ссылка
	//	|ИЗ
	//	|	Справочник.Договоры_ат КАК Договоры_ат
	//	|ГДЕ
	//	|	Договоры_ат.Основание = &Основание";
	//
	//Запрос.УстановитьПараметр("Основание", Объект.ДОснование);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	конецЕсли;
КонецПроцедуры




