 
Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("Заявка");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Представление = "Согласование " + Число(Строки_КлиентСервер_ат.ВернутьТолькоЦифры(Данные.Номер))
		+ " от " + Формат(Данные.Дата, "ДФ=dd.MM.yy") + ?(Данные.Заявка.Пустая(), "", " (" + Данные.Заявка + ")");
	
КонецПроцедуры

Функция   ПолучитьИдентификаторВидаПисьмаДляАвтоматическойОбработки() Экспорт
	
	Возврат "Agreement-Doc";
	
КонецФункции

Функция   ВидПисьма() Экспорт
	
	Возврат "Agreement";
	
КонецФункции

Функция   ЗаполнитьДанныеДляОбработкиОтветногоПисьма(ПараметрыВходящегоПисьма) Экспорт
	
	Согласование = ПолучитьСогласованиеНаПриемкеПоНомеру(ПараметрыВходящегоПисьма.НомерДокумента);
	
	Если Согласование = Неопределено Тогда
		
		Возврат "Согласование №" + ПараметрыВходящегоПисьма.НомерДокумента + " не обнаружено!";
		
	ИначеЕсли ТипЗнч(Согласование) = Тип("ПеречислениеСсылка.СтатусыСогласований_ат") Тогда
		
		Возврат "Согласование №" + ПараметрыВходящегоПисьма.НомерДокумента + " имеет статус не предполагающий принятие по нему решения - " + Согласование; //!!!максировать внутренние статусы для клиентов;
		
	Иначе
		
		Взаимодействия.УстановитьПредмет(ПараметрыВходящегоПисьма.Письмо, ПараметрыВходящегоПисьма.ИсходящееПисьмо); //??? - см. док.Заявка_ат.ММ
			// ранее было - Согласование
			
	КонецЕсли;
	
	ПараметрыВходящегоПисьма.Вставить("Согласование", Согласование);
	
	ПараметрыВходящегоПисьма.Вставить("ПоложительноеРешение", ПолучитьРешениеПоПисьму(ПараметрыВходящегоПисьма.Ответ));
	
	ПараметрыВходящегоПисьма.Вставить("ВалидныеОтветчики", Согласование.Согласующие.ВыгрузитьКолонку("Согласующий"));
	
	Возврат "";
	
КонецФункции

Процедура ОбработатьАвтоматическоеУведомление(ПараметрыПисьма) Экспорт
	
	Если НЕ ПараметрыПисьма.Свойство("Ошибка") Тогда
		
		Попытка
			
			ТекстПисьма = ОбработчикиСобытийДляПочтовыхДокументов_ат.ПолучитьТексПисьмаИзРегистраСодержаниеЭлектронныхПисем(ПараметрыПисьма.Письмо);
			
			Если ПараметрыПисьма.Письмо.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.HTML Тогда
				ТекстПисьма = РаботаСHTML_КлиентСервер_ат.ПолучитьОбычныйТекстИзHTML(ТекстПисьма);
			КонецЕсли; 
			
			ВерныйПин = Истина;
			
			Если ПараметрыПисьма.Согласование.ТипСогласования = Перечисления.ТипыСогласований_ат.Финансовое Тогда
				
				ВерныйПин = Согласование_ат.ПроверитьПинКод(ТекстПисьма, ПараметрыПисьма);
				
			ИначеЕсли ПараметрыПисьма.Согласование.ТипСогласования = Перечисления.ТипыСогласований_ат.ТехническоеИФинансовое Тогда
				
				НайденныеСтроки = ПараметрыПисьма.Согласование.Согласующие.НайтиСтроки(
					Новый Структура("Согласующий", ПараметрыПисьма.Ответчик));
				
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					
					Если НайденнаяСтрока.ТипСогласования = Перечисления.ТипыСогласований_ат.Финансовое
						ИЛИ НайденнаяСтрока.ТипСогласования = Перечисления.ТипыСогласований_ат.ТехническоеИФинансовое Тогда
						
						ВерныйПин = Согласование_ат.ПроверитьПинКод(ТекстПисьма, ПараметрыПисьма);
						Прервать;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если НЕ ВерныйПин Тогда
				
				Уведомления_ат.ОтправитьАвтоответ(ПараметрыПисьма.Письмо, ПараметрыПисьма.Ошибка);
				
			Иначе
				
				Согласование_ат.УстановитьРешениеВСогласовании(ПараметрыПисьма.Согласование,
					?(ПараметрыПисьма.ПоложительноеРешение,
						Перечисления.РешенияОСогласовании.Согласовано,
						Перечисления.РешенияОСогласовании.Отклонено),
					ПараметрыПисьма.Ответчик, ПараметрыПисьма.Письмо,
					ТекстПисьма, Истина);
				
			КонецЕсли;
			
			Уведомления_ат.СнятьСКонтроляПисьмаПоЗаявке(ПараметрыПисьма.Согласование); //!!!TODO - когда потом на Закрытие это уйдёт не нужно будет снимать контроль сразу по всей заявке (это используется только тут)
			//Уведомления_ат.ЗаписатьСведенияОКонтролеЭлектронногоПисьма(ПараметрыПисьма.ИсходящееПисьмо, Ложь);
			Уведомления_ат.УстановитьРассмотренностьПисьма(ПараметрыПисьма.Письмо, Ложь); // а это надо после предыдущего??
			
		Исключение
			
			ПараметрыПисьма.Вставить("Ошибка", ОписаниеОшибки());
			
		КонецПопытки;
		
	КонецЕсли;
	
	//Если ПараметрыПисьма.Свойство("Ошибка") Тогда //!!!!!TODO - переписать такую кривоту
	//	
	//	Уведомления_ат.УведомитьОПолучениПисьмаОСогласовании(ПараметрыПисьма.Согласование, ПараметрыПисьма);
	//	
	//КонецЕсли;
	
КонецПроцедуры

Функция   ПолучитьСогласованиеНаПриемкеПоНомеру(НомерСогласования)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Согласование_ат.Ссылка,
		|	Согласование_ат.СтатусСогласования
		|ИЗ
		|	Документ.Согласование_ат КАК Согласование_ат
		|ГДЕ
		|	Согласование_ат.Номер = &Номер
		|	И НЕ Согласование_ат.ПометкаУдаления
		|");
	Запрос.УстановитьПараметр("Номер", НомерСогласования);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат Неопределено;
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Если Выборка.СтатусСогласования = Перечисления.СтатусыСогласований_ат.ОжиданиеОтвета Тогда
			Возврат Выборка.Ссылка;
		Иначе
			Возврат Выборка.СтатусСогласования;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

Функция   ПолучитьРешениеПоПисьму(Ответ)
	
	Если Врег(Ответ) = "ACCEPT" Тогда
		Возврат Истина;
	ИначеЕсли Врег(Ответ) = "DECLINE" Тогда
		Возврат Ложь;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции
