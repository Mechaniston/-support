
&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	УправляемыеФормы_КлиентСервер_ат.УстановитьОтборДинамическогоСписка(
		Решения, "Владелец",, Элементы.Список.ТекущаяСтрока, Истина,,, Решения.Отбор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластиЗнанийПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.ОбластиЗнаний.ТекущаяСтрока;
	
	УправляемыеФормы_КлиентСервер_ат.УстановитьОтборДинамическогоСписка(
		Список, "ОбластьЗнаний",
		?(ЗначениеЗаполнено(ТекущаяСтрока),ВидСравненияКомпоновкиДанных.ВИерархии, ВидСравненияКомпоновкиДанных.Равно),
		ТекущаяСтрока, ЗначениеЗаполнено(ТекущаяСтрока) ИЛИ НЕ ДоступноИспользованиеБазыЗнаний,,, Список.Отбор);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьДоступКБазеЗнаний(Команда)
	
	ОткрытьФорму("РегистрСведений.НастройкаДоступаКБазеЗнаний_ат.ФормаСписка",, ЭтаФорма);
	
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправляемыеФормы_Сервер_ат.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	ДоступноИспользованиеБазыЗнаний = РольДоступна("ИспользованиеБазыЗнаний_ат") ИЛИ РольДоступна("ПолныеПрава");
	
	Элементы.ФормаНастроитьДоступКБазеЗнаний.Видимость = ДоступноИспользованиеБазыЗнаний;
	
	Элементы.ФормаНастроитьДоступКБазеЗнаний.ТолькоВоВсехДействиях = Ложь;
	
	УстановитьПараметрыСпискаОбластейЗнаний();
	
	Если ДоступноИспользованиеБазыЗнаний Тогда
		
		ЗначениеВРеквизитФормы(Метки_Сервер_ат.ПолучитьПолнуюТаблицуЗначенийОтбора("Справочник.Метки_ат"),
								"ТаблицаЗначенийОтбора");
		
		Метки_Сервер_ат.СоздатьКнопкуНастройкиОтбора(Элементы.ФормаКоманднаяПанель, "Справочник.Метки_ат",
													"НастроитьОтборы", ЭтаФорма, "Установить отбор");
		
	КонецЕсли;
	
	ОбластиЗнаний.Параметры.УстановитьЗначениеПараметра("ОтбиратьПоПроектам", Ложь);
	ОбластиЗнаний.Параметры.УстановитьЗначениеПараметра("Проекты", Неопределено);
	
	УправляемыеФормы_КлиентСервер_ат.УстановитьОтборДинамическогоСписка(
		Решения, "ПометкаУдаления",, Ложь, Истина, "Скрыть помеченные на удаление",,, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправляемыеФормы_Клиент_ат.ПриОткрытии(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	УправляемыеФормы_Клиент_ат.ПриПовторномОткрытии(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	УправляемыеФормы_Клиент_ат.ПередЗакрытием(ЭтаФорма, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	УправляемыеФормы_Клиент_ат.ПриЗакрытии(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	УправляемыеФормы_Клиент_ат.ОбработкаВыбора(ЭтаФорма, ВыбранноеЗначение, ИсточникВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	УправляемыеФормы_Клиент_ат.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	
	Метки_КлиентСервер_ат.УстановитьОтборСпискаПоТаблицеЗначений(Список, Тип("СправочникСсылка.БазаЗнаний_ат"),
		Тип("СправочникСсылка.Метки_ат"), "Ссылка", ТаблицаЗначенийОтбора,, ОтображатьПустые,,
		Элементы.ГруппаОтбораПоМеткам, Элементы.ГруппаОтбораПоМеткам.Подсказка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	
	УправляемыеФормы_Клиент_ат.ОбработкаАктивизации(ЭтаФорма, АктивныйОбъект, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	УправляемыеФормы_Клиент_ат.ОбработкаЗаписиНового(ЭтаФорма, НовыйОбъект, Источник, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	УправляемыеФормы_Сервер_ат.ОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Отказ, ПРоверяемыеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ОбластьЗнаний", Элементы.ОбластиЗнаний.ТекущаяСтрока);
	ОткрытьФорму("Справочник.БазаЗнаний_ат.ФормаОбъекта", ПараметрыОткрытияФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти 

&НаКлиенте
Процедура ОбработчикУниверсальныхДействий(Команда)
	
	УправляемыеФормы_Клиент_ат.ДополнительныеДействияФормы(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаСервере
Функция   ОбработчикУниверсальныхДействий_Сервер(Элемент) Экспорт
	
	Возврат УправляемыеФормы_Сервер_ат.ДополнительныеДействияФормы(ЭтаФорма, Команды[Элемент.Имя]);
	
КонецФункции

&НаСервере
Процедура УстановитьПараметрыСпискаОбластейЗнаний()
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	// Сначала получаются параметры пользователя, затем подставляются в запрос динамического списка.
	
	// Контрагент и подразделение.
	////Запрос = Новый Запрос;
	////Запрос.Текст =
	////"ВЫБРАТЬ ПЕРВЫЕ 1
	////|	СпецификацияПользователей_ат.Контрагент,
	////|	СпецификацияПользователей_ат.Подразделение
	////|ИЗ
	////|	РегистрСведений.СпецификацияПользователей_ат КАК СпецификацияПользователей_ат
	////|ГДЕ
	////|	СпецификацияПользователей_ат.Пользователь = &Пользователь";
	////Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
	////
	////РезультатЗапроса = Запрос.Выполнить();
	////
	////Если РезультатЗапроса.Пустой() Тогда
	////	
	////	Клиент = Справочники.Контрагенты_ат.ПустаяСсылка();
	////	Подразделение = Справочники.ПодразделенияКлиентов_ат.ПустаяСсылка();
	////	
	////Иначе
	////	
	////	Выборка = РезультатЗапроса.Выбрать();
	////	Выборка.Следующий();
	////	Клиент = Выборка.Контрагент;
	////	Подразделение = Выборка.Подразделение;
	////	
	////КонецЕсли;
	
	// Проект.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Проекты_ат.Ссылка КАК Проект
	|ИЗ
	|	РегистрСведений.СпецификацияПользователей_ат КАК СпецификацияПользователей_ат
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Проекты_ат КАК Проекты_ат
	|		ПО СпецификацияПользователей_ат.Контрагент = Проекты_ат.Клиент
	|ГДЕ
	|	СпецификацияПользователей_ат.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
	
	Проекты = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Проект");
	
	ОбластиЗнаний.Параметры.УстановитьЗначениеПараметра("ДоступныВсе", РольДоступна("ИспользованиеБазыЗнаний_ат") ИЛИ РольДоступна("ПолныеПрава"));
	//ОбластиЗнаний.Параметры.УстановитьЗначениеПараметра("Клиент", Клиент);
	//ОбластиЗнаний.Параметры.УстановитьЗначениеПараметра("Подразделение", Подразделение);
	ОбластиЗнаний.Параметры.УстановитьЗначениеПараметра("Проекты", Проекты);
	ОбластиЗнаний.Параметры.УстановитьЗначениеПараметра("Пользователь", ТекущийПользователь);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтборы(Команда)
	
	ОписаниеОповещенияОЗакрытииФормы = Новый ОписаниеОповещения("УстановитьОтборыПослеНастройки", Метки_Клиент_ат);
	
	ПараметрыМеток = Новый Структура;
	ПараметрыМеток.Вставить("ИмяОбъектаМетаданных",				"Справочник.Метки_ат");
	ПараметрыМеток.Вставить("ТаблицаЗначенийОтбора",			ПреобразоватьТаблицуЗначенийВМассивСтруктур());
	ПараметрыМеток.Вставить("ДобавлятьНулевоеЗначение",			ОтображатьПустые);
	ПараметрыМеток.Вставить("ИмяРеквизитаОтбора",				"КлючОтбораПоТегам");
	ПараметрыМеток.Вставить("ОтбиратьПоКлючу",					Истина);
	ПараметрыМеток.Вставить("ВключитьОтборПоПроекту",			Истина);
	ПараметрыМеток.Вставить("ТипЗначенияОбъекта",				Тип("СправочникСсылка.БазаЗнаний_ат"));
	ПараметрыМеток.Вставить("ТипЗначенияМеток",					Тип("СправочникСсылка.Метки_ат"));
	ПараметрыМеток.Вставить("Форма",							ЭтаФорма);
	
	Если ОбластиЗнаний.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтбиратьПоПроектам")).Значение = Истина Тогда
		ПараметрыМеток.Вставить("Проекты",						ОбластиЗнаний.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Проекты")).Значение);
	КонецЕсли;
	
	ПараметрыМеток.Вставить("ОписаниеОповещенияОЗакрытииФормы",	ОписаниеОповещенияОЗакрытииФормы);
	
	Метки_Клиент_ат.ОбработчикКомандНастройкиОтборов(Команда, ПараметрыМеток);
	
КонецПроцедуры

&НаСервере
Функция ПреобразоватьТаблицуЗначенийВМассивСтруктур()
	
	ТаблицаЗначений = РеквизитФормыВЗначение("ТаблицаЗначенийОтбора");
	
	Колонки = ТаблицаЗначений.Колонки;
	
	МассивСтруктур = Новый Массив;
	
	Для Каждого СтрокаТаблицыЗначений Из ТаблицаЗначений Цикл
		
		СтрокаТаблицы = Новый Структура;
		
		Для Каждого Колонка Из Колонки Цикл
			
			ИмяКолонки = Колонка.Имя;
			СтрокаТаблицы.Вставить(ИмяКолонки, СтрокаТаблицыЗначений[ИмяКолонки]);
			
		КонецЦикла;
		
		МассивСтруктур.Добавить(СтрокаТаблицы);
		
	КонецЦикла;
	
	Возврат МассивСтруктур;
	
КонецФункции

&НаКлиенте
Процедура УстановитьОтборПоПроектам(Команда)

	Если Элементы.ОтборПоПроектам.Пометка Тогда
		
		ПослеВыбораПроектов(Неопределено, Неопределено);
		
	Иначе
		
		Оповещение = Новый ОписаниеОповещения("ПослеВыбораПроектов", ЭтаФорма);
		
		ОткрытьФорму("Справочник.Проекты_ат.Форма.ФормаГрупповогоВыбора", , ЭтаФорма, , , , Оповещение,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораПроектов(Результат, ПередаваемыеПараметры) Экспорт
	
	Если Результат <> Неопределено И Результат.Проекты.Количество() > 0 Тогда
		
		ОбластиЗнаний.Параметры.УстановитьЗначениеПараметра("ОтбиратьПоПроектам", Истина);
		ОбластиЗнаний.Параметры.УстановитьЗначениеПараметра("Проекты", Результат.Проекты);

		Элементы.ОтборПоПроектам.Пометка = Истина;
		Элементы.ОтборПоПроектам.РасширеннаяПодсказка.Заголовок = Результат.Представление;
		
	Иначе
		
		ОбластиЗнаний.Параметры.УстановитьЗначениеПараметра("ОтбиратьПоПроектам", Ложь);
		
		Элементы.ОтборПоПроектам.Пометка = Ложь;
		Элементы.ОтборПоПроектам.РасширеннаяПодсказка.Заголовок = "Установить отбор по проектам";
		
	КонецЕсли;
	
КонецПроцедуры 
