
#Область ЛокальныеПеременные

#Область Комментарии

&НаКлиенте
Перем КоординатыЗаменяемогоСлова, СоответствиеКомандЗаменыСловам;

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УправляемыеФормы_Сервер_ат.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	#Область Комментарии
	
	ЗагрузитьКомментарии(Ложь);
	
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправляемыеФормы_Сервер_ат.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	#Область Комментарии
	
	ЗагрузитьКомментарии(Истина);
	
	#КонецОбласти
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Объект.ДатаСоздания = ТекущаяДата();
		Объект.Автор = Пользователи.ТекущийПользователь();
		Объект.НаследоватьПараметры = Истина;
		
		Если НЕ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			КопироватьДанныеИзРодителя();
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправляемыеФормы_Клиент_ат.ПриОткрытии(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	УправляемыеФормы_Клиент_ат.ПередЗаписью(ЭтаФорма, Отказ, ПараметрыЗаписи);
	
	#Область Комментарии
	
	Если КомментарийВнутреннийСформирован Тогда
		
		Элементы.КомментарийВнутренний.Документ.body.innerHTML =
			ПроверкаОрфографии_Клиент_ат.УдалитьИзТекстаHTMLТэгиВыделения(Элементы.КомментарийВнутренний.Документ.body.innerHTML);
		
		КомментарийВнутренний = Элементы.КомментарийВнутренний.Документ.documentElement.outerHTML;
		
		РаботаСHTML_Клиент_ат.ВключитьВозможностьРедактирования(ЭтаФорма,
			Элементы.КомментарийВнутренний, Элементы.КомментарийВнутренний_КоманднаяПанель, Истина);
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УправляемыеФормы_Сервер_ат.ПриЗаписиНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
	#Область Комментарии
	
	Комментарии_ат.СохранитьКомментарий(ЭтаФорма, ТекущийОбъект.Ссылка);
	Комментарии_ат.СохранитьКомментарийВнутренний(ЭтаФорма, ТекущийОбъект.Ссылка);
	Комментарии_ат.СохранитьКомментарийКлиента(ЭтаФорма, ТекущийОбъект.Ссылка);
	
	#КонецОбласти
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УправляемыеФормы_Клиент_ат.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УправляемыеФормы_Сервер_ат.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиДействийПользователя

&НаКлиенте
Процедура ИмяПроектаПриИзменении(Элемент)
	
	ПриИзмененииНаименований();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяПроектаДляОтчетовПриИзменении(Элемент)
	
	ПриИзмененииНаименований();
	
КонецПроцедуры

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Родитель) Тогда
		
		Если Объект.НаследоватьПараметры Тогда
			КопироватьДанныеИзРодителя();
		КонецЕсли;
		
	КонецЕсли;
	
	//РодительПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НаследоватьПараметрыПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов();
	
	Если Объект.НаследоватьПараметры Тогда
		КопироватьДанныеИзРодителя();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриИзмененииНаименований()
	
	Если ЗначениеЗаполнено(Объект.Родитель) Тогда
		
		СгенерироватьНаименования_Сервер();
		
	Иначе
		
		Объект.Наименование = Объект.ИмяПроекта;
		
		Если НЕ ЗначениеЗаполнено(Объект.НаименованиеДляОтчетов) Тогда
			
			Объект.НаименованиеДляОтчетов = Объект.ИмяПроекта;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СгенерироватьНаименования_Сервер()
	
	Справочники.Проекты_ат.СгенерироватьНаименования(Объект);
	
КонецПроцедуры 

&НаСервере 
Процедура РодительПриИзмененииНаСервере()
	
	Объект.Клиент = Объект.Родитель.Клиент;
	Объект.Договор = Объект.Родитель.Договор;
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	
	Элементы.Клиент.Доступность = Объект.Родитель.Пустая();
	Элементы.Договор.Доступность = Объект.Родитель.Пустая();
	
	Элементы.ИндивидуальныеПараметры.Доступность = (Объект.Родитель.Пустая() ИЛИ НЕ Объект.НаследоватьПараметры);
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция УОбъектаЗаполненаТабличнаяЧасть(Объект, ИмяТабличнойЧасти)
	
	Возврат Объект[ИмяТабличнойЧасти].Количество() > 0;
	
КонецФункции

&НаКлиенте
Процедура ЗадатьВопросОЗаполненииИзРодителя(Вопрос = "ОбластьЗнаний")
	
	Если Вопрос = "ОбластьЗнаний" Тогда
		
		Если УОбъектаЗаполненаТабличнаяЧасть(Объект.Родитель, "ОбластиЗнаний") Тогда
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВопрос", ЭтаФорма, Новый Структура("Вопрос", Вопрос));
			ПоказатьВопрос(ОписаниеОповещения, "Заполнить доступные области знаний из родителя?", РежимДиалогаВопрос.ДаНет);
			
		Иначе
			
			ОбработатьВопрос(КодВозвратаДиалога.Нет, Новый Структура("Вопрос", Вопрос));
			
		КонецЕсли;
		
	ИначеЕсли Вопрос = "Метки" Тогда
		
		Если УОбъектаЗаполненаТабличнаяЧасть(Объект.Родитель, "ДоступныеМетки") Тогда
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВопрос", ЭтаФорма, Новый Структура("Вопрос", Вопрос));
			ПоказатьВопрос(ОписаниеОповещения, "Заполнить доступные метки из родителя?", РежимДиалогаВопрос.ДаНет);
			
		Иначе
			
			ОбработатьВопрос(КодВозвратаДиалога.Нет, Новый Структура("Вопрос", Вопрос));
			
		КонецЕсли;
		
	ИначеЕсли Вопрос = "Кураторы" Тогда
		
		Если УОбъектаЗаполненаТабличнаяЧасть(Объект.Родитель, "Кураторы") Тогда
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВопрос", ЭтаФорма, Новый Структура("Вопрос", Вопрос));
			ПоказатьВопрос(ОписаниеОповещения, "Заполнить кураторов из родителя?", РежимДиалогаВопрос.ДаНет);
			
		Иначе
			
			ОбработатьВопрос(КодВозвратаДиалога.Нет, Новый Структура("Вопрос", Вопрос));
			
		КонецЕсли;
		
	ИначеЕсли Вопрос = "Продукты" Тогда
		
		Если УОбъектаЗаполненаТабличнаяЧасть(Объект.Родитель, "Продукты") Тогда
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВопрос", ЭтаФорма, Новый Структура("Вопрос", Вопрос));
			ПоказатьВопрос(ОписаниеОповещения, "Заполнить доступные метки из родителя?", РежимДиалогаВопрос.ДаНет);
			
		Иначе
			
			ОбработатьВопрос(КодВозвратаДиалога.Нет, Новый Структура("Вопрос", Вопрос));
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВопрос(Результат, ДополнительныеПараметры) Экспорт
	
	Если ДополнительныеПараметры.Вопрос = "ОбластьЗнаний" Тогда
		
		Если Результат = КодВозвратаДиалога.Да Тогда
			СкопироватьТабличнуюЧастьИзРодителя("ОбластиЗнаний");
		КонецЕсли;
		
		ЗадатьВопросОЗаполненииИзРодителя("Метки");
		
	ИначеЕсли ДополнительныеПараметры.Вопрос = "Метки" Тогда
		
		Если Результат = КодВозвратаДиалога.Да Тогда
			СкопироватьТабличнуюЧастьИзРодителя("ДоступныеМетки");
		КонецЕсли;
		
		ЗадатьВопросОЗаполненииИзРодителя("Кураторы");
		
	ИначеЕсли ДополнительныеПараметры.Вопрос = "Кураторы" Тогда
		
		Если Результат = КодВозвратаДиалога.Да Тогда
			СкопироватьТабличнуюЧастьИзРодителя("Кураторы");
		КонецЕсли;
		
		ЗадатьВопросОЗаполненииИзРодителя("Продукты");
		
	ИначеЕсли ДополнительныеПараметры.Вопрос = "Продукты" Тогда
		
		Если Результат = КодВозвратаДиалога.Да Тогда
			СкопироватьТабличнуюЧастьИзРодителя("Продукты");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КопироватьДанныеИзРодителя()
	
	СкопироватьТабличнуюЧастьИзРодителя("Продукты");
	СкопироватьТабличнуюЧастьИзРодителя("Кураторы");
	СкопироватьТабличнуюЧастьИзРодителя("ДоступныеМетки");
	СкопироватьТабличнуюЧастьИзРодителя("ОбластиЗнаний");
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьТабличнуюЧастьИзРодителя(ИмяТабличнойЧасти)
	
	Объект[ИмяТабличнойЧасти].Загрузить(Объект.Родитель[ИмяТабличнойЧасти].Выгрузить());
	
КонецПроцедуры

#КонецОбласти 

#Область УниверсальныеОбработчикиДействий

&НаКлиенте
Процедура ОбработчикУниверсальныхДействий(Команда)
	
	УправляемыеФормы_Клиент_ат.ДополнительныеДействияФормы(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаСервере
Функция   ОбработчикУниверсальныхДействий_Сервер(Элемент) Экспорт
	
	Возврат УправляемыеФормы_Сервер_ат.ДополнительныеДействияФормы(ЭтаФорма, Команды[Элемент.Имя]);
	
КонецФункции

#КонецОбласти

#Область Комментарии

&НаСервере
Процедура ЗагрузитьКомментарии(СозданиеФормы)
	
	Если НЕ СозданиеФормы Тогда
		
		Комментарии_ат.ЗагрузитьКомментарий(ЭтаФорма, Объект.Ссылка);
		Комментарии_ат.ЗагрузитьКомментарийКлиента(ЭтаФорма, Объект.Ссылка);
		
	КонецЕсли;
	
	Если НЕ СозданиеФормы ИЛИ Объект.Ссылка.Пустая() Тогда
		
		Комментарии_ат.ЗагрузитьКомментарийВнутренний(ЭтаФорма, Объект.Ссылка);
		
	КонецЕсли;
	
	Если СозданиеФормы И Элементы.КомментарийВнутренний.Видимость И НЕ Элементы.КомментарийВнутренний.ТолькоПросмотр Тогда
		
		РаботаСHTML_Сервер_ат.СоздатьПанелиРаботыСHTML(ЭтаФорма, Элементы.КомментарийВнутренний_КоманднаяПанель,
			"КомментарийВнутренний_ОбработчикКоманд", , Элементы.КомментарийВнутренний.КонтекстноеМеню);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийВнутреннийДокументСформирован(Элемент)
	
	КомментарийВнутреннийСформирован = Истина;
	
	//ДобавитьОбработчик Элемент.Документ.Body.oncontextmenu, ОбработчикСобытийВнутреннегоКомментария;
	
	РаботаСHTML_Клиент_ат.УстановитьДоступностьПанелейРедактирования(Элементы.КомментарийВнутренний_КоманднаяПанель,
		Элементы.КомментарийВнутренний, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийВнутреннийПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	РаботаСHTML_Клиент_ат.ИзменитьПометкиКнопок(Элементы.КомментарийВнутренний_КоманднаяПанель,
		Элементы.КомментарийВнутренний.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСобытийВнутреннегоКомментария(Событие)
	
	Если Событие.type = "contextmenu" Тогда
		
		ПолеМожноРедактировать = РаботаСHTML_Клиент_ат.HTMLПолеМожноРедактировать(Элементы.КомментарийВнутренний);
		
		Для каждого ЭлементКонтекстногоМеню Из Элементы.КомментарийВнутренний.ПодчиненныеЭлементы Цикл
			
			Если НЕ ЭлементКонтекстногоМеню.Имя = "КомментарийВнутренний_КонтекстноеМеню_ВключитьВозможностьРедактирования"
				И НЕ ЭлементКонтекстногоМеню.Имя = "КомментарийВнутренний_КонтекстноеМеню_ПроверитьОрфографию" Тогда
				
				ЭлементКонтекстногоМеню.Доступность = ПолеМожноРедактировать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ПолеМожноРедактировать Тогда
			
			Если Событие.srcElement.id = "red_marker" Тогда
				
				РаботаСHTML_Клиент_ат.ОбработатьВызовКонтекстногоМеню(Событие, КоординатыЗаменяемогоСлова, СоответствиеКомандЗаменыСловам);	
				
				ИзменитьКонтестноеМенюЗаменыСловВнутреннегоКомментария(СоответствиеКомандЗаменыСловам);
				
			Иначе
				
				ИзменитьКонтестноеМенюЗаменыСловВнутреннегоКомментария(Неопределено, Истина);
				
			КонецЕсли;
			
		Иначе
			
			ИзменитьКонтестноеМенюЗаменыСловВнутреннегоКомментария(Неопределено, Истина);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьКонтестноеМенюЗаменыСловВнутреннегоКомментария(СоответствиеКомандЗаменыСловам, ТолькоОчистить = Ложь)
	
	РаботаСHTML_Сервер_ат.ИзменитьКонтестноеМенюЗаменыСловПоляHTML(ЭтаФорма,
		Элементы.КомментарийВнутренний.КонтекстноеМеню, СоответствиеКомандЗаменыСловам,
		ТолькоОчистить, "КомментарийВнутренний_ОбработчикКоманд");
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийВнутренний_ОбработчикКоманд(Команда, ВыбранноеЗначение)
	
	РаботаСHTML_Клиент_ат.ОбработчикКомандРаботыСHTML(ЭтаФорма, Команда, ВыбранноеЗначение,
		Элементы.КомментарийВнутренний, Элементы.КомментарийВнутренний_КоманднаяПанель,
		КоординатыЗаменяемогоСлова, СоответствиеКомандЗаменыСловам);
	
КонецПроцедуры

#КонецОбласти
